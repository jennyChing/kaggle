<!DOCTYPE html>
<html lang="en">
 <head>
  <meta charset="utf-8"/>
  <meta content="Free PHP tutorials by example" name="description"/>
  <meta content="php, mysql, apache, tutorial, book, practical, php" name="keywords"/>
  <meta content="Paul Hudson" name="author"/>
  <meta content="width=device-width, initial-scale=1, maximum-scale=1" name="viewport"/>
  <!-- SITE TITLE -->
  <title>
   Authentication over HTTP Hacking with PHP - Practical PHP
  </title>
  <!-- =========================
     FAV AND TOUCH ICONS AND FONT  
    ============================== -->
  <link href="/apple-touch-icon-57x57.png" rel="apple-touch-icon" sizes="57x57"/>
  <link href="/apple-touch-icon-60x60.png" rel="apple-touch-icon" sizes="60x60"/>
  <link href="/apple-touch-icon-72x72.png" rel="apple-touch-icon" sizes="72x72"/>
  <link href="/apple-touch-icon-76x76.png" rel="apple-touch-icon" sizes="76x76"/>
  <link href="/apple-touch-icon-114x114.png" rel="apple-touch-icon" sizes="114x114"/>
  <link href="/apple-touch-icon-120x120.png" rel="apple-touch-icon" sizes="120x120"/>
  <link href="/apple-touch-icon-144x144.png" rel="apple-touch-icon" sizes="144x144"/>
  <link href="/apple-touch-icon-152x152.png" rel="apple-touch-icon" sizes="152x152"/>
  <link href="/apple-touch-icon-180x180.png" rel="apple-touch-icon" sizes="180x180"/>
  <link href="/favicon-32x32.png" rel="icon" sizes="32x32" type="image/png"/>
  <link href="/android-chrome-192x192.png" rel="icon" sizes="192x192" type="image/png"/>
  <link href="/favicon-96x96.png" rel="icon" sizes="96x96" type="image/png"/>
  <link href="/favicon-16x16.png" rel="icon" sizes="16x16" type="image/png"/>
  <link href="/manifest.json" rel="manifest"/>
  <meta content="#da532c" name="msapplication-TileColor"/>
  <meta content="/mstile-144x144.png" name="msapplication-TileImage"/>
  <link href="http://fonts.googleapis.com/css?family=Cabin:400,600|Open+Sans:300,600,400" rel="stylesheet"/>
  <link href="http://www.hackingwithphp.com/15/4/3/authentication-over-http" rel="canonical"/>
  <!-- =========================
     STYLESHEETS   
    ============================== -->
  <!-- BOOTSTRAP AND ANIMATION -->
  <link href="/css/bootstrap.min.css" rel="stylesheet"/>
  <link href="/css/animate.min.css" rel="stylesheet"/>
  <!-- FONT ICONS -->
  <link href="/assets/icons/icons.css" rel="stylesheet"/>
  <!-- CAROUSEL AND LIGHTBOX -->
  <link href="/css/owl.theme.css" rel="stylesheet"/>
  <link href="/css/owl.carousel.css" rel="stylesheet"/>
  <link href="/css/nivo-lightbox.css" rel="stylesheet"/>
  <link href="/css/nivo_themes/default/default.css" rel="stylesheet"/>
  <!-- CUSTOM STYLESHEETS -->
  <link href="/css/styles.css" rel="stylesheet"/>
  <link href="/css/highlight.css" rel="stylesheet"/>
  <!-- RESPONSIVE FIXES -->
  <link href="/css/responsive.css" rel="stylesheet"/>
  <!-- COLORS -->
  <link href="/css/colors/blue.css" rel="stylesheet"/>
  <!-- DEFAULT COLOR/ CURRENTLY USING -->
  <!-- &lt;link rel="stylesheet" href="css/colors/red.css"&gt; -->
  <!-- &lt;link rel="stylesheet" href="css/colors/green.css"&gt; -->
  <!-- &lt;link rel="stylesheet" href="css/colors/green2.css"&gt; -->
  <!-- &lt;link rel="stylesheet" href="css/colors/purple.css"&gt; -->
  <!-- &lt;link rel="stylesheet" href="css/colors/orange.css"&gt; -->
  <!--[if lt IE 9]&gt;
			&lt;script src="/js/html5shiv.min.js"&gt;&lt;/script&gt;
    &lt;![endif]-->
  <!--[if gte IE 9]&gt;
      &lt;style type="text/css"&gt;
        .standard-button,
        .navbar-register-button {
       filter: none;
        }
      &lt;/style&gt;
    &lt;![endif]-->
  <!-- ****************
      After neccessary customization/modification, Please minify HTML/CSS according to http://browserdiet.com/en/ for better performance
     **************** -->
  <style>
   ul li {
            list-style: disc;
        }

        ol li {
            list-style: inherit;
        }

        ul, ol {
            padding-left: 60px!important;
        }

        a.offset-anchor {
            display: block; position: relative; top: -40px; visibility: hidden;
        }

        h2.spaced, p.spaced {
            margin-top: 40px;
        }

        div.funcprototypes {
            background-color: #f7f7f7;
            border: 1px dashed #e0e0e0;
            padding: 10px;
            margin-bottom: 30px;
        }

        div.funcprototypes p {
            margin-bottom: 0;
        }



        div.computeroutput  {
            background-color: #fffff2;
            padding: 10px;
            border: 1px solid #e5e5c0;
            margin: 5px;
            margin-bottom: 30px;
            border-radius: 5px;
        }

        div.computeroutput code {
            padding: 0;
        }

        div.caution     {
            background-color: #ffeeee; 
            padding: 10px; 
            border: 1px dashed #ffaaaa; 
            margin-top: 30px;
            margin-bottom: 30px;
            border-radius: 5px;
        }

        div.caution p:last-child {
            margin-bottom: 0;
        }

        p.funcprototype     {
            margin: 0;
        }

        table.bodytext  {
            border: 1px solid #AAAAAA!important;
            border-spacing: 0;
            border-collapse: collapse!important;
            margin-bottom: 40px;
        }

        table.bodytext  td {
            border: 1px solid #AAAAAA!important;
            padding: 10px;
        }


        div.tight   p {
            margin-top: 0;
            margin-bottom: 0;
            padding-top: 0;
            padding-bottom: 0;
        }

        div.tight   {
            margin-left: 10px;
            margin-bottom: 20px;
        }

        h3 {
            margin-top: 50px;
            margin-bottom: 10px;
        }

        h4 {
            margin-top: 40px;
        }

        pre {
            background-color: #f8f8f8;
        }

        code {
            color: black;
            background-color: transparent;
        }

        img {
            border: 1px solid black;
            margin: 20px;
            max-width: 95%;
        }

        div.warning {
            border: 1px dashed red;
            background-color: rgba(255, 0, 0, 0.05);
            padding: 20px;
            margin: 20px;
            border-radius: 15px;
        }

        div.warning h2 {
            font-size: 150%;
            line-height: 100%;
            margin: 0;
            padding-bottom: 10px;
        }

        div.warning p {
            line-height: 100%;
            margin: 0;
        }

        pre {
            margin-bottom: 30px;
            overflow-x: auto;
            word-wrap: normal;
        }

        pre code {
            white-space: pre;            
        }

        td p {
            margin: auto;
        }
  </style>
 </head>
 <body>
  <!-- =========================
     SECTION: HOME / HEADER  
    ============================== -->
  <!-- STICKY NAVIGATION -->
  <div class="navbar navbar-inverse bs-docs-nav navbar-fixed-top sticky-navigation" role="navigation">
   <div class="container">
    <div class="navbar-header">
     <!-- LOGO -->
     <a class="navbar-brand" href="http://www.hackingwithphp.com">
      <p class="lead" style="margin-top: 5px; color: #999999;">
       <strong>
        Hacking with PHP
       </strong>
      </p>
     </a>
    </div>
    <div class="navbar-collapse collapse" id="stamp-navigation">
     <ul class="nav navbar-nav navbar-right login-register small-text">
      <li class="register-button js-register inpage-scroll">
       <p class="lead" style="margin-top: 5px;">
        Authentication over HTTP
       </p>
      </li>
     </ul>
    </div>
   </div>
  </div>
  <!-- /END STICKY NAVIGATION -->
  <section style="margin-top: 80px;">
   <div class="container">
    <div class="row">
     <div class="col-md-1" style="text-align: left;">
     </div>
     <div class="col-md-10" style="text-align: left;">
      <div style="text-align: center; margin-top: 10px; margin-bottom: 10px;">
       <script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js">
       </script>
       <!-- HWP Header -->
       <ins class="adsbygoogle" data-ad-client="ca-pub-3949792738673622" data-ad-slot="3781544920" style="display:inline-block;width:728px;height:90px">
       </ins>
       <script>
        (adsbygoogle = window.adsbygoogle || []).push({});
       </script>
      </div>
      <h1>
       Authentication over HTTP
      </h1>
      <p>
       HTTP authentication traditionally takes the form of .htaccess files scattered around various directories webmasters want to keep private. A typical .htaccess file, combined with a .htpasswd file, contains information about users that are allowed access to a directory and their password.
      </p>
      <p>
       Even though Apache allows you to customise these permissions, the system is far from flexible - hand-editing files each time you add users, or having to group authorised users together by password is a little behind the times.
      </p>
      <p>
       HTTP authentication is mostly just a matter of sending special HTTP headers to your client asking them to provide access codes, and it is straightforward to implement in PHP as long as you have configured PHP to run as an Apache module (see previous issue for our installation guide). Let's look at basic authentication by creating the file auth.php, which should look like this:
      </p>
      <pre>
       <code class="php">
        &lt;?php
    if (!isset($_SERVER['PHP_AUTH_USER'])) {
        header("WWW-Authenticate: Basic realm=\"Private Area\"");
        header("HTTP/1.0 401 Unauthorized");
        // only reached if authentication fails
        print "Sorry - you need valid credentials granted access to the private area!\n";
        exit;
    } else {
        // only reached if authentication succeeds
        print "Welcome to the private area, {$_SERVER['PHP_AUTH_USER']} - you used {$_SERVER['PHP_AUTH_PW']} as your password.";
    }
?&gt;
       </code>
      </pre>
      <p>
       Braces are used inside our final print statement because we are printing out a value from inside an array, and the braces tell PHP to treat
       <font color="#0000BB">
        $_SERVER['PHP_AUTH_USER']
       </font>
       as an array variable that needs replacing with its value.
      </p>
      <p>
       To start the authentication process, we send two HTTP headers using PHP's
       <em>
        header()
       </em>
       function. With
       <em>
        header()
       </em>
       , you can send any HTTP header you want, so long as you send them all before you send any HTML. I will be mentioning
       <em>
        header()
       </em>
       in several subsequent articles, but right now we are just interested in the WWW-Authenticate header and HTTP status codes.
      </p>
      <p>
       WWW-Authenticate allows us to define the area, or _realm_, to which we are limiting access. It might be "Internet Mail Gateway", "Members Area", or, in our example, "Private Area". This realm name is usually shown to users when they are prompted for their username and password.
      </p>
      <p>
       The second
       <em>
        header()
       </em>
       function sends the HTTP status "401", which means "no access". This most often means no username and password have been entered, but it may also mean the details entered were incorrect. Therefore, while WWW-Authenticate tells the browser what response is required to authenticate, the 401 header says "no entry" - you need both to perform authentication.
      </p>
      <p>
       If your user clicks "Cancel" they should be presented with something other than a blank page. In our example above, we have the print line beginning "Sorry - you need valid" ready for this eventuality.
      </p>
      <p>
       The last print statement, "Welcome to the private area" is for people who have authenticated successfully. All it takes to authenticate currently is a username and password - we don't check the values of the data, we just accept whatever they give us.
      </p>
      <pre>
       <code class="php">
        if (!isset($_SERVER['PHP_AUTH_USER'])) {
       </code>
      </pre>
      <p>
       That line forms the crux of authentication with PHP. When users submit authentication, PHP receives the username and password as
       <font color="#0000BB">
        $_SERVER['PHP_AUTH_USER']
       </font>
       and
       <font color="#0000BB">
        $_SERVER['PHP_AUTH_PW']
       </font>
       respectively. By checking whether
       <font color="#0000BB">
        $_SERVER['PHP_AUTH_USER']
       </font>
       is set, we are saying, "Have we received an authentication username from the client?" If we have not, we send a request for authentication using WWW-Authenticate and exit the script.
      </p>
      <p>
       When our visitors provide a username and password, the script is called again. This time the 'if' statement evaluates to true and we print out our welcome message. Most sites would want to perform some sort of username and password checking in order to make authentication worthwhile, so let us change the script to include simple credentials checking.
      </p>
      <pre>
       <code class="php">
        &lt;?php
    if (!isset($_SERVER['PHP_AUTH_USER'])) {
        header("WWW-Authenticate: Basic realm=\"Private Area\"");
        header("HTTP/1.0 401 Unauthorized");
        print "Sorry - you need valid credentials to be granted access!\n";
        exit;
    } else {
        if (($_SERVER['PHP_AUTH_USER'] == 'paul') &amp;&amp; ($_SERVER['PHP_AUTH_PW'] == 'hudson')) {
            print "Welcome to the private area!";
        } else {
            header("WWW-Authenticate: Basic realm=\"Private Area\"");
            header("HTTP/1.0 401 Unauthorized");
            print "Sorry - you need valid credentials to be granted access!\n";
            exit;
        }
    }
?&gt;
       </code>
      </pre>
      <p>
       The modified script above now only allows users that provide the username 'paul' and the password 'hudson'. We have two conditions combined using AND (&amp;&amp;), which means that the 'if' statement only evaluates to true if the username is 'paul' and the password is 'hudson'.
      </p>
      <p>
       Our system is now more powerful, but we still need to hard code usernames and passwords for everyone we want to have access to our realm.
      </p>
      <p>
      </p>
      <div style="text-align: center">
       <p>
        <strong>
         Next chapter:
         <a href="/15/4/4/dynamic-authentication">
          Dynamic authentication &gt;&gt;
         </a>
        </strong>
       </p>
       <p>
        Previous chapter:
        <a href="/15/4/2/reading-queued-headers">
         Reading queued headers
        </a>
       </p>
       <p>
        Jump to:
        <select class="form-control" id="JumpTo" name="related" style="display: inline; width: auto">
         <option value="15/0/0/networks">
          Networks
         </option>
         <option value="15/1/0/sockets">
          Sockets
         </option>
         <option value="15/1/1/sockets-are-files-fsockopen">
          Sockets are files
         </option>
         <option value="15/1/2/making-a-simple-search-engine">
          Making a simple search engine
         </option>
         <option value="15/1/3/sockets-arent-all-about-http">
          Sockets aren't all about HTTP
         </option>
         <option value="15/1/4/sockets-can-be-servers-socket_create_listen-socket_accept-socket">
          Sockets can be servers
         </option>
         <option value="15/1/5/sockets-can-be-powerful">
          Sockets can be powerful
         </option>
         <option value="15/2/0/domain-resolution-functions-dns_check_record-dns_get_mx-and-dns_">
          Domain resolution functions
         </option>
         <option value="15/3/0/host-and-ip-resolution-gethostbyaddr-gethostbyname-and-gethostby">
          Host and IP resolution
         </option>
         <option value="15/4/0/http">
          HTTP
         </option>
         <option value="15/4/1/sending-custom-headers-header-and-headers_sent">
          Sending custom headers
         </option>
         <option value="15/4/2/reading-queued-headers-headers_list">
          Reading queued headers
         </option>
         <option selected="selected" style="font-weight: bold;" value="15/4/3/authentication-over-http">
          Authentication over HTTP
         </option>
         <option value="15/4/4/dynamic-authentication">
          Dynamic authentication
         </option>
         <option value="15/5/0/sending-mail-mail">
          Sending mail
         </option>
         <option value="15/5/1/mime-types-mime_content_type">
          MIME types
         </option>
         <option value="15/5/2/easier-mail-sending-with-pearmail">
          Easier mail sending with PEAR::Mail
         </option>
         <option value="15/5/3/sending-mixed-type-messages-with-pearmail_mime">
          Sending mixed-type messages with PEAR::Mail_Mime
         </option>
         <option value="15/5/4/sending-attachments-at-last">
          Sending attachments (at last!)
         </option>
         <option value="15/6/0/reading-mail">
          Reading mail
         </option>
         <option value="15/6/1/opening-a-mailbox-imap_open-and-imap_close">
          Opening a mailbox
         </option>
         <option value="15/6/2/reading-message-information-imap_headers-and-imap_header">
          Reading message information
         </option>
         <option value="15/6/3/reading-message-contents-imap_num_msg-and-imap_body">
          Reading message contents
         </option>
         <option value="15/7/0/dealing-with-mime-encoded-messages-imap_fetchbody">
          Dealing with MIME-encoded messages
         </option>
         <option value="15/8/0/mail-management-imap_sort-imap_delete-imap_undelete-imap_expunge">
          Mail management
         </option>
         <option value="15/9/0/transferring-files-over-ftp-ftp_connect-ftp_login-ftp_pasv-ftp_c">
          Transferring files over FTP
         </option>
         <option value="15/9/1/other-helpful-ftp-functions-ftp_put-ftp_systype-ftp_rename-ftp_m">
          Other helpful FTP functions
         </option>
         <option value="15/10/0/curl">
          Curl
         </option>
         <option value="15/10/1/installing-curl">
          Installing Curl
         </option>
         <option value="15/10/2/your-first-curl-scripts-curl_init-curl_setopt-curl_exec-curl_clo">
          Your first Curl scripts
         </option>
         <option value="15/10/3/the-abridged-list-of-curl-options">
          The abridged list of Curl options
         </option>
         <option value="15/10/4/debugging-curl">
          Debugging Curl
         </option>
         <option value="15/11/0/custom-data-stream-handling">
          Custom data stream handling
         </option>
         <option value="15/11/1/the-morse-code-stream-stream_wrapper_register">
          The Morse code stream
         </option>
         <option value="15/12/0/summary">
          Summary
         </option>
         <option value="15/13/0/exercises">
          Exercises
         </option>
         <option value="15/14/0/further-reading">
          Further reading
         </option>
         <option value="15/15/0/next-chapter">
          Next chapter
         </option>
        </select>
        <input class="btn btn-primary" onclick="var jumpto = document.getElementById('JumpTo'); location.href = '/' + jumpto.value; " type="button" value="Go"/>
       </p>
       <p>
       </p>
       <p>
        Home:
        <a href="/">
         Table of Contents
        </a>
       </p>
      </div>
      <div style="text-align: center; margin-top: 50px; margin-bottom: 50px;">
       <script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js">
       </script>
       <!-- HWP Footer -->
       <ins class="adsbygoogle" data-ad-client="ca-pub-3949792738673622" data-ad-slot="6037007320" style="display:inline-block;width:728px;height:90px">
       </ins>
       <script>
        (adsbygoogle = window.adsbygoogle || []).push({});
       </script>
      </div>
      <p align="right" style="margin-bottom: 50px; margin-top: 100px; color: #777777">
       Copyright 2015 Paul Hudson.
       <a href="http://twitter.com/twostraws">
        Follow me: @twostraws
       </a>
       .
      </p>
     </div>
     <div class="col-md-1" style="text-align: left;">
     </div>
    </div>
   </div>
  </section>
  <!-- =========================
		 SCRIPTS   
		============================== -->
  <script src="/js/jquery.min.js">
  </script>
  <script src="/js/bootstrap.min.js">
  </script>
  <script src="/js/jquery.nav.js">
  </script>
  <script src="/js/nivo-lightbox.min.js">
  </script>
  <script src="/js/owl.carousel.min.js">
  </script>
  <script src="/js/jquery.ajaxchimp.min.js">
  </script>
  <script src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/8.5/highlight.min.js">
  </script>
  <script>
   hljs.initHighlightingOnLoad();
  </script>
  <!-- CUSTOM JS  -->
  <script src="/js/custom.js">
  </script>
  <script>
   (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
			(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
			m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
			})(window,document,'script','//www.google-analytics.com/analytics.js','ga');

			ga('create', 'UA-58275818-2', 'auto');
			ga('send', 'pageview');
  </script>
 </body>
</html>