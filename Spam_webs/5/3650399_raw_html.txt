<!DOCTYPE html>
<!--[if IE 7]&gt;&lt;html class="layout-wrapper ie ie7 lte9 lte8 lte7"&gt;&lt;![endif]-->
<!--[if IE 8]&gt;&lt;html class="layout-wrapper ie ie8 lte9 lte8"&gt;&lt;![endif]-->
<!--[if IE 9]&gt;&lt;html class="layout-wrapper ie ie9 lte9"&gt;&lt;![endif]-->
<!--[if (gte IE 9)|!(IE)]&lt;!-->
<html class="layout-wrapper">
 <head>
  <title>
   How to Detect Java Memory Leaks | Toptal
  </title>
  <meta content="While Javas garbage collector does its best, even the most experienced programmers fall prey to memory leaks. Learn why they occurand how to fix them." name="description"/>
  <meta charset="utf-8"/>
  <meta content="IE=edge,chrome=1" http-equiv="X-UA-Compatible"/>
  <script type="text/javascript">
   window.NREUM||(NREUM={});NREUM.info={"beacon":"bam.nr-data.net","errorBeacon":"bam.nr-data.net","licenseKey":"e3359cee6b","applicationID":"2530279","transactionName":"JV0NEUYJCQkARxgVEwReCgYbFgoWEUYYFg4JRQ==","queueTime":0,"applicationTime":43,"agent":"js-agent.newrelic.com/nr-632.min.js"}
  </script>
  <script type="text/javascript">
   (window.NREUM||(NREUM={})).loader_config={xpid:"VgcEVlJaGwEFV1FQAAg="};window.NREUM||(NREUM={}),__nr_require=function(t,e,n){function r(n){if(!e[n]){var o=e[n]={exports:{}};t[n][0].call(o.exports,function(e){var o=t[n][1][e];return r(o?o:e)},o,o.exports)}return e[n].exports}if("function"==typeof __nr_require)return __nr_require;for(var o=0;o&lt;n.length;o++)r(n[o]);return r}({QJf3ax:[function(t,e){function n(t){function e(e,n,a){t&amp;&amp;t(e,n,a),a||(a={});for(var c=s(e),f=c.length,u=i(a,o,r),d=0;f&gt;d;d++)c[d].apply(u,n);return u}function a(t,e){f[t]=s(t).concat(e)}function s(t){return f[t]||[]}function c(){return n(e)}var f={};return{on:a,emit:e,create:c,listeners:s,_events:f}}function r(){return{}}var o="nr@context",i=t("gos");e.exports=n()},{gos:"7eSDFh"}],ee:[function(t,e){e.exports=t("QJf3ax")},{}],3:[function(t){function e(t){try{i.console&amp;&amp;console.log(t)}catch(e){}}var n,r=t("ee"),o=t(1),i={};try{n=localStorage.getItem("__nr_flags").split(","),console&amp;&amp;"function"==typeof console.log&amp;&amp;(i.console=!0,-1!==n.indexOf("dev")&amp;&amp;(i.dev=!0),-1!==n.indexOf("nr_dev")&amp;&amp;(i.nrDev=!0))}catch(a){}i.nrDev&amp;&amp;r.on("internal-error",function(t){e(t.stack)}),i.dev&amp;&amp;r.on("fn-err",function(t,n,r){e(r.stack)}),i.dev&amp;&amp;(e("NR AGENT IN DEVELOPMENT MODE"),e("flags: "+o(i,function(t){return t}).join(", ")))},{1:23,ee:"QJf3ax"}],4:[function(t){function e(t,e,n,i,s){try{c?c-=1:r("err",[s||new UncaughtException(t,e,n)])}catch(f){try{r("ierr",[f,(new Date).getTime(),!0])}catch(u){}}return"function"==typeof a?a.apply(this,o(arguments)):!1}function UncaughtException(t,e,n){this.message=t||"Uncaught error with no additional information",this.sourceURL=e,this.line=n}function n(t){r("err",[t,(new Date).getTime()])}var r=t("handle"),o=t(6),i=t("ee"),a=window.onerror,s=!1,c=0;t("loader").features.err=!0,t(5),window.onerror=e;try{throw new Error}catch(f){"stack"in f&amp;&amp;(t(1),t(2),"addEventListener"in window&amp;&amp;t(3),window.XMLHttpRequest&amp;&amp;XMLHttpRequest.prototype&amp;&amp;XMLHttpRequest.prototype.addEventListener&amp;&amp;window.XMLHttpRequest&amp;&amp;XMLHttpRequest.prototype&amp;&amp;XMLHttpRequest.prototype.addEventListener&amp;&amp;!/CriOS/.test(navigator.userAgent)&amp;&amp;t(4),s=!0)}i.on("fn-start",function(){s&amp;&amp;(c+=1)}),i.on("fn-err",function(t,e,r){s&amp;&amp;(this.thrown=!0,n(r))}),i.on("fn-end",function(){s&amp;&amp;!this.thrown&amp;&amp;c&gt;0&amp;&amp;(c-=1)}),i.on("internal-error",function(t){r("ierr",[t,(new Date).getTime(),!0])})},{1:10,2:9,3:7,4:11,5:3,6:24,ee:"QJf3ax",handle:"D5DuLP",loader:"G9z0Bl"}],5:[function(t){t("loader").features.ins=!0},{loader:"G9z0Bl"}],6:[function(t){function e(){}if(window.performance&amp;&amp;window.performance.timing&amp;&amp;window.performance.getEntriesByType){var n=t("ee"),r=t("handle"),o=t(1),i=t(2);t("loader").features.stn=!0,t(3),n.on("fn-start",function(t){var e=t[0];e instanceof Event&amp;&amp;(this.bstStart=Date.now())}),n.on("fn-end",function(t,e){var n=t[0];n instanceof Event&amp;&amp;r("bst",[n,e,this.bstStart,Date.now()])}),o.on("fn-start",function(t,e,n){this.bstStart=Date.now(),this.bstType=n}),o.on("fn-end",function(t,e){r("bstTimer",[e,this.bstStart,Date.now(),this.bstType])}),i.on("fn-start",function(){this.bstStart=Date.now()}),i.on("fn-end",function(t,e){r("bstTimer",[e,this.bstStart,Date.now(),"requestAnimationFrame"])}),n.on("pushState-start",function(){this.time=Date.now(),this.startPath=location.pathname+location.hash}),n.on("pushState-end",function(){r("bstHist",[location.pathname+location.hash,this.startPath,this.time])}),"addEventListener"in window.performance&amp;&amp;(window.performance.addEventListener("webkitresourcetimingbufferfull",function(){r("bstResource",[window.performance.getEntriesByType("resource")]),window.performance.webkitClearResourceTimings()},!1),window.performance.addEventListener("resourcetimingbufferfull",function(){r("bstResource",[window.performance.getEntriesByType("resource")]),window.performance.clearResourceTimings()},!1)),document.addEventListener("scroll",e,!1),document.addEventListener("keypress",e,!1),document.addEventListener("click",e,!1)}},{1:10,2:9,3:8,ee:"QJf3ax",handle:"D5DuLP",loader:"G9z0Bl"}],7:[function(t,e){function n(t){i.inPlace(t,["addEventListener","removeEventListener"],"-",r)}function r(t){return t[1]}var o=(t(1),t("ee").create()),i=t(2)(o),a=t("gos");if(e.exports=o,n(window),"getPrototypeOf"in Object){for(var s=document;s&amp;&amp;!s.hasOwnProperty("addEventListener");)s=Object.getPrototypeOf(s);s&amp;&amp;n(s);for(var c=XMLHttpRequest.prototype;c&amp;&amp;!c.hasOwnProperty("addEventListener");)c=Object.getPrototypeOf(c);c&amp;&amp;n(c)}else XMLHttpRequest.prototype.hasOwnProperty("addEventListener")&amp;&amp;n(XMLHttpRequest.prototype);o.on("addEventListener-start",function(t){if(t[1]){var e=t[1];"function"==typeof e?this.wrapped=t[1]=a(e,"nr@wrapped",function(){return i(e,"fn-",null,e.name||"anonymous")}):"function"==typeof e.handleEvent&amp;&amp;i.inPlace(e,["handleEvent"],"fn-")}}),o.on("removeEventListener-start",function(t){var e=this.wrapped;e&amp;&amp;(t[1]=e)})},{1:24,2:25,ee:"QJf3ax",gos:"7eSDFh"}],8:[function(t,e){var n=(t(2),t("ee").create()),r=t(1)(n);e.exports=n,r.inPlace(window.history,["pushState"],"-")},{1:25,2:24,ee:"QJf3ax"}],9:[function(t,e){var n=(t(2),t("ee").create()),r=t(1)(n);e.exports=n,r.inPlace(window,["requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","msRequestAnimationFrame"],"raf-"),n.on("raf-start",function(t){t[0]=r(t[0],"fn-")})},{1:25,2:24,ee:"QJf3ax"}],10:[function(t,e){function n(t,e,n){t[0]=o(t[0],"fn-",null,n)}var r=(t(2),t("ee").create()),o=t(1)(r);e.exports=r,o.inPlace(window,["setTimeout","setInterval","setImmediate"],"setTimer-"),r.on("setTimer-start",n)},{1:25,2:24,ee:"QJf3ax"}],11:[function(t,e){function n(){f.inPlace(this,p,"fn-")}function r(t,e){f.inPlace(e,["onreadystatechange"],"fn-")}function o(t,e){return e}function i(t,e){for(var n in t)e[n]=t[n];return e}var a=t("ee").create(),s=t(1),c=t(2),f=c(a),u=c(s),d=window.XMLHttpRequest,p=["onload","onerror","onabort","onloadstart","onloadend","onprogress","ontimeout"];e.exports=a,window.XMLHttpRequest=function(t){var e=new d(t);try{a.emit("new-xhr",[],e),u.inPlace(e,["addEventListener","removeEventListener"],"-",o),e.addEventListener("readystatechange",n,!1)}catch(r){try{a.emit("internal-error",[r])}catch(i){}}return e},i(d,XMLHttpRequest),XMLHttpRequest.prototype=d.prototype,f.inPlace(XMLHttpRequest.prototype,["open","send"],"-xhr-",o),a.on("send-xhr-start",r),a.on("open-xhr-start",r)},{1:7,2:25,ee:"QJf3ax"}],12:[function(t){function e(t){var e=this.params,r=this.metrics;if(!this.ended){this.ended=!0;for(var i=0;c&gt;i;i++)t.removeEventListener(s[i],this.listener,!1);if(!e.aborted){if(r.duration=(new Date).getTime()-this.startTime,4===t.readyState){e.status=t.status;var a=t.responseType,f="arraybuffer"===a||"blob"===a||"json"===a?t.response:t.responseText,u=n(f);if(u&amp;&amp;(r.rxSize=u),this.sameOrigin){var d=t.getResponseHeader("X-NewRelic-App-Data");d&amp;&amp;(e.cat=d.split(", ").pop())}}else e.status=0;r.cbTime=this.cbTime,o("xhr",[e,r,this.startTime])}}}function n(t){if("string"==typeof t&amp;&amp;t.length)return t.length;if("object"!=typeof t)return void 0;if("undefined"!=typeof ArrayBuffer&amp;&amp;t instanceof ArrayBuffer&amp;&amp;t.byteLength)return t.byteLength;if("undefined"!=typeof Blob&amp;&amp;t instanceof Blob&amp;&amp;t.size)return t.size;if("undefined"!=typeof FormData&amp;&amp;t instanceof FormData)return void 0;try{return JSON.stringify(t).length}catch(e){return void 0}}function r(t,e){var n=i(e),r=t.params;r.host=n.hostname+":"+n.port,r.pathname=n.pathname,t.sameOrigin=n.sameOrigin}if(window.XMLHttpRequest&amp;&amp;XMLHttpRequest.prototype&amp;&amp;XMLHttpRequest.prototype.addEventListener&amp;&amp;!/CriOS/.test(navigator.userAgent)){t("loader").features.xhr=!0;var o=t("handle"),i=t(2),a=t("ee"),s=["load","error","abort","timeout"],c=s.length,f=t(1);t(4),t(3),a.on("new-xhr",function(){this.totalCbs=0,this.called=0,this.cbTime=0,this.end=e,this.ended=!1,this.xhrGuids={}}),a.on("open-xhr-start",function(t){this.params={method:t[0]},r(this,t[1]),this.metrics={}}),a.on("open-xhr-end",function(t,e){"loader_config"in NREUM&amp;&amp;"xpid"in NREUM.loader_config&amp;&amp;this.sameOrigin&amp;&amp;e.setRequestHeader("X-NewRelic-ID",NREUM.loader_config.xpid)}),a.on("send-xhr-start",function(t,e){var r=this.metrics,o=t[0],i=this;if(r&amp;&amp;o){var f=n(o);f&amp;&amp;(r.txSize=f)}this.startTime=(new Date).getTime(),this.listener=function(t){try{"abort"===t.type&amp;&amp;(i.params.aborted=!0),("load"!==t.type||i.called===i.totalCbs&amp;&amp;(i.onloadCalled||"function"!=typeof e.onload))&amp;&amp;i.end(e)}catch(n){try{a.emit("internal-error",[n])}catch(r){}}};for(var u=0;c&gt;u;u++)e.addEventListener(s[u],this.listener,!1)}),a.on("xhr-cb-time",function(t,e,n){this.cbTime+=t,e?this.onloadCalled=!0:this.called+=1,this.called!==this.totalCbs||!this.onloadCalled&amp;&amp;"function"==typeof n.onload||this.end(n)}),a.on("xhr-load-added",function(t,e){var n=""+f(t)+!!e;this.xhrGuids&amp;&amp;!this.xhrGuids[n]&amp;&amp;(this.xhrGuids[n]=!0,this.totalCbs+=1)}),a.on("xhr-load-removed",function(t,e){var n=""+f(t)+!!e;this.xhrGuids&amp;&amp;this.xhrGuids[n]&amp;&amp;(delete this.xhrGuids[n],this.totalCbs-=1)}),a.on("addEventListener-end",function(t,e){e instanceof XMLHttpRequest&amp;&amp;"load"===t[0]&amp;&amp;a.emit("xhr-load-added",[t[1],t[2]],e)}),a.on("removeEventListener-end",function(t,e){e instanceof XMLHttpRequest&amp;&amp;"load"===t[0]&amp;&amp;a.emit("xhr-load-removed",[t[1],t[2]],e)}),a.on("fn-start",function(t,e,n){e instanceof XMLHttpRequest&amp;&amp;("onload"===n&amp;&amp;(this.onload=!0),("load"===(t[0]&amp;&amp;t[0].type)||this.onload)&amp;&amp;(this.xhrCbStart=(new Date).getTime()))}),a.on("fn-end",function(t,e){this.xhrCbStart&amp;&amp;a.emit("xhr-cb-time",[(new Date).getTime()-this.xhrCbStart,this.onload,e],e)})}},{1:"XL7HBI",2:13,3:11,4:7,ee:"QJf3ax",handle:"D5DuLP",loader:"G9z0Bl"}],13:[function(t,e){e.exports=function(t){var e=document.createElement("a"),n=window.location,r={};e.href=t,r.port=e.port;var o=e.href.split("://");return!r.port&amp;&amp;o[1]&amp;&amp;(r.port=o[1].split("/")[0].split("@").pop().split(":")[1]),r.port&amp;&amp;"0"!==r.port||(r.port="https"===o[0]?"443":"80"),r.hostname=e.hostname||n.hostname,r.pathname=e.pathname,r.protocol=o[0],"/"!==r.pathname.charAt(0)&amp;&amp;(r.pathname="/"+r.pathname),r.sameOrigin=!e.hostname||e.hostname===document.domain&amp;&amp;e.port===n.port&amp;&amp;e.protocol===n.protocol,r}},{}],14:[function(t,e){function n(t){return function(){r(t,[(new Date).getTime()].concat(i(arguments)))}}var r=t("handle"),o=t(1),i=t(2);"undefined"==typeof window.newrelic&amp;&amp;(newrelic=window.NREUM);var a=["setPageViewName","addPageAction","setCustomAttribute","finished","addToTrace","inlineHit","noticeError"];o(a,function(t,e){window.NREUM[e]=n("api-"+e)}),e.exports=window.NREUM},{1:23,2:24,handle:"D5DuLP"}],"7eSDFh":[function(t,e){function n(t,e,n){if(r.call(t,e))return t[e];var o=n();if(Object.defineProperty&amp;&amp;Object.keys)try{return Object.defineProperty(t,e,{value:o,writable:!0,enumerable:!1}),o}catch(i){}return t[e]=o,o}var r=Object.prototype.hasOwnProperty;e.exports=n},{}],gos:[function(t,e){e.exports=t("7eSDFh")},{}],handle:[function(t,e){e.exports=t("D5DuLP")},{}],D5DuLP:[function(t,e){function n(t,e,n){return r.listeners(t).length?r.emit(t,e,n):(o[t]||(o[t]=[]),void o[t].push(e))}var r=t("ee").create(),o={};e.exports=n,n.ee=r,r.q=o},{ee:"QJf3ax"}],id:[function(t,e){e.exports=t("XL7HBI")},{}],XL7HBI:[function(t,e){function n(t){var e=typeof t;return!t||"object"!==e&amp;&amp;"function"!==e?-1:t===window?0:i(t,o,function(){return r++})}var r=1,o="nr@id",i=t("gos");e.exports=n},{gos:"7eSDFh"}],G9z0Bl:[function(t,e){function n(){var t=p.info=NREUM.info,e=f.getElementsByTagName("script")[0];if(t&amp;&amp;t.licenseKey&amp;&amp;t.applicationID&amp;&amp;e){s(d,function(e,n){e in t||(t[e]=n)});var n="https"===u.split(":")[0]||t.sslForHttp;p.proto=n?"https://":"http://",a("mark",["onload",i()]);var r=f.createElement("script");r.src=p.proto+t.agent,e.parentNode.insertBefore(r,e)}}function r(){"complete"===f.readyState&amp;&amp;o()}function o(){a("mark",["domContent",i()])}function i(){return(new Date).getTime()}var a=t("handle"),s=t(1),c=(t(2),window),f=c.document,u=(""+location).split("?")[0],d={beacon:"bam.nr-data.net",errorBeacon:"bam.nr-data.net",agent:"js-agent.newrelic.com/nr-632.min.js"},p=e.exports={offset:i(),origin:u,features:{}};f.addEventListener?(f.addEventListener("DOMContentLoaded",o,!1),c.addEventListener("load",n,!1)):(f.attachEvent("onreadystatechange",r),c.attachEvent("onload",n)),a("mark",["firstbyte",i()])},{1:23,2:14,handle:"D5DuLP"}],loader:[function(t,e){e.exports=t("G9z0Bl")},{}],23:[function(t,e){function n(t,e){var n=[],o="",i=0;for(o in t)r.call(t,o)&amp;&amp;(n[i]=e(o,t[o]),i+=1);return n}var r=Object.prototype.hasOwnProperty;e.exports=n},{}],24:[function(t,e){function n(t,e,n){e||(e=0),"undefined"==typeof n&amp;&amp;(n=t?t.length:0);for(var r=-1,o=n-e||0,i=Array(0&gt;o?0:o);++r&lt;o;)i[r]=t[e+r];return i}e.exports=n},{}],25:[function(t,e){function n(t){return!(t&amp;&amp;"function"==typeof t&amp;&amp;t.apply&amp;&amp;!t[i])}var r=t("ee"),o=t(1),i="nr@wrapper",a=Object.prototype.hasOwnProperty;e.exports=function(t){function e(t,e,r,a){function nrWrapper(){var n,i,s,f;try{i=this,n=o(arguments),s=r&amp;&amp;r(n,i)||{}}catch(d){u([d,"",[n,i,a],s])}c(e+"start",[n,i,a],s);try{return f=t.apply(i,n)}catch(p){throw c(e+"err",[n,i,p],s),p}finally{c(e+"end",[n,i,f],s)}}return n(t)?t:(e||(e=""),nrWrapper[i]=!0,f(t,nrWrapper),nrWrapper)}function s(t,r,o,i){o||(o="");var a,s,c,f="-"===o.charAt(0);for(c=0;c&lt;r.length;c++)s=r[c],a=t[s],n(a)||(t[s]=e(a,f?s+o:o,i,s))}function c(e,n,r){try{t.emit(e,n,r)}catch(o){u([o,e,n,r])}}function f(t,e){if(Object.defineProperty&amp;&amp;Object.keys)try{var n=Object.keys(t);return n.forEach(function(n){Object.defineProperty(e,n,{get:function(){return t[n]},set:function(e){return t[n]=e,e}})}),e}catch(r){u([r])}for(var o in t)a.call(t,o)&amp;&amp;(e[o]=t[o]);return e}function u(e){try{t.emit("internal-error",e)}catch(n){}}return t||(t=r),e.inPlace=s,e.flag=i,e}},{1:24,ee:"QJf3ax"}]},{},["G9z0Bl",4,12,6,5]);
  </script>
  <meta content="width=device-width, initial-scale=1.0" name="viewport"/>
  <script>
   var _rollbarConfig = {
    accessToken: "cc4cbdcfde904714a4fb77535e3229ae",
    captureUncaught: true,
    payload: {
      environment: "production"
    }
  };
  !function(a,b){function c(b){this.shimId=++h,this.notifier=null,this.parentShim=b,this.logger=function(){},a.console&amp;&amp;void 0===a.console.shimId&amp;&amp;(this.logger=a.console.log)}function d(b,c,d){a._rollbarWrappedError&amp;&amp;(d[4]||(d[4]=a._rollbarWrappedError),d[5]||(d[5]=a._rollbarWrappedError._rollbarContext),a._rollbarWrappedError=null),b.uncaughtError.apply(b,d),c&amp;&amp;c.apply(a,d)}function e(b){var d=c;return g(function(){if(this.notifier)return this.notifier[b].apply(this.notifier,arguments);var c=this,e="scope"===b;e&amp;&amp;(c=new d(this));var f=Array.prototype.slice.call(arguments,0),g={shim:c,method:b,args:f,ts:new Date};return a._rollbarShimQueue.push(g),e?c:void 0})}function f(a,b){if(b.hasOwnProperty&amp;&amp;b.hasOwnProperty("addEventListener")){var c=b.addEventListener;b.addEventListener=function(b,d,e){c.call(this,b,a.wrap(d),e)};var d=b.removeEventListener;b.removeEventListener=function(a,b,c){d.call(this,a,b&amp;&amp;b._wrapped?b._wrapped:b,c)}}}function g(a,b){return b=b||this.logger,function(){try{return a.apply(this,arguments)}catch(c){b("Rollbar internal error:",c)}}}var h=0;c.init=function(a,b){var e=b.globalAlias||"Rollbar";if("object"==typeof a[e])return a[e];a._rollbarShimQueue=[],a._rollbarWrappedError=null,b=b||{};var h=new c;return g(function(){if(h.configure(b),b.captureUncaught){var c=a.onerror;a.onerror=function(){var a=Array.prototype.slice.call(arguments,0);d(h,c,a)};var g,i,j="EventTarget,Window,Node,ApplicationCache,AudioTrackList,ChannelMergerNode,CryptoOperation,EventSource,FileReader,HTMLUnknownElement,IDBDatabase,IDBRequest,IDBTransaction,KeyOperation,MediaController,MessagePort,ModalWindow,Notification,SVGElementInstance,Screen,TextTrack,TextTrackCue,TextTrackList,WebSocket,WebSocketWorker,Worker,XMLHttpRequest,XMLHttpRequestEventTarget,XMLHttpRequestUpload".split(",");for(g=0;g&lt;j.length;++g)i=j[g],a[i]&amp;&amp;a[i].prototype&amp;&amp;f(h,a[i].prototype)}return a[e]=h,h},h.logger)()},c.prototype.loadFull=function(a,b,c,d,e){var f=g(function(){var a=b.createElement("script"),e=b.getElementsByTagName("script")[0];a.src=d.rollbarJsUrl,a.async=!c,a.onload=h,e.parentNode.insertBefore(a,e)},this.logger),h=g(function(){var b;if(void 0===a._rollbarPayloadQueue){var c,d,f,g;for(b=new Error("rollbar.js did not load");c=a._rollbarShimQueue.shift();)for(f=c.args,g=0;g&lt;f.length;++g)if(d=f[g],"function"==typeof d){d(b);break}}"function"==typeof e&amp;&amp;e(b)},this.logger);g(function(){c?f():a.addEventListener?a.addEventListener("load",f,!1):a.attachEvent("onload",f)},this.logger)()},c.prototype.wrap=function(b,c){try{var d;if(d="function"==typeof c?c:function(){return c||{}},"function"!=typeof b)return b;if(b._isWrap)return b;if(!b._wrapped){b._wrapped=function(){try{return b.apply(this,arguments)}catch(c){throw c._rollbarContext=d(),c._rollbarContext._wrappedSource=b.toString(),a._rollbarWrappedError=c,c}},b._wrapped._isWrap=!0;for(var e in b)b.hasOwnProperty(e)&amp;&amp;(b._wrapped[e]=b[e])}return b._wrapped}catch(f){return b}};for(var i="log,debug,info,warn,warning,error,critical,global,configure,scope,uncaughtError".split(","),j=0;j&lt;i.length;++j)c.prototype[i[j]]=e(i[j]);var k="//d37gvrvc0wt4s1.cloudfront.net/js/v1.1/rollbar.min.js";_rollbarConfig.rollbarJsUrl=_rollbarConfig.rollbarJsUrl||k;var l=c.init(a,_rollbarConfig);l.loadFull(a,b,!1,_rollbarConfig)}(window,document);
  </script>
  <meta content="Hunting Memory Leaks in Java" property="og:title"/>
  <meta content="http://assets.toptal.io/uploads/blog/post_image/14/toptal-blog-1_D.png" property="og:image"/>
  <meta content="Toptal Engineering Blog" property="og:site_name"/>
  <meta content="While Javas garbage collector does its best, even the most experienced programmers fall prey to memory leaks. Learn why they occurand how to fix them." property="og:description"/>
  <link href="https://plus.google.com/u/0/100859269700990329776/" rel="author"/>
  <meta content="2013-09-24" name="DC.date.issued"/>
  <link href="http://assets.toptal.io/assets/favicons/favicon-d558cf88252445f9769bd4ea06734470.png" rel="icon"/>
  <!--[if IE]&gt;&lt;link href="http://assets.toptal.io/assets/favicons/favicon-c831ef6da1505ca2a8437ee85c3f660f.ico" rel="shortcut icon" /&gt;&lt;![endif]-->
  <link href="http://assets.toptal.io/assets/favicons/touch_x57-722fff7ec79aeeb1ca671648da3d429e.png" rel="apple-touch-icon-precomposed" sizes="57x57"/>
  <link href="http://assets.toptal.io/assets/favicons/touch_x72-7d75babc0c8239a30cb967abd45c9bce.png" rel="apple-touch-icon-precomposed" sizes="72x72"/>
  <link href="http://assets.toptal.io/assets/favicons/touch_x114-1dc6a6de08c4c4cefff8b6eebb9dce3f.png" rel="apple-touch-icon-precomposed" sizes="114x114"/>
  <link href="http://assets.toptal.io/assets/favicons/touch_x57-722fff7ec79aeeb1ca671648da3d429e.png" rel="apple-touch-icon-precomposed"/>
  <meta content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" name="viewport"/>
  <link href="/blog.rss" rel="alternate" title="Toptal Engineering Blog" type="application/rss+xml"/>
  <link href="http://www.toptal.com/java/hunting-memory-leaks-in-java" rel="canonical"/>
  <script src="http://assets.toptal.io/assets/modernizr-88368b74e83fad3ed9b4cf8a9607710f.js">
  </script>
  <script type="text/javascript">
   // TODO: Figure out how to override Modernizr test
(function () {
  var isIE, noFlexboxClassName;
  isIE = /MSIE/.test(navigator.userAgent) &amp;&amp; !/Opera/.test(navigator.userAgent);
  isIE11 = !!window.MSInputMethodContext
  if (window.Modernizr &amp;&amp; (window.Modernizr.flexbox &amp;&amp; (isIE || isIE11))) {
    noFlexboxClassName = document.documentElement.className.replace('flexbox', 'no-flexbox');
    document.documentElement.className = noFlexboxClassName;
  }
})();
  </script>
  <!--[if (lte IE 8)]&gt;&lt;script src="http://assets.toptal.io/assets/html5shiv-cf3f156f36ffd376df0c920345f2c459.js"&gt;&lt;/script&gt;&lt;![endif]-->
  <script type="text/javascript">
   //&lt;![CDATA[
window.gon={};gon.flash={};gon.check_session_url="https:\/\/www.toptal.com\/signed_in";gon.shorten_url="https:\/\/www.toptal.com\/shorten_url";gon.geo_target_url="https:\/\/www.toptal.com\/api\/geo_target";gon.google_api_browser_key="AIzaSyDED9v55b-c1opDYMEDYBkOgDFGlBMICGY";gon.ga_settings={"group":"Blog posts"};gon.bounce_modal_settings={"blogDataUrl":"http:\/\/www.toptal.com\/blog\/subscribe","leadsDataUrl":"http:\/\/www.toptal.com\/api\/leads","companyEmailValidationUrl":"https:\/\/www.toptal.com\/api\/company_email_validations","show":true,"type":"skype","skill":"Java"};
//]]&gt;
  </script>
  <link debug="false" href="http://assets.toptal.io/assets/public/fonts-89f6a537db147f78080cc4532578e3e4.css" media="all" rel="stylesheet"/>
  <link debug="false" href="http://assets.toptal.io/assets/public-4f6116d650182c452d7689ca52aea00b.css" media="all" rel="stylesheet"/>
  <link debug="false" href="http://assets.toptal.io/assets/portal-b493c46b38d1799c09bdc34d4d3e9cad.css" media="all" rel="stylesheet"/>
  <link debug="false" href="http://assets.toptal.io/assets/blog-61c781a0243c7bb5dba76c55e8168d2b.css" media="all" rel="stylesheet"/>
  <!--[if (lte IE 8)]&gt;&lt;script src="//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js" debug="false"&gt;&lt;/script&gt;&lt;![endif]-->
  <!--[if (gte IE 9)|(!IE)]&gt;&lt;!-->
  <script debug="false" src="//ajax.googleapis.com/ajax/libs/jquery/2.0.3/jquery.min.js">
  </script>
  <script type="text/javascript">
   window.bounceModalSettings = gon['bounce_modal_settings'] || {show: false};
  </script>
  <script src="//cdn.optimizely.com/js/186204918.js">
  </script>
  <script type="text/javascript">
   window.optimizely = window.optimizely || [];
  </script>
 </head>
 <body class="layout" id="top">
  <div class="layout_layer" data-view="layout#layout">
   <header class="page_header" data-role="fixed-header">
    <div class="page_header_line">
    </div>
    <div class="page_header" data-view="layout#menu">
     <div class="grid-row is-light_gray">
      <div class="grid-row-inner is-wide has-padding page_header_top">
       <div class="page_header_top-logotype_wrapper">
        <div class="page_header_top-logotype">
         <a class="logo is-big is-link" href="http://www.toptal.com/">
          Toptal: Top Developers, Custom Software Development
         </a>
        </div>
       </div>
       <a class="page_header_top-expand" data-role="expand_menu" href="#">
        <span class="page_header_top-expand_icon">
        </span>
       </a>
       <nav class="page_header_top-nav_wrapper">
        <ul class="page_header_top-nav">
         <li class="page_header_top-nav_item" data-role="session_based" data-visible-when="signedin" style="display:none">
          <a class="button is-small is-light page_header_top-nav_link is-button" href="https://www.toptal.com/secure_redirect/default">
           Go to your Profile
          </a>
         </li>
         <li class="page_header_top-nav_item" data-role="session_based" data-visible-when="sessionless" style="display:none">
          <a class="button is-green_candy is-small page_header_top-nav_link is-button" href="https://www.toptal.com/companies/apply">
           Hire a Developer
          </a>
         </li>
         <li class="page_header_top-nav_item has-right_border" data-role="session_based" data-visible-when="sessionless" style="display:none">
          <a class="button is-green_candy is-small page_header_top-nav_link is-button" href="/developers">
           Apply as a Developer
          </a>
         </li>
         <li class="page_header_top-nav_item" data-role="session_based" data-visible-when="sessionless" style="display:none">
          <a class="button is-small is-light page_header_top-nav_link is-button" href="https://www.toptal.com/users/login">
           Login
          </a>
         </li>
        </ul>
       </nav>
      </div>
     </div>
     <nav class="grid-row has-top_border is-light_gray page_header_menu-wrapper" data-role="menu_wrapper">
      <div class="grid-row-inner is-wide has-small_padding page_header_menu">
       <div class="page_header_menu-items-wrapper">
        <ul class="page_header_menu-items" data-role="menu">
         <li class="page_header_menu-item is-home">
          <a class="page_header_menu-link" href="http://www.toptal.com/">
          </a>
         </li>
         <li class="page_header_menu-item is-top-3-percent">
          <a class="page_header_menu-link" href="/top-3-percent">
           Top 3%
          </a>
         </li>
         <li class="page_header_menu-item is-why">
          <a class="page_header_menu-link" href="/why">
           Why
          </a>
         </li>
         <li class="page_header_menu-item is-how">
          <a class="page_header_menu-link" href="/how">
           How
          </a>
         </li>
         <li class="page_header_menu-item is-what">
          <a class="page_header_menu-link" href="/what">
           What
          </a>
         </li>
         <li class="page_header_menu-item is-clients">
          <a class="page_header_menu-link" href="/clients">
           Clients
          </a>
         </li>
         <li class="page_header_menu-item is-about">
          <a class="page_header_menu-link" href="/about">
           About Us
          </a>
         </li>
         <li class="page_header_menu-item is-community">
          <a class="page_header_menu-link" href="/community">
           Community
          </a>
         </li>
         <li class="page_header_menu-item is-blog">
          <a class="page_header_menu-link" href="/blog">
           Blog
          </a>
         </li>
         <li class="page_header_menu-item is-contact">
          <a class="page_header_menu-link" href="/contact">
           Contact
          </a>
         </li>
         <li class="page_header_menu-item is-faq">
          <a class="page_header_menu-link" href="/faq">
           FAQ
          </a>
         </li>
         <li class="page_header_menu-item is-login" data="session_based" data-leave-it-invisible="" data-visible-when="signedin">
          <a class="button is-light is-small page_hader_menu-button is-login" href="https://www.toptal.com/secure_redirect/default">
           Go to your Profile
          </a>
         </li>
         <li class="page_header_menu-item is-join" data-leave-it-invisible="" data-role="session_based" data-visible-when="sessionless">
          <a class="button is-green_candy is-small page_hader_menu-button" href="https://www.toptal.com/companies/apply">
           Hire a developer
          </a>
         </li>
         <li class="page_header_menu-item is-join" data-leave-it-invisible="" data-role="session_based" data-visible-when="sessionless">
          <a class="button is-green_candy is-small page_hader_menu-button" href="/developers">
           Apply as a developer
          </a>
         </li>
         <li class="page_header_menu-item is-login" data-leave-it-invisible="" data-role="session_based" data-visible-when="sessionless">
          <a class="button is-light is-small page_hader_menu-button is-login" href="https://www.toptal.com/users/login">
           Login
          </a>
         </li>
         <li class="page_header_menu-item is-contacts">
          <ul class="page_header_menu-contact-items">
           <li class="page_header_menu-contact-item">
            Call us:
           </li>
           <li class="page_header_menu-contact-item">
            <a class="link is-dark page_header_menu-contact-link" href="tel:+18886043188">
             +1.888.604.3188
            </a>
           </li>
           <li class="page_header_menu-contact-item">
            <a class="page_header_menu-contact-link is-social is-facebook" href="https://www.facebook.com/pages/toptal/141928212544793" target="_blank">
             <span class="page_header_menu-contact-link-icon">
             </span>
            </a>
           </li>
           <li class="page_header_menu-contact-item">
            <a class="page_header_menu-contact-link is-social is-twitter" href="https://twitter.com/toptalllc" target="_blank">
             <span class="page_header_menu-contact-link-icon">
             </span>
            </a>
           </li>
           <li class="page_header_menu-contact-item">
            <a class="page_header_menu-contact-link is-social is-google_plus" href="https://plus.google.com/+Toptalllc/" target="_blank">
             <span class="page_header_menu-contact-link-icon">
             </span>
            </a>
           </li>
          </ul>
         </li>
        </ul>
       </div>
       <a class="button is-green_candy is-tiny page_header_menu-hire" href="https://www.toptal.com/companies/apply">
        Hire a developer
       </a>
       <ul class="page_header_menu-contact-items">
        <li class="page_header_menu-contact-item">
         Call us:
        </li>
        <li class="page_header_menu-contact-item">
         <a class="link is-dark page_header_menu-contact-link" href="tel:+18886043188">
          +1.888.604.3188
         </a>
        </li>
        <li class="page_header_menu-contact-item">
         <a class="page_header_menu-contact-link is-social is-facebook" href="https://www.facebook.com/pages/toptal/141928212544793" target="_blank">
          <span class="page_header_menu-contact-link-icon">
          </span>
         </a>
        </li>
        <li class="page_header_menu-contact-item">
         <a class="page_header_menu-contact-link is-social is-twitter" href="https://twitter.com/toptalllc" target="_blank">
          <span class="page_header_menu-contact-link-icon">
          </span>
         </a>
        </li>
        <li class="page_header_menu-contact-item">
         <a class="page_header_menu-contact-link is-social is-google_plus" href="https://plus.google.com/+Toptalllc/" target="_blank">
          <span class="page_header_menu-contact-link-icon">
          </span>
         </a>
        </li>
       </ul>
      </div>
     </nav>
    </div>
   </header>
   <main class="layout-main">
    <header class="grid-row has-top_border has-bottom_border post_cover is-post">
     <div class="grid-row-inner is-wide has-big_padding blog_title for-show">
     </div>
    </header>
    <article class="grid-row is-transparent">
     <div class="grid-row-inner is-wide">
      <div class="post_title">
       <h1 class="post_title-text">
        Hunting Memory Leaks in Java
       </h1>
       <a class="post_title-back" href="/blog">
        View all articles
       </a>
      </div>
     </div>
    </article>
    <section class="grid-row has-top_border is-transparent has-no_border" data-view="" id="main_content">
     <div class="grid-row-inner has-medium_padding two_columns_layout is-wide">
      <div class="two_columns_layout-content">
       <div class="post is-full">
        <div class="post_meta-wrapper post_header">
         <div class="post_header-triangle">
         </div>
         <div class="post_avatar post_meta-avatar">
          <img alt="Small 2012 11 07 14.51.17" class="post_avatar-image" src="http://assets.toptal.io/uploads/user/photo/2932/small_2012-11-07_14.51.17.jpg" width="50"/>
         </div>
         <div class="post_meta is-full">
          <div class="post_meta-author">
           <p>
            by
            <strong>
             <a class="link is-blue" href="/resume/jose-ferreira-de-souza-filho" target="_blank">
              Jose Ferreira de Souza Filho
             </a>
            </strong>
            - Java Engineer
@
            <a class="link is-blue" href="http://www.toptal.com" target="_blank">
             Toptal
            </a>
           </p>
          </div>
          <div class="post_meta-tags">
           <a href="/blog#java-posts">
            #Java
           </a>
           <a href="/blog#jvm-posts">
            #JVM
           </a>
           <a href="/blog#visualvm-posts">
            #VisualVM
           </a>
           <a href="/blog#memorymanagement-posts">
            #MemoryManagement
           </a>
          </div>
         </div>
         <div class="post_meta-extra">
          <div class="post_meta-extra_row">
           <div class="post_meta-extra_icon">
            <div class="post_meta-extra_icon_image is-share">
            </div>
           </div>
           <div class="post_share">
            <ul class="social_share">
             <li class="social_share-item is-hackernews">
              <a class="hn-button" data-count="horizontal" data-style="twitter" data-url="http://www.toptal.com/java/hunting-memory-leaks-in-java" href="https://news.ycombinator.com/submit">
               Hacker News
              </a>
             </li>
             <li class="social_share-item is-facebook">
              <div class="fb-like" data-href="http://www.toptal.com/java/hunting-memory-leaks-in-java" data-layout="button_count" data-send="false" data-show-faces="false" data-width="450">
              </div>
             </li>
             <li class="social_share-item is-google_plus">
              <div class="g-plus" data-action="share" data-annotation="bubble" data-href="http://www.toptal.com/java/hunting-memory-leaks-in-java">
              </div>
             </li>
             <li class="social_share-item is-linkedin">
              <script data-counter="right" data-url="http://www.toptal.com/java/hunting-memory-leaks-in-java" type="IN/Share">
              </script>
             </li>
             <li class="social_share-item is-twitter">
              <a class="twitter-share-button" data-hashtags="Java,JVM,VisualVM,MemoryManagement" data-text="" data-url="http://www.toptal.com/java/hunting-memory-leaks-in-java" data-via="toptalllc" href="https://twitter.com/share">
               Tweet
              </a>
             </li>
            </ul>
           </div>
          </div>
         </div>
        </div>
        <div class="content_body" data-subscribe="true" data-view="content#body">
         <p>
          Inexperienced programmers often think that Javas automatic garbage collection completely frees them from worrying about memory management. This is a common misperception: while the garbage collector does its best, its entirely possible for even the best programmer to fall prey to crippling memory leaks. Let me explain.
         </p>
         <p>
          A memory leak occurs when object references that are no longer needed are unnecessarily maintained. These leaks are
          <a href="http://msdn.microsoft.com/en-us/library/ms859408.aspx">
           bad
          </a>
          . For one, they put unnecessary pressure on your machine as your programs consume more and more resources. To make things worse, detecting these leaks can be difficult: static analysis often struggles to precisely identify these redundant references, and existing leak detection tools track and report fine-grained information about individual objects, producing results that are hard to interpret and lack precision.
         </p>
         <p>
          In other words, leaks are either too hard to identify, or identified in terms that are too specific to be useful.
         </p>
         <p>
          There actually four categories of memory issues with similar and overlapping symptoms, but varied causes and solutions:
         </p>
         <ul>
          <li>
           <strong>
            Performance
           </strong>
           : usually associated with excessive object creation and deletion, long delays in garbage collection, excessive operating system page swapping, and more.
          </li>
          <li>
           <strong>
            Resource constraints
           </strong>
           : occurs when theres either to little memory available or your memory is too
           <a href="http://en.wikipedia.org/wiki/Fragmentation_(computing)">
            fragmented
           </a>
           to allocate a large objectthis can be native or, more commonly, Java heap-related.
          </li>
          <li>
           <strong>
            Java heap leaks
           </strong>
           : the classic memory leak, in which Java objects are continuously created without being released. This is usually caused by latent object references.
          </li>
          <li>
           <strong>
            Native memory leaks
           </strong>
           : associated with any continuously growing memory utilization that is outside the Java heap, such as allocations made by JNI code, drivers or even JVM allocations.
          </li>
         </ul>
         <p>
          In this post, Ill focus on Java heaps leaks and outline an approach to detect such leaks based on
          <strong>
           Java VisualVM
          </strong>
          reports and utilizing a visual interface for analyzing Java technology-based applications while theyre running.
         </p>
         <p>
          But before you can prevent and hunt down memory leaks, you should understand how and why they occur. (
          <em>
           Note: If you have a good handle on the intricacies of memory leaks, you can
           <a href="#detecting-a-memory-leak">
            skip ahead
           </a>
           .
          </em>
          )
         </p>
         <h2 id="memory-leaks-a-primer">
          Memory Leaks: A Primer
         </h2>
         <p>
          For starters, think of memory leakage as a disease and Javas
          <code>
           OutOfMemoryError
          </code>
          (
          <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/OutOfMemoryError.html">
           OOM
          </a>
          , for brevity) as a symptom. But as with any disease,
          <strong>
           not all OOMs necessarily imply memory leaks
          </strong>
          : an OOM can occur due to the generation of a large number of local variables or other such events. On the other hand,
          <strong>
           not all memory leaks necessarily manifest themselves as OOMs
          </strong>
          , especially in the case of desktop applications or client applications (which arent run for very long without restarts).
         </p>
         <div class="pop_out_box is-full_width is-big">
          Think of memory leakage as a disease and the OutOfMemoryError as a symptom. But not all OutOfMemoryErrors imply memory leaks, and not all memory leaks manifest themselves as OutOfMemoryErrors.
         </div>
         <p>
          Why are these leaks so bad? Among other things, leaking blocks of memory during program execution often degrades system performance over time, as allocated but unused blocks of memory will have to be swapped out once the system runs out of free physical memory. Eventually, a program may even exhaust its available virtual address space, leading to the OOM.
         </p>
         <h2 id="deciphering-the-outofmemoryerror">
          Deciphering the
          <code>
           OutOfMemoryError
          </code>
         </h2>
         <p>
          As mentioned above, the OOM is a common indication of a memory leak. Essentially, the error is thrown when theres insufficient space to allocate a new object. Try as it might, the garbage collector cant find the necessary space, and the heap cant be expanded any further. Thus, an error emerges, along with a
          <a href="http://stackoverflow.com/questions/3988788/what-is-a-stack-trace-and-how-can-i-use-it-to-debug-my-application-errors#answer-3988794">
           stack trace
          </a>
          .
         </p>
         <p>
          The first step in diagnosing your OOM is to determine what the error actually means. This sounds obvious, but the answer isnt always so clear. For example: Is the OOM appearing because the Java heap is full, or because the native heap is full? To help you answer this question, lets analyze a few of the the possible error messages:
         </p>
         <ul>
          <li>
           <code>
            java.lang.OutOfMemoryError: Java heap space
           </code>
          </li>
          <li>
           <code>
            java.lang.OutOfMemoryError: PermGen space
           </code>
          </li>
          <li>
           <code>
            java.lang.OutOfMemoryError: Requested array size exceeds VM limit
           </code>
          </li>
          <li>
           <code>
            java.lang.OutOfMemoryError: request &lt;size&gt; bytes for &lt;reason&gt;. Out of swap space?
           </code>
          </li>
          <li>
           <code>
            java.lang.OutOfMemoryError: &lt;reason&gt; &lt;stack trace&gt; (Native method)
           </code>
          </li>
         </ul>
         <h3 id="java-heap-space">
          Java heap space
         </h3>
         <p>
          This error message doesnt necessarily imply a memory leak. In fact, the problem can be as simple as a configuration issue.
         </p>
         <p>
          For example, I was responsible for analyzing an application which was consistently producing this type of
          <code>
           OutOfMemoryError
          </code>
          . After some investigation, I figured out that the culprit was an array instantiation that was demanding too much memory; in this case, it wasnt the applications fault, but rather, the application server was relying on the default heap size, which was too small. I solved the problem by adjusting the
          <a href="http://www.oracle.com/technetwork/java/javase/tech/vmoptions-jsp-140102.html">
           JVMs memory parameters
          </a>
          .
         </p>
         <p>
          In other cases, and for long-lived applications in particular, the message might be an indication that were unintentionally
          <em>
           holding references to objects
          </em>
          , preventing the garbage collector from cleaning them up.
          <strong>
           This is the Java language equivalent of a memory leak
          </strong>
          . (
          <em>
           Note: APIs called by an application could also be unintentionally holding object references.
          </em>
          )
         </p>
         <p>
          Another potential source of these Java heap space OOMs arises with the use of
          <strong>
           finalizers
          </strong>
          . If a class has a
          <a href="http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html#finalize()">
           finalize
          </a>
          method, then objects of that type do not have their space reclaimed at garbage collection time. Instead, after garbage collection, the objects are queued for finalization, which occurs later. In the Sun implementation, finalizers are executed by a
          <a href="http://stackoverflow.com/questions/2213340/what-is-daemon-thread-in-java">
           daemon thread
          </a>
          . If the finalizer thread cannot keep up with the finalization queue, then the Java heap could fill up and an OOM could be thrown.
         </p>
         <h3 id="permgen-space">
          PermGen space
         </h3>
         <p>
          This error message indicates that the
          <a href="https://blogs.oracle.com/jonthecollector/entry/presenting_the_permanent_generation">
           permanent generation
          </a>
          is full. The permanent generation is the area of the heap that stores class and method objects. If an application loads a large number of classes, then the size of the permanent generation might need to be increased using the
          <code>
           -XX:MaxPermSize
          </code>
          option.
         </p>
         <p>
          <a href="http://en.wikipedia.org/wiki/String_interning">
           Interned
          </a>
          <code>
           java.lang.String
          </code>
          objects are also stored in the permanent generation. The
          <code>
           java.lang.String
          </code>
          class maintains a pool of strings. When the intern method is invoked, the method checks the pool to see if an equivalent string is present. If so, its returned by the intern method; if not, the string is added to the pool. In more precise terms, the
          <code>
           java.lang.String.intern
          </code>
          method returns a strings
          <a href="http://www.tutorialspoint.com/java/java_string_intern.htm">
           canonical representation
          </a>
          ; the result is a reference to the same class instance that would be returned if that string appeared as a literal. If an application interns a large number of strings, you might need to increase the size of the permanent generation.
         </p>
         <p>
          <em>
           Note: you can use the
           <code>
            jmap -permgen
           </code>
           command to print statistics related to the permanent generation, including information about internalized String instances.
          </em>
         </p>
         <h3 id="requested-array-size-exceeds-vm-limit">
          Requested array size exceeds VM limit
         </h3>
         <p>
          This error indicates that the application (or APIs used by that application) attempted to allocate an array that is larger than the heap size. For example, if an application attempts to allocate an array of 512MB but the maximum heap size is 256MB, then an OOM will be thrown with this error message. In most cases, the problem is either a configuration issue or a bug that results when an application attempts to allocate a massive array.
         </p>
         <h3 id="request-size-bytes-for-reason-out-of-swap-space">
          Request &lt;size&gt; bytes for &lt;reason&gt;. Out of swap space?
         </h3>
         <p>
          This message appears to be an OOM. However, the HotSpot VM throws this apparent exception when an allocation from the native heap failed and the native heap might be close to exhaustion. Included in the message are the size (in bytes) of the request that failed and the reason for the memory request. In most cases, the &lt;reason&gt; is the name of the source module thats reporting an allocation failure.
         </p>
         <p>
          If this type of OOM is thrown, you might need to use troubleshooting utilities on your operating system to diagnose the issue further. In some cases, the problem might not even be related to the application. For example, you might see this error if:
         </p>
         <ul>
          <li>
           The operating system is configured with insufficient swap space.
          </li>
          <li>
           Another process on the system is consuming all available memory resources.
          </li>
         </ul>
         <p>
          Its also is possible that the application failed due to a native leak (for example, if some bit of application or library code is continuously allocating memory but fails to releasing it to the operating system).
         </p>
         <h3 id="reason-stack-trace-native-method">
          &lt;reason&gt; &lt;stack trace&gt; (Native method)
         </h3>
         <p>
          If you see this error message and the top frame of your stack trace is a native method, then that native method has encountered an allocation failure. The difference between this message and the previous is that the allocation failure was detected in a JNI or native method rather than in Java VM code.
         </p>
         <p>
          If this type of OOM is thrown, you might need to use utilities on the operating system to further diagnose the issue.
         </p>
         <h2 id="application-crash-without-oom">
          Application Crash Without OOM
         </h2>
         <p>
          Occasionally, an application might crash soon after an allocation failure from the native heap. This occurs if youre running native code that doesnt check for errors returned by memory allocation functions.
         </p>
         <p>
          For example, the
          <code>
           malloc
          </code>
          system call returns
          <code>
           NULL
          </code>
          if there is no memory available. If the return from
          <code>
           malloc
          </code>
          is not checked, then the application might crash when it attempts to access an invalid memory location. Depending on the circumstances, this type of issue can be difficult to locate.
         </p>
         <p>
          In some cases, the information from the fatal error log or the crash dump will be sufficient. If the cause of a crash is determined to be a lack of error-handling in some memory allocations, then you must hunt down the reason for said allocation failure. As with any other native heap issue, the system might be configured with insufficient swap space, another process might be consuming all available memory resources, etc.
         </p>
         <h2 id="diagnosing-leaks">
          Diagnosing Leaks
         </h2>
         <p>
          In most cases, diagnosing memory leaks requires very detailed knowledge of the application in question. Warning: the process can be lengthy and iterative.
         </p>
         <p>
          Our strategy for hunting down memory leaks will be relatively straightforward:
         </p>
         <ol>
          <li>
           Identify symptoms
          </li>
          <li>
           Enable verbose garbage collection
          </li>
          <li>
           Enable profiling
          </li>
          <li>
           Analyze the trace
          </li>
         </ol>
         <h3 id="identify-symptoms">
          1. Identify Symptoms
         </h3>
         <p>
          As discussed, in many cases, the Java process will eventually throw an OOM runtime exception, a clear indicator that your memory resources have been exhausted. In this case, you need to distinguish between a normal memory exhaustion and a leak. Analyzing the OOMs message and try to find the culprit based on the discussions provided above.
         </p>
         <p>
          Oftentimes, if a Java application requests more storage than the runtime heap offers, it can be due to poor design. For instance, if an application creates multiple copies of an image or loads a file into an array, it will run out of storage when the image or file is very large. This is a normal resource exhaustion. The application is working as designed (although this design is clearly boneheaded).
         </p>
         <p>
          But if an application steadily increases its memory utilization while processing the same kind of data, you might have a memory leak.
         </p>
         <h3 id="enable-verbose-garbage-collection">
          2. Enable Verbose Garbage Collection
         </h3>
         <p>
          One of the quickest ways to assert that you indeed have a memory leak is to enable verbose garbage collection. Memory constraint problems can usually be identified by examining patterns in the
          <code>
           verbosegc
          </code>
          output.
         </p>
         <p>
          Specifically, the
          <em>
           <code>
            -verbosegc
           </code>
          </em>
          argument allows you to generates a trace each time the garbage collection (GC) process is begun. That is, as memory is being garbage-collected, summary reports are printed to standard error, giving you a sense of how your memory is being managed.
         </p>
         <p>
          Heres some typical output generated with the
          <code>
           verbosegc
          </code>
          option:
         </p>
         <p>
          <img alt="" src="//assets.toptal.io/uploads/blog/image/132/toptal-blog-verbosegc.png"/>
         </p>
         <p>
          Each block (or stanza) in this GC trace file is numbered in increasing order. To make sense of this trace, you should look at successive Allocation Failure stanzas and look for freed memory (bytes and percentage) decreasing over time while total memory (here, 19725304) is increasing. These are typical signs of memory depletion.
         </p>
         <h3 id="enable-profiling">
          3. Enable Profiling
         </h3>
         <p>
          Different JVMs offer different ways to generate trace files to reflect heap activity, which typically include detailed information about the type and size of objects. This is called
          <em>
           profiling the heap
          </em>
          .
         </p>
         <h3 id="analyze-the-trace">
          4. Analyze the Trace
         </h3>
         <p>
          This post focuses on the trace generated by Java VisualVM. Traces can come in different formats, as they can be generated by different tools, but the idea behind them is always the same: find a block of objects in the heap that should not be there, and determine if these objects accumulate instead of releasing. Of particular interest are transient objects that are known to be allocated each time a certain event is triggered in the Java application. The presence of many object instances that ought to exist only in small quantities generally indicates an application bug.
         </p>
         <p>
          Finally, solving memory leaks requires you to review your code thoroughly. Learning about the type of object leaking can be very helpful and considerably speedup debugging.
         </p>
         <h2 id="how-does-garbage-collection-work-in-the-jvm">
          How Does Garbage Collection Work in the JVM?
         </h2>
         <p>
          Before we start our analysis of an application with a memory leak issue, lets first look at how garbage collection works in the JVM.
         </p>
         <p>
          The JVM uses a form of garbage collector called a
          <strong>
           tracing collector
          </strong>
          , which essentially operates by pausing the world around it, marking all root objects (objects referenced directly by running threads), and following their references, marking each object it sees along the way.
         </p>
         <p>
          Java implements something called a
          <strong>
           generational
          </strong>
          garbage collector based upon the generational hypothesis assumption, which states that
          <strong>
           the majority of objects that are created are quickly discarded
          </strong>
          , and
          <strong>
           objects that are not quickly collected are likely to be around for a while
          </strong>
          .
         </p>
         <p>
          Based on this assumption,
          <a href="http://www.oracle.com/technetwork/java/gc-tuning-5-138395.html#1.1.%20Generations%7Coutline">
           Java partitions objects into multiple generations
          </a>
          . Heres a visual interpretation:
         </p>
         <p class="is-centered" id="Generations">
          <img alt="" src="//assets.toptal.io/uploads/blog/image/136/toptal-blog-1_D.png"/>
         </p>
         <ul>
          <li>
           <strong>
            Young Generation
           </strong>
           - This is where objects start out. It has two sub-generations:
           <ul>
            <li>
             <strong>
              Eden Space
             </strong>
             - Objects start out here. Most objects are created and destroyed in the Eden Space. Here, the GC does
             <em>
              Minors GCs
             </em>
             , which are optimized garbage collections. When a Minor GC is performed, any references to objects that are still needed are migrated to one of the survivors spaces (S0 or S1).
            </li>
            <li>
             <strong>
              Survivor Space (S0 and S1)
             </strong>
             - Objects that survive Eden end up here. There are two of these, and only one is in use at any given time (unless we have a serious memory leak). One is designated as
             <em>
              empty
             </em>
             , and the other as
             <em>
              live
             </em>
             , alternating with every GC cycle.
            </li>
           </ul>
          </li>
          <li>
           <strong>
            Tenured Generation
           </strong>
           - Also known as the old generation (old space in Fig. 2), this space holds older objects with longer lifetimes (moved over from the survivor spaces, if they live for long enough). When this space is filled up, the GC does a
           <strong>
            Full GC
           </strong>
           , which costs more in terms of performance. If this space grows without bound, the JVM will throw an
           <code>
            OutOfMemoryError - Java heap space
           </code>
           .
          </li>
          <li>
           <strong>
            Permanent Generation
           </strong>
           - A third generation closely related to the tenured generation, the permanent generation is special because it holds data required by the virtual machine to describe objects that do not have an equivalence at the Java language level. For example, objects describing classes and methods are stored in the permanent generation.
          </li>
         </ul>
         <p>
          Java is smart enough to apply different garbage collection methods to each generation. The young generation is handled using a
          <strong>
           tracing, copying collector
          </strong>
          called the
          <strong>
           Parallel New Collector
          </strong>
          . This collector stops the world, but because the young generation is generally small, the pause is short.
         </p>
         <p>
          For more information about the JVM generations and how them work in more detail visit the
          <a href="http://www.oracle.com/technetwork/java/javase/memorymanagement-whitepaper-150215.pdf">
           Memory Management in the Java HotSpot Virtual Machine
          </a>
          documentation.
         </p>
         <h2 id="detecting-a-memory-leak">
          Detecting a Memory Leak
         </h2>
         <p>
          To find and eliminate a memory leak, you need the proper tools. Its time to detect and remove such a leak using the
          <a href="http://visualvm.java.net/intro.html">
           Java VisualVM
          </a>
          .
         </p>
         <h3 id="remotely-profiling-the-heap-with-java-visualvm">
          Remotely Profiling the Heap with Java VisualVM
         </h3>
         <p>
          VisualVM is a tool that provides a visual interface for viewing detailed information about Java technology-based applications while they are running.
         </p>
         <p>
          With VisualVM, you can view data related to local applications and those running on remote hosts. You can also capture data about JVM software instances and save the data to your local system.
         </p>
         <p>
          In order to benefit from all of Java VisualVMs features, you should run the Java Platform, Standard Edition (Java SE) version 6 or above.
         </p>
         <h3 id="enabling-remote-connection-for-the-jvm">
          Enabling Remote Connection for the JVM
         </h3>
         <p>
          In a production environment, its often difficult to access the actual machine on which our code will be running. Luckily, we can profile our Java application remotely.
         </p>
         <p>
          First, we need to grant ourselves JVM access on the target machine. To do so, create a file called
          <strong>
           jstatd.all.policy
          </strong>
          with the following content:
         </p>
         <pre>
          <code>
           grant codebase "file:${java.home}/../lib/tools.jar" {
   permission java.security.AllPermission;
};
          </code>
         </pre>
         <p>
          Once the file has been created, we need to enable remote connections to the target VM using the
          <a href="http://docs.oracle.com/javase/1.5.0/docs/tooldocs/share/jstatd.html">
           jstatd - Virtual Machine jstat Daemon
          </a>
          tool, as follows:
         </p>
         <pre>
          <code>
           jstatd -p &lt;PORT_NUMBER&gt; -J-Djava.security.policy=&lt;PATH_TO_POLICY_FILE&gt;
          </code>
         </pre>
         <p>
          For example:
         </p>
         <pre>
          <code>
           jstatd -p 1234 -J-Djava.security.policy=D:\jstatd.all.policy
          </code>
         </pre>
         <p>
          With the
          <strong>
           jstatd
          </strong>
          started in the target VM, we are able to connect to the target machine and remotely profile the application with memory leak issues.
         </p>
         <h3 id="connecting-to-a-remote-host">
          Connecting to a Remote Host
         </h3>
         <p>
          In the client machine, open a prompt and type
          <code>
           jvisualvm
          </code>
          to open the VisualVM tool.
         </p>
         <p>
          Next, we must add a remote host in VisualVM. As the target JVM is enabled to allow remote connections from another machine with J2SE 6 or greater, we start the Java VisualVM tool and connect to the remote host. If the connection with the remote host was successful, we will see the Java applications that are running in the target JVM, as seen here:
         </p>
         <p class="is-centered">
          <img alt="" src="http://i.imgur.com/WhHUVEG.png"/>
         </p>
         <p>
          To profile and analyze the application, we just double-click its name in the side panel.
         </p>
         <p>
          Now that were all setup, lets investigate an application with a memory leak issue, which well call
          <em>
           MemLeak
          </em>
          .
         </p>
         <h3 id="memleak">
          MemLeak
         </h3>
         <p>
          Of course, there are a number of ways to create memory leaks in Java. For simplicity we will define a class to be a key in a
          <a href="http://docs.oracle.com/javase/6/docs/api/java/util/HashMap.html">
           HashMap
          </a>
          , but we will not define the
          <a href="http://www.javaworld.com/community/node/1006">
           equals() and hashcode()
          </a>
          methods.
         </p>
         <p>
          A HashMap is a
          <a href="http://en.wikipedia.org/wiki/Hash_table">
           hash table
          </a>
          implementation for the Map interface, and as such it defines the basic concepts of key and value: each value is related to a unique key, so if the key for a given key-value pair is already present in the HashMap, its current value is replaced.
         </p>
         <p>
          Its mandatory that our key class provides a correct implementation of the
          <code>
           equals()
          </code>
          and
          <code>
           hashcode()
          </code>
          methods. Without them, there is no guarantee that a good key will be generated.
         </p>
         <p>
          By not defining the
          <code>
           equals()
          </code>
          and
          <code>
           hashcode()
          </code>
          methods, we add the same key to the HashMap over and over and, instead of replacing the key as it should, the HashMap grows continuously, failing to identify these identical keys and throwing an
          <code>
           OutOfMemoryError
          </code>
          .
         </p>
         <p>
          Heres the MemLeak class:
         </p>
         <pre lang="java">
          <code>
           package com.post.memory.leak;

import java.util.Map;

public class MemLeak {
    public final String key;
    
    public MemLeak(String key) {
        this.key =key;
    }
    
    public static void main(String args[]) {
        try {
            Map map = System.getProperties();
            
            for(;;) {
                map.put(new MemLeak("key"), "value");
            }
        } catch(Exception e) {
            e.printStackTrace();
        }
    }
}
          </code>
         </pre>
         <p>
          Note: the memory leak is
          <em>
           not
          </em>
          due to the infinite loop on line 14: the infinite loop can lead to a resource exhaustion, but not a memory leak. If we had properly implemented
          <code>
           equals()
          </code>
          and
          <code>
           hashcode()
          </code>
          methods, the code would run fine even with the infinite loop as we would only have one element inside the HashMap.
         </p>
         <p>
          (For those interested,
          <a href="http://stackoverflow.com/questions/6470651/creating-a-memory-leak-with-java">
           here
          </a>
          are some alternative means of (intentionally) generating leaks.)
         </p>
         <h3 id="using-java-visualvm">
          Using Java VisualVM
         </h3>
         <p>
          With Java VisualVM, we can monitor the Java Heap and identify if its behavior is indicative of a memory leak.
         </p>
         <p>
          Heres a graphical representation of MemLeaks Java Heap just after initialization (recall our discussion of the various
          <a href="http://www.toptal.com/java/hunting-memory-leaks-in-java#Generations">
           generations
          </a>
          ):
         </p>
         <p class="is-zoomable">
          <img alt="" src="//assets.toptal.io/uploads/blog/image/134/toptal-blog-C.png"/>
         </p>
         <p>
          After just 30 seconds, the Old Generation is almost full, indicating that, even with a Full GC, the Old Generation is ever-growing, a clear sign of a memory leak.
         </p>
         <p>
          One means of detecting the cause of this leak is shown in the following image (
          <em>
           click to zoom
          </em>
          ), generated using Java VisualVM with a
          <em>
           heapdump
          </em>
          . Here, we see that
          <strong>
           50% of Hashtable$Entry objects are in the heap
          </strong>
          , while  the second line points us to the
          <strong>
           MemLeak
          </strong>
          class. Thus, the memory leak is caused by a
          <em>
           hash table
          </em>
          used within the
          <em>
           MemLeak
          </em>
          class.
         </p>
         <p class="is-zoomable">
          <img alt="" src="//assets.toptal.io/uploads/blog/image/133/toptal-blog-A.png"/>
         </p>
         <p>
          Finally, observe the Java Heap just after our
          <code>
           OutOfMemoryError
          </code>
          in which the
          <strong>
           Young and Old generations are completely full
          </strong>
          .
         </p>
         <p class="is-zoomable">
          <img alt="" src="//assets.toptal.io/uploads/blog/image/109/toptal-blog-B.png"/>
         </p>
         <h2 id="conclusion">
          Conclusion
         </h2>
         <p>
          Memory leaks are among the most difficult Java application problems to resolve, as the symptoms are varied and difficult to reproduce. Here, weve outlined a step-to-step approach to discovering memory leaks and identifying their sources. But above all, read your error messages closely and pay attention to your stack tracesnot all leaks are as simple as they appear.
         </p>
         <h2 id="appendix">
          Appendix
         </h2>
         <p>
          Along with Java VisualVM, there are several other tools that can perform memory leak detection. Many leak detectors operate at the library level by intercepting calls to memory management routines. For example:
          <a href="http://docs.oracle.com/javase/7/docs/technotes/samples/hprof.html">
           HPROF
          </a>
          , is a simple command line tool bundled with the Java 2 Platform Standard Edition (J2SE) for heap and CPU profiling. The output of HPROF can be analyzed directly or used as an input for others tools like
          <a href="http://docs.oracle.com/javase/6/docs/technotes/tools/share/jhat.html">
           JHAT
          </a>
          . When we work with Java 2 Enterprise Edition (J2EE) applications, there are a number of heapdump solutions that are friendlier to analyze, such as
          <a href="http://pic.dhe.ibm.com/infocenter/hctool/v1r0/index.jsp?topic=%2Fcom.ibm.java.diagnostics.memory.analyzer.doc%2Fheapdump.html">
           IBM Heapdumps for Websphere application servers
          </a>
          .
         </p>
         <div class="blog_author_big_banner is-active" data-ga-action="ClickedOnHireTheAuthor_bottom" data-ga-label="hunting-memory-leaks-in-java" data-role="session_based" data-view="content#bottom_banner" data-visible-when="sessionless">
          <h2>
           About the author
          </h2>
          <div class="skill_developer for-blog_post">
           <div class="skill_developer-extra">
            <a class="skill_developer-photo_wrapper" href="/resume/jose-ferreira-de-souza-filho">
             <img class="skill_developer-photo" src="http://assets.toptal.io/uploads/user/photo/2932/large_2012-11-07_14.51.17.jpg"/>
             <div class="skill_developer-photo_hint">
              View full profile 
             </div>
            </a>
            <div class="blog_author_big_banner-cta" data-role="session_based" data-visible-when="sessionless">
             <a class="button is-green_candy is-default is-full_width is-fixed skill_developer-hire" data-role="banner_link" href="https://www.toptal.com/companies/apply">
              Hire the Author
             </a>
            </div>
           </div>
           <div class="skill_developer-main">
            <a class="link skill_developer-name" href="/resume/jose-ferreira-de-souza-filho">
             Jose Ferreira de Souza Filho, Brazil
            </a>
            <div class="clearfix">
             <div class="skill_developer-member_since">
              member since December 27, 2012
             </div>
            </div>
            <div class="skill_developer-skills" data-view="skill_developer#tags">
             <a class="tag skill_developer-skill" data-role="tag" href="/java">
              Java
             </a>
             <a class="tag skill_developer-skill" data-role="tag" href="/struts">
              Struts
             </a>
             <a class="tag skill_developer-skill" data-role="tag" href="/java">
              JavaServer Faces
             </a>
             <a class="tag skill_developer-skill" data-role="tag" href="/hibernate">
              Hibernate
             </a>
             <a class="tag skill_developer-skill" data-role="tag" href="/spring">
              Spring
             </a>
             <a class="tag skill_developer-skill" data-role="tag" href="/struts">
              Struts 2
             </a>
             <a class="tag skill_developer-skill" data-role="tag" href="/java">
              Java Servlets
             </a>
             <a class="tag skill_developer-skill" data-role="tag" href="/java">
              Java ME
             </a>
             <a class="tag skill_developer-skill" data-role="tag" href="/java-ee">
              Java EE
             </a>
             <a class="tag skill_developer-skill" data-role="tag" href="/java">
              Java SE
             </a>
             <a class="tag skill_developer-skill" data-role="tag" href="/web">
              WebLogic
             </a>
            </div>
            <div class="skill_developer-description">
             Jose is a seasoned software developer and engineer with over 12 years of experience in IT. He has experience in the development, migration, and integration of software and efficient architectures. He is especially practiced in the use of debugging and performance profiling tools.
             <a class="link" href="/resume/jose-ferreira-de-souza-filho">
              [click to continue...]
             </a>
            </div>
           </div>
          </div>
         </div>
         <div class="post-join">
          <a class="button is-white_and_green is-default is-full_width" href="/java">
           Hiring? Meet the Top 10 Java Developers for Hire in July 2015
          </a>
         </div>
         <div class="template" data-role="subscribe_template" data-template='{"html":"\u003cform action=\"/blog/subscribe\" class=\"embeddable_form for-post\" data-placement=\"post\" data-remote=\"\" data-type=\"text\" data-view=\"blog_subscribe#subscribe\" method=\"post\"\u003e\u003cdiv class=\"embeddable_form-row is-label\"\u003e\u003cdiv class=\"embeddable_form-label_title\"\u003eLike what you\u0026#39;re reading?\u003c/div\u003e\u003cdiv class=\"embeddable_form-label\"\u003eGet the latest updates first.\u003c/div\u003e\u003c/div\u003e\u003cdiv class=\"embeddable_form-row\"\u003e\u003cinput autocomplete=\"off\" class=\"input is-medium\" data-role=\"email\" name=\"email\" placeholder=\"Enter your email address...\" type=\"text\" /\u003e\u003c/div\u003e\u003cdiv class=\"embeddable_form-row_wrapper is-footer\"\u003e\u003cdiv class=\"embeddable_form-row is-submit\"\u003e\u003cinput class=\"button is-green_candy is-default is-full_width\" data-role=\"submit\" type=\"submit\" value=\"Get Exclusive Updates\" /\u003e\u003c/div\u003e\u003cdiv class=\"embeddable_form-row is-privacy\"\u003e\u003cdiv class=\"embeddable_form-privacy\"\u003e\u003cdiv class=\"embeddable_form-privacy_icon\"\u003e\u003c/div\u003e\u003cdiv class=\"embeddable_form-privacy_text\"\u003eNo spam. Just great engineering posts.\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003c/div\u003e\u003cdiv class=\"embeddable_form-template\" data-role=\"success_template\" data-template=\"{\u0026quot;html\u0026quot;:\u0026quot;\\u003cdiv class=\\\u0026quot;embeddable_form-row is-label is-success\\\u0026quot;\\u003e\\u003cdiv class=\\\u0026quot;embeddable_form-label_title\\\u0026quot;\\u003eLike what you\\u0026#39;re reading?\\u003c/div\\u003e\\u003cdiv class=\\\u0026quot;embeddable_form-label\\\u0026quot;\\u003eGet the latest updates first.\\u003c/div\\u003e\\u003c/div\\u003e\\u003cdiv class=\\\u0026quot;embeddable_form-row is-success\\\u0026quot;\\u003e\\u003cdiv class=\\\u0026quot;embeddable_form-label is-header\\\u0026quot;\\u003eThank you for subscribing!\\u003c/div\\u003e\\u003c/div\\u003e\\u003cdiv class=\\\u0026quot;embeddable_form-row is-success\\\u0026quot;\\u003e\\u003cdiv class=\\\u0026quot;embeddable_form-done\\\u0026quot;\\u003e\\u003cul class=\\\u0026quot;blog_follow_us\\\u0026quot;\\u003e\\u003cli class=\\\u0026quot;blog_follow_us-source\\\u0026quot;\\u003e\\u003cdiv class=\\\u0026quot;fb-like\\\u0026quot; data-href=\\\u0026quot;http://www.toptal.com/blog\\\u0026quot; data-send=\\\u0026quot;false\\\u0026quot; data-layout=\\\u0026quot;button_count\\\u0026quot; data-width=\\\u0026quot;450\\\u0026quot; data-show-faces=\\\u0026quot;false\\\u0026quot;\\u003e\\u003c/div\\u003e\\n\\u003c/li\\u003e\\u003cli class=\\\u0026quot;blog_follow_us-source is-twitter\\\u0026quot;\\u003e\\u003ca class=\\\u0026quot;twitter-follow-button\\\u0026quot; data-show-count=\\\u0026quot;true\\\u0026quot; href=\\\u0026quot;https://twitter.com/toptalllc\\\u0026quot;\\u003eFollow @toptalllc\\u003c/a\\u003e\\u003c/li\\u003e\\u003cli class=\\\u0026quot;blog_follow_us-source\\\u0026quot;\\u003e\\u003cdiv class=\\\u0026quot;g-follow\\\u0026quot; data-annotation=\\\u0026quot;bubble\\\u0026quot; data-height=\\\u0026quot;20\\\u0026quot; data-href=\\\u0026quot;https://plus.google.com/109028009576318848424\\\u0026quot; data-rel=\\\u0026quot;publisher\\\u0026quot;\\u003e\\u003c/div\\u003e\\u003cscript type=\\\u0026quot;text/javascript\\\u0026quot;\\u003e(function() {\\n  var po = document.createElement(\u0026#39;script\u0026#39;); po.type = \u0026#39;text/javascript\u0026#39;; po.async = true; po.defer = true;\\n  po.src = \u0026#39;https://apis.google.com/js/platform.js\u0026#39;; po.text = \u0026#39;{lang: \\\u0026quot;en-US\\\u0026quot;}\u0026#39;;\\n  var s = document.getElementsByTagName(\u0026#39;script\u0026#39;)[0]; s.parentNode.insertBefore(po, s);\\n})();\\u003c/script\\u003e\\u003c/li\\u003e\\u003c/ul\\u003e\\u003c/div\\u003e\\u003c/div\\u003e\u0026quot;}\" style=\"display: none;\"\u003e\u003c/div\u003e\u003c/form\u003e"}'>
         </div>
        </div>
        <div class="blog-comments">
         <div id="disqus_thread_container">
          <div id="disqus_thread">
           <div class="d-noscript-comments">
            <h3>
             Comments
            </h3>
            <div class="comment">
             <div class="comment-author">
              Tapan Kumar
             </div>
             <div class="comment-body">
              P { margin-bottom: 0.08in; }A:link {  }
Appl just continuously adding a key(object with a static instance variable), value in Properties, after some time below exception displayed. 
Exception
in thread "main" java.lang.OutOfMemoryError: GC overhead
limit exceeded
             </div>
            </div>
            <div class="comment">
             <div class="comment-author">
              rags
             </div>
             <div class="comment-body">
              Good article. One statement is incorrect - "The permanent generation is the area of the heap"

Permanent generation is not part of the heap. It's a separate space for class definitions and related data. Ref: http://docs.oracle.com/javase/7/docs/technotes/guides/management/jconsole.html

Eden Space (heap): The pool from which memory is initially allocated for most objects.

Survivor Space (heap): The pool containing objects that have survived the garbage collection of the Eden space.

Tenured Generation (heap): The pool containing objects that have existed for some time in the survivor space.

Permanent Generation (non-heap): The pool containing all the reflective data of the virtual machine itself, such as class and method objects. With Java VMs that use class data sharing, this generation is divided into read-only and read-write areas.

Code Cache (non-heap): The HotSpot Java VM also includes a code cache, containing memory that is used for compilation and storage of native code.
             </div>
            </div>
            <div class="comment">
             <div class="comment-author">
              Jos Ferreira de Souza Filho
             </div>
             <div class="comment-body">
              Hi rags, you absolutely right the permanent generation is not part of the heap. It is a separated area to represent native code, strings, etc.. Thank you for pointing that out!
             </div>
            </div>
            <div class="comment">
             <div class="comment-author">
              Mahmoud Hanafy
             </div>
             <div class="comment-body">
              how can I know which classes that create these objects ?
In a Big Project that contains many classes it's hard to determine which classes responsable for this creation
             </div>
            </div>
            <div class="comment">
             <div class="comment-author">
              disqus_MGDHBkoQSP
             </div>
             <div class="comment-body">
              To see the class you need to take the heap dump and analyze that in MAT. You can see in the histogram which all classes has created maximum no. of objects and how much memory is retained in the heap because of which all objects. You can take heap dump from JVisualVM itslelf.
             </div>
            </div>
            <div class="comment">
             <div class="comment-author">
              teknotry
             </div>
             <div class="comment-body">
              you can watch the below video to get full clarity .
https://www.youtube.com/watch?v=z8n7Bg7-A4I
             </div>
            </div>
            <div class="comment">
             <div class="comment-author">
              teknotry
             </div>
             <div class="comment-body">
              Nice post ..
             </div>
            </div>
            <div class="comment">
             <div class="comment-author">
              JMB
             </div>
             <div class="comment-body">
              Jose, I have found really interesting your article, mainly because it explains a lot of concepts that many Java developers doesn't know, so it really helps.

In any case, I want to add also an additional alternative for hunting a memory leak, I detected the cause of my mem leak using javosize tool. This is a CLI tool that can be attached to a running JVM process without requiring a restart. This tool has a lot of features, but in my case it helped me because it includes a recipe for obtaining the list of the biggest static variables (http://www.javosize.com/gettingStarted/topFatStaticVariables.html). Just executing it, I detected the variable that was causing my mem leak.
             </div>
            </div>
           </div>
          </div>
         </div>
         <script type="text/javascript">
          function isIos() {
  return /(iPad|iPhone|iPod)/g.test(navigator.userAgent);
}

function adjustHeightInIos() {
  if (isIos()) {
    var height = $('#disqus_thread').outerHeight();
    $('#disqus_thread_container').height(height);
  }
}

if (isIos()) {
  var el = document.getElementById('disqus_thread_container');
  el.style.height = '1px';
  el.style.overflow = 'hidden';
  el.style.width = '100%';
}

function disqus_config() {
  this.callbacks.onNewComment = [function() {
    $.post('/blog/comments/on_create');
    adjustHeightInIos();
  }];

  this.callbacks.onReady = [adjustHeightInIos];
}

var disqus_shortname = 'toptal';
var disqus_identifier = 'java/hunting-memory-leaks-in-java';

(function() {
  var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
  dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
  (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();
         </script>
         <noscript>
          Please enable JavaScript to view the
          <a href="http://disqus.com/?ref_noscript">
           comments powered by Disqus.
          </a>
         </noscript>
         <a class="dsq-brlink" href="http://disqus.com">
          comments powered by
          <span class="logo-disqus">
           Disqus
          </span>
         </a>
        </div>
       </div>
      </div>
      <div class="two_columns_layout-extra">
       <div class="blog-block-wrapper">
        <div class="blog-block-header">
         Subscribe
        </div>
        <div class="blog-block">
         <div class="blog-block-row">
          <form action="/blog/subscribe" class="embeddable_form for-extra" data-placement="extra" data-remote="" data-type="text" data-view="blog_subscribe#subscribe" method="post">
           <div class="embeddable_form-row is-label">
            <div class="embeddable_form-label_title">
             Free email updates
            </div>
            <div class="embeddable_form-label">
             Get the latest content first.
            </div>
           </div>
           <div class="embeddable_form-row">
            <input autocomplete="off" class="input is-medium" data-role="email" name="email" placeholder="Enter your email address..." type="text"/>
           </div>
           <div class="embeddable_form-row_wrapper is-footer">
            <div class="embeddable_form-row is-submit">
             <input class="button is-green_candy is-default is-full_width" data-role="submit" type="submit" value="Get Exclusive Updates"/>
            </div>
            <div class="embeddable_form-row is-privacy">
             <div class="embeddable_form-privacy">
              <div class="embeddable_form-privacy_icon">
              </div>
              <div class="embeddable_form-privacy_text">
               No spam. Just great engineering posts.
              </div>
             </div>
            </div>
           </div>
           <div class="embeddable_form-template" data-role="success_template" data-template="{&quot;html&quot;:&quot;\u003cdiv class=\&quot;embeddable_form-row is-label is-success\&quot;\u003e\u003cdiv class=\&quot;embeddable_form-label_title\&quot;\u003eFree email updates\u003c/div\u003e\u003cdiv class=\&quot;embeddable_form-label\&quot;\u003eGet the latest content first.\u003c/div\u003e\u003c/div\u003e\u003cdiv class=\&quot;embeddable_form-row is-success\&quot;\u003e\u003cdiv class=\&quot;embeddable_form-label is-header\&quot;\u003eThank you for subscribing!\u003c/div\u003e\u003c/div\u003e\u003cdiv class=\&quot;embeddable_form-row is-success\&quot;\u003e\u003cdiv class=\&quot;embeddable_form-done\&quot;\u003e\u003cul class=\&quot;blog_follow_us\&quot;\u003e\u003cli class=\&quot;blog_follow_us-source\&quot;\u003e\u003cdiv class=\&quot;fb-like\&quot; data-href=\&quot;http://www.toptal.com/blog\&quot; data-send=\&quot;false\&quot; data-layout=\&quot;button_count\&quot; data-width=\&quot;450\&quot; data-show-faces=\&quot;false\&quot;\u003e\u003c/div\u003e\n\u003c/li\u003e\u003cli class=\&quot;blog_follow_us-source is-twitter\&quot;\u003e\u003ca class=\&quot;twitter-follow-button\&quot; data-show-count=\&quot;true\&quot; href=\&quot;https://twitter.com/toptalllc\&quot;\u003eFollow @toptalllc\u003c/a\u003e\u003c/li\u003e\u003cli class=\&quot;blog_follow_us-source\&quot;\u003e\u003cdiv class=\&quot;g-follow\&quot; data-annotation=\&quot;bubble\&quot; data-height=\&quot;20\&quot; data-href=\&quot;https://plus.google.com/109028009576318848424\&quot; data-rel=\&quot;publisher\&quot;\u003e\u003c/div\u003e\u003cscript type=\&quot;text/javascript\&quot;\u003e(function() {\n  var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true; po.defer = true;\n  po.src = 'https://apis.google.com/js/platform.js'; po.text = '{lang: \&quot;en-US\&quot;}';\n  var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);\n})();\u003c/script\u003e\u003c/li\u003e\u003c/ul\u003e\u003c/div\u003e\u003c/div\u003e&quot;}" style="display: none;">
           </div>
          </form>
         </div>
        </div>
        <div class="blog-block-header">
         Trending articles
        </div>
        <div class="blog-block">
         <nav class="blog-trending">
          <a class="post is-preview blog-trending-item" href="/react/navigating-the-react-ecosystem">
           <span class="post_cover is-preview for-technology">
            <noscript>
             <img class="post_cover-image" src="http://assets.toptal.io/uploads/blog/cover_image/90201/side_list_cover-623nick-02-ffcac4bbd4ea9be3f1b5c19a75c9613f.jpg"/>
            </noscript>
            <span class="post_cover-image" data-role="deferred" data-src="http://assets.toptal.io/uploads/blog/cover_image/90201/side_list_cover-623nick-02-ffcac4bbd4ea9be3f1b5c19a75c9613f.jpg">
            </span>
           </span>
           <span class="post-preview">
            <span class="post-title">
             Navigating the React Ecosystem
            </span>
            <span class="post_meta">
             <span class="post_meta-date">
              16 days ago
             </span>
            </span>
           </span>
          </a>
          <a class="post is-preview blog-trending-item" href="/react/how-react-components-make-ui-testing-easy">
           <span class="post_cover is-preview for-technology">
            <noscript>
             <img class="post_cover-image" src="http://assets.toptal.io/uploads/blog/cover_image/90205/side_list_cover-cover-8e5bfc9efbf5fe8e6597d9f226fc0975.jpg"/>
            </noscript>
            <span class="post_cover-image" data-role="deferred" data-src="http://assets.toptal.io/uploads/blog/cover_image/90205/side_list_cover-cover-8e5bfc9efbf5fe8e6597d9f226fc0975.jpg">
            </span>
           </span>
           <span class="post-preview">
            <span class="post-title">
             How React Components Make UI Testing Easy
            </span>
            <span class="post_meta">
             <span class="post_meta-date">
              3 days ago
             </span>
            </span>
           </span>
          </a>
          <a class="post is-preview blog-trending-item" href="/javascript/ultimate-in-memory-data-collection-manipulation-with-supergroup-js">
           <span class="post_cover is-preview for-technology">
            <noscript>
             <img class="post_cover-image" src="http://assets.toptal.io/uploads/blog/cover_image/90206/side_list_cover-75mahmud-02-50376631c3df530c7299e2679ccb5df2.jpg"/>
            </noscript>
            <span class="post_cover-image" data-role="deferred" data-src="http://assets.toptal.io/uploads/blog/cover_image/90206/side_list_cover-75mahmud-02-50376631c3df530c7299e2679ccb5df2.jpg">
            </span>
           </span>
           <span class="post-preview">
            <span class="post-title">
             Ultimate In-memory Data Collection Manipulation with Supergroup.js
            </span>
            <span class="post_meta">
             <span class="post_meta-date">
              4 days ago
             </span>
            </span>
           </span>
          </a>
          <a class="post is-preview blog-trending-item" href="/machine-learning/real-time-object-detection-using-mser-in-ios">
           <span class="post_cover is-preview for-technology">
            <noscript>
             <img class="post_cover-image" src="http://assets.toptal.io/uploads/blog/cover_image/90208/side_list_cover-78mahmud-02-155cbf9d24fba88422ff0d21b0f8bf07.jpg"/>
            </noscript>
            <span class="post_cover-image" data-role="deferred" data-src="http://assets.toptal.io/uploads/blog/cover_image/90208/side_list_cover-78mahmud-02-155cbf9d24fba88422ff0d21b0f8bf07.jpg">
            </span>
           </span>
           <span class="post-preview">
            <span class="post-title">
             Real-time Object Detection Using MSER in iOS
            </span>
            <span class="post_meta">
             <span class="post_meta-date">
              1 day ago
             </span>
            </span>
           </span>
          </a>
          <a class="post is-preview blog-trending-item" href="/nodejs/let-loopback-do-it-a-walkthrough-of-the-node-api-framework-you-ve-been-dreaming-of">
           <span class="post_cover is-preview for-technology">
            <noscript>
             <img class="post_cover-image" src="http://assets.toptal.io/uploads/blog/cover_image/90196/side_list_cover-69nicks-02-7eafda4e4befba38ca01f341ee3a5c18.jpg"/>
            </noscript>
            <span class="post_cover-image" data-role="deferred" data-src="http://assets.toptal.io/uploads/blog/cover_image/90196/side_list_cover-69nicks-02-7eafda4e4befba38ca01f341ee3a5c18.jpg">
            </span>
           </span>
           <span class="post-preview">
            <span class="post-title">
             Let LoopBack Do It: A Walkthrough of the Node API Framework You've Been Dreaming Of
            </span>
            <span class="post_meta">
             <span class="post_meta-date">
              about 1 month ago
             </span>
            </span>
           </span>
          </a>
          <a class="post is-preview blog-trending-item" href="/javascript/ractive-js-web-apps-made-easy">
           <span class="post_cover is-preview for-technology">
            <noscript>
             <img class="post_cover-image" src="http://assets.toptal.io/uploads/blog/cover_image/90204/side_list_cover-cover-77d59f02dcc47fca419f60f1d141d9f0.jpg"/>
            </noscript>
            <span class="post_cover-image" data-role="deferred" data-src="http://assets.toptal.io/uploads/blog/cover_image/90204/side_list_cover-cover-77d59f02dcc47fca419f60f1d141d9f0.jpg">
            </span>
           </span>
           <span class="post-preview">
            <span class="post-title">
             Ractive.js: Web Apps Made Easy
            </span>
            <span class="post_meta">
             <span class="post_meta-date">
              9 days ago
             </span>
            </span>
           </span>
          </a>
          <a class="post is-preview blog-trending-item" href="/qa/how-to-write-testable-code-and-why-it-matters">
           <span class="post_cover is-preview for-technology">
            <noscript>
             <img class="post_cover-image" src="http://assets.toptal.io/uploads/blog/cover_image/90198/side_list_cover-613nick-02-14119d851e6fca4d82b84fb116b63a56.jpg"/>
            </noscript>
            <span class="post_cover-image" data-role="deferred" data-src="http://assets.toptal.io/uploads/blog/cover_image/90198/side_list_cover-613nick-02-14119d851e6fca4d82b84fb116b63a56.jpg">
            </span>
           </span>
           <span class="post-preview">
            <span class="post-title">
             How to Write Testable Code and Why it Matters
            </span>
            <span class="post_meta">
             <span class="post_meta-date">
              23 days ago
             </span>
            </span>
           </span>
          </a>
          <a class="post is-preview blog-trending-item" href="/ux/getting-started-with-modular-front-end-development">
           <span class="post_cover is-preview for-technology">
            <noscript>
             <img class="post_cover-image" src="http://assets.toptal.io/uploads/blog/cover_image/90203/side_list_cover-622mahmud-02-14eaf3fb06688cf83715f914c3b46e51.jpg"/>
            </noscript>
            <span class="post_cover-image" data-role="deferred" data-src="http://assets.toptal.io/uploads/blog/cover_image/90203/side_list_cover-622mahmud-02-14eaf3fb06688cf83715f914c3b46e51.jpg">
            </span>
           </span>
           <span class="post-preview">
            <span class="post-title">
             Getting Started with Modular Front-End Development
            </span>
            <span class="post_meta">
             <span class="post_meta-date">
              11 days ago
             </span>
            </span>
           </span>
          </a>
         </nav>
        </div>
        <div class="blog-block-header">
         Relevant technologies
        </div>
        <div class="blog-block">
         <div class="blog-block-row">
          <ul class="blog-relevant">
           <li class="blog-relevant-item">
            <a class="link is-blue" href="/java-ee">
             Java EE
            </a>
           </li>
           <li class="blog-relevant-item">
            <a class="link is-blue" href="/java">
             Java
            </a>
           </li>
           <li class="blog-relevant-item">
            <a class="link is-blue" href="/back-end">
             Back-end
            </a>
           </li>
          </ul>
         </div>
        </div>
        <div class="blog-block-header">
         Toptal Authors
        </div>
        <div class="blog-block">
         <div class="user_cards_list has-no-bottom_margin has-no_top_border for-blog_sidebar">
          <div class="user_cards_list-bottom_border">
          </div>
          <div class="user_card">
           <div class="user_card-photo_container">
            <a href="/resume/marco-mustapic" target="_blank">
             <div class="user_card-photo" style="background-image: url('http://assets.toptal.io/uploads/user/photo/3090/small_avatar.jpg');">
             </div>
            </a>
           </div>
           <div class="user_card-info is-center_aligned">
            <div class="user_card-info_name">
             <a href="/resume/marco-mustapic" target="_blank">
              Marco Mustapic
             </a>
            </div>
            <div class="user_card-info_additional">
             iOS developer
            </div>
           </div>
          </div>
          <div class="user_card">
           <div class="user_card-photo_container">
            <a href="/resume/antonios-minas" target="_blank">
             <div class="user_card-photo" style="background-image: url('http://assets.toptal.io/uploads/user/photo/47416/small_ea7edd97-90fe-4757-8964-768342751450.jpg');">
             </div>
            </a>
           </div>
           <div class="user_card-info is-center_aligned">
            <div class="user_card-info_name">
             <a href="/resume/antonios-minas" target="_blank">
              Antonios Minas
             </a>
            </div>
            <div class="user_card-info_additional">
             Freelance Software Engineer
            </div>
           </div>
          </div>
          <div class="user_card">
           <div class="user_card-photo_container">
            <a href="/resume/sigfried-gold" target="_blank">
             <div class="user_card-photo" style="background-image: url('http://assets.toptal.io/uploads/user/photo/37180/small_4f5336cf-42c0-4201-bdd8-b6354bbd8fb9.jpg');">
             </div>
            </a>
           </div>
           <div class="user_card-info is-center_aligned">
            <div class="user_card-info_name">
             <a href="/resume/sigfried-gold" target="_blank">
              Sigfried Gold
             </a>
            </div>
            <div class="user_card-info_additional">
             Freelance Software Engineer
            </div>
           </div>
          </div>
          <div class="user_card">
           <div class="user_card-photo_container">
            <a href="/resume/ahmed-abdel-razzak" target="_blank">
             <div class="user_card-photo" style="background-image: url('http://assets.toptal.io/uploads/user/photo/17771/small_410fd79d-15a9-4666-a4c1-193c23898bb4.JPG');">
             </div>
            </a>
           </div>
           <div class="user_card-info is-center_aligned">
            <div class="user_card-info_name">
             <a href="/resume/ahmed-abdel-razzak" target="_blank">
              Ahmed Abdel Razzak
             </a>
            </div>
            <div class="user_card-info_additional">
             Ruby on rails developer
            </div>
           </div>
          </div>
          <div class="user_card">
           <div class="user_card-photo_container">
            <a href="/resume/martin-chikilian" target="_blank">
             <div class="user_card-photo" style="background-image: url('http://assets.toptal.io/uploads/user/photo/11/small_05032010050.jpg');">
             </div>
            </a>
           </div>
           <div class="user_card-info is-center_aligned">
            <div class="user_card-info_name">
             <a href="/resume/martin-chikilian" target="_blank">
              Martin Chikilian
             </a>
            </div>
            <div class="user_card-info_additional">
             Python Software Engineer
            </div>
           </div>
          </div>
          <div class="user_card">
           <div class="user_card-photo_container">
            <a href="/resume/ivan-vasilev" target="_blank">
             <div class="user_card-photo" style="background-image: url('http://assets.toptal.io/uploads/user/photo/2040/small_Untitled.png');">
             </div>
            </a>
           </div>
           <div class="user_card-info is-center_aligned">
            <div class="user_card-info_name">
             <a href="/resume/ivan-vasilev" target="_blank">
              Ivan Vasilev
             </a>
            </div>
            <div class="user_card-info_additional">
             Java Developer
            </div>
           </div>
          </div>
         </div>
        </div>
        <div class="blog-block-view-wrapper">
         <a class="blog-block-view" href="/blog/authors">
          View all authors
         </a>
        </div>
        <div class="blog-block blog_banner referral_banner" data-role="session_based" data-view="content#referral_banner" data-visible-when="signedin">
         <div class="referral_banner-container">
          <div class="referral_banner-top">
           <div class="referral_banner-top_image">
           </div>
          </div>
          <div class="referral_banner-middle">
           <p>
            Hey,
            <strong>
             <span data-role="referral_full_name">
             </span>
            </strong>
            , share this post with your friends &amp; well send you
            <strong>
             $2000
            </strong>
            if they become customers or
            <strong>
             $100
            </strong>
            if they become developers.
           </p>
          </div>
          <div class="referral_banner-bottom" data-ga-action="referral_intent" data-ga-label="hunting-memory-leaks-in-java" data-role="share_block" data-view="content#referral_share">
           <ul class="referral_banner-share">
            <li class="referral_banner-share_item">
             <a class="button is-white is-small is-thin is-full_width referral_banner-share_button" data-network="twitter" data-role="share_button" href="#">
              <span class="referral_banner-share_button_icon is-twitter">
              </span>
             </a>
            </li>
            <li class="referral_banner-share_item">
             <a class="button is-white is-small is-thin is-full_width referral_banner-share_button" data-network="facebook" data-role="share_button" href="#">
              <span class="referral_banner-share_button_icon is-facebook">
              </span>
             </a>
            </li>
            <li class="referral_banner-share_item">
             <a class="button is-white is-small is-thin is-full_width referral_banner-share_button" data-network="linkedin" data-role="share_button" href="#">
              <span class="referral_banner-share_button_icon is-linkedin">
              </span>
             </a>
            </li>
           </ul>
           <a class="referral_banner-share_copy_button" data-role="copy_button" href="#">
            Copy Referral Link
           </a>
          </div>
         </div>
        </div>
        <div class="blog-block has-no_background blog_banner for-author blog_author_banner" data-ga-action="ClickedOnHireTheAuthor_lateral" data-ga-label="hunting-memory-leaks-in-java" data-role="session_based" data-view="content#sidebar_banner" data-visible-when="sessionless">
         <div class="blog-block-header">
          About the author
         </div>
         <div class="blog_author_banner-photo_wrapper">
          <img class="blog_author_banner-photo" src="http://assets.toptal.io/uploads/user/photo/2932/large_2012-11-07_14.51.17.jpg"/>
         </div>
         <div class="blog_author_banner-content" data-role="author_content">
          <div class="blog_author_banner-name">
           <a href="/resume/jose-ferreira-de-souza-filho">
            Jose Ferreira de Souza Filho
           </a>
          </div>
          <div class="blog_author_banner-role">
           HTML Developer
          </div>
          <div class="blog_author_banner-about" data-role="author_about">
           Jose is a seasoned software developer and engineer with over 12 years of experience in IT. He has experience in the development, migration, and integration of software and efficient architectures. He is especially practiced in the use of debugging and performance profiling tools.
          </div>
          <div class="blog_author_banner-content_footer">
          </div>
         </div>
         <div class="blog_author_banner-cta" data-role="session_based" data-visible-when="sessionless">
          <a class="button is-green_candy is-default is-full_width" data-role="banner_link" href="https://www.toptal.com/companies/apply">
           Hire the Author
          </a>
         </div>
        </div>
       </div>
      </div>
     </div>
    </section>
   </main>
   <footer>
    <section class="grid-row page_footer_map-wrapper">
     <div class="grid-row-inner has-huge_padding page_footer_map">
      Toptal connects the
      <a href="/top-3-percent">
       top 3%
      </a>
      of freelance developers all over the world.
     </div>
    </section>
    <section class="grid-row has-top_border page_footer_join-wrapper">
     <div class="grid-row-inner has-padding page_footer_join">
      <h2 class="page_footer_join-header">
       Join the Toptal community.
      </h2>
      <div class="page_footer_join-spacer">
      </div>
      <nav class="page_footer_join-actions">
       <div class="page_footer_join-item">
        <a class="button is-green_candy is-big is-fixed page_footer_join-button" href="https://www.toptal.com/companies/apply">
         Hire a Developer
        </a>
       </div>
       <div class="page_footer_join-item is-or">
        or
       </div>
       <div class="page_footer_join-item">
        <a class="button is-green_candy is-big is-fixed page_footer_join-button" href="/developers">
         Apply as a Developer
        </a>
       </div>
      </nav>
     </div>
    </section>
    <section class="grid-row page_footer_links-wrapper">
     <div class="grid-row-inner is-wide has-big_padding">
      <nav class="page_footer_links">
       <section class="page_footer_links-column is-1">
        <h3 class="page_footer_links-column-header">
         Trending on blog
        </h3>
        <ul class="page_footer_links-list is-trending">
         <li class="page_footer_links-item">
          <a class="page_footer_links-link" href="/react/navigating-the-react-ecosystem">
           Navigating the React Ecosystem
          </a>
         </li>
         <li class="page_footer_links-item">
          <a class="page_footer_links-link" href="/react/how-react-components-make-ui-testing-easy">
           How React Components Make UI Testing Easy
          </a>
         </li>
         <li class="page_footer_links-item">
          <a class="page_footer_links-link" href="/javascript/ultimate-in-memory-data-collection-manipulation-with-supergroup-js">
           Ultimate In-memory Data Collection Manipulation with Supergroup.js
          </a>
         </li>
         <li class="page_footer_links-item">
          <a class="page_footer_links-link" href="/machine-learning/real-time-object-detection-using-mser-in-ios">
           Real-time Object Detection Using MSER in iOS
          </a>
         </li>
         <li class="page_footer_links-item">
          <a class="page_footer_links-link" href="/nodejs/let-loopback-do-it-a-walkthrough-of-the-node-api-framework-you-ve-been-dreaming-of">
           Let LoopBack Do It: A Walkthrough of the Node API Framework You've Been Dreaming Of
          </a>
         </li>
         <li class="page_footer_links-item">
          <a class="page_footer_links-link" href="/javascript/ractive-js-web-apps-made-easy">
           Ractive.js: Web Apps Made Easy
          </a>
         </li>
         <li class="page_footer_links-item">
          <a class="page_footer_links-link" href="/qa/how-to-write-testable-code-and-why-it-matters">
           How to Write Testable Code and Why it Matters
          </a>
         </li>
         <li class="page_footer_links-item">
          <a class="page_footer_links-link" href="/ux/getting-started-with-modular-front-end-development">
           Getting Started with Modular Front-End Development
          </a>
         </li>
        </ul>
       </section>
       <section class="page_footer_links-column is-2">
        <h3 class="page_footer_links-column-header">
         Navigation
        </h3>
        <ul class="page_footer_links-list is-main">
         <li class="page_footer_links-item">
          <a class="page_footer_links-link" href="/top-3-percent">
           Top 3%
          </a>
         </li>
         <li class="page_footer_links-item">
          <a class="page_footer_links-link" href="/why">
           Why
          </a>
         </li>
         <li class="page_footer_links-item">
          <a class="page_footer_links-link" href="/how">
           How
          </a>
         </li>
         <li class="page_footer_links-item">
          <a class="page_footer_links-link" href="/what">
           What
          </a>
         </li>
         <li class="page_footer_links-item">
          <a class="page_footer_links-link" href="/clients">
           Clients
          </a>
         </li>
         <li class="page_footer_links-item">
          <a class="page_footer_links-link" href="/about">
           About Us
          </a>
         </li>
         <li class="page_footer_links-item">
          <a class="page_footer_links-link" href="/community">
           Community
          </a>
         </li>
         <li class="page_footer_links-item">
          <a class="page_footer_links-link" href="/blog">
           Blog
          </a>
         </li>
         <li class="page_footer_links-item">
          <a class="page_footer_links-link" href="/resources">
           Resources
          </a>
         </li>
         <li class="page_footer_links-item">
          <a class="page_footer_links-link" href="/videos">
           Videos
          </a>
         </li>
         <li class="page_footer_links-item">
          <a class="page_footer_links-link" href="/technology-battles">
           Technology battles
          </a>
         </li>
         <li class="page_footer_links-item">
          <a class="page_footer_links-link" href="/client-reviews">
           Client reviews
          </a>
         </li>
         <li class="page_footer_links-item">
          <a class="page_footer_links-link" href="/developer-reviews">
           Developer reviews
          </a>
         </li>
         <li class="page_footer_links-item">
          <a class="page_footer_links-link" href="/branding">
           Branding
          </a>
         </li>
         <li class="page_footer_links-item">
          <a class="page_footer_links-link" href="/press-center">
           Press center
          </a>
         </li>
         <li class="page_footer_links-item">
          <a class="page_footer_links-link" href="/faq">
           FAQ
          </a>
         </li>
        </ul>
       </section>
       <section class="page_footer_links-column is-3">
        <h3 class="page_footer_links-column-header">
         Contact
        </h3>
        <ul class="page_footer_links-list">
         <li class="page_footer_links-item">
          <a class="page_footer_links-link" href="/careers">
           Work at Toptal
          </a>
         </li>
         <li class="page_footer_links-item">
          <a class="page_footer_links-link" href="/developers">
           Apply as a developer
          </a>
         </li>
         <li class="page_footer_links-item">
          <a class="page_footer_links-link" href="/talent_partners">
           Become a partner
          </a>
         </li>
         <li class="page_footer_links-item">
          <a class="page_footer_links-link" href="/contact">
           Send us an email
          </a>
         </li>
         <li class="page_footer_links-item">
          <a class="page_footer_links-link" href="tel:+18886043188">
           Call +1.888.604.3188
          </a>
         </li>
        </ul>
       </section>
       <section class="page_footer_links-column is-4">
        <h3 class="page_footer_links-column-header">
         Social
        </h3>
        <ul class="page_footer_links-list">
         <li class="page_footer_links-item">
          <a class="page_footer_links-link" href="https://www.facebook.com/pages/toptal/141928212544793" target="_blank">
           Facebook
          </a>
         </li>
         <li class="page_footer_links-item">
          <a class="page_footer_links-link" href="https://twitter.com/toptalllc" target="_blank">
           Twitter
          </a>
         </li>
         <li class="page_footer_links-item">
          <a class="page_footer_links-link" href="https://plus.google.com/+Toptalllc/" target="_blank">
           Google+
          </a>
         </li>
         <li class="page_footer_links-item">
          <a class="page_footer_links-link" href="https://github.com/toptal" target="_blank">
           GitHub
          </a>
         </li>
         <li class="page_footer_links-item">
          <a class="page_footer_links-link" href="http://dribbble.com/toptal" target="_blank">
           Dribbble
          </a>
         </li>
        </ul>
       </section>
      </nav>
     </div>
    </section>
    <section class="grid-row page_footer_legal-wrapper">
     <div class="grid-row-inner is-wide has-medium_padding page_footer_legal">
      <div class="logo-wrapper page_footer_legal-logotype">
       <a class="logo is-mini is-link" href="/">
        Toptal
       </a>
       <p class="logo-motto is-mini">
        Exclusive access to top developers
       </p>
      </div>
      <ul class="page_footer_legal-links">
       <li class="page_footer_legal-links_item is-copyright">
        <p class="page_footer_legal-copyright">
          Copyright 2010 - 2015 Toptal, LLC
        </p>
       </li>
       <li class="page_footer_legal-links_item">
        <a class="page_footer_legal-link" href="/privacy">
         Privacy Policy
        </a>
        ,
       </li>
       <li class="page_footer_legal-links_item">
        <a class="page_footer_legal-link" href="/developers/tos">
         Terms of Service
        </a>
       </li>
      </ul>
     </div>
    </section>
   </footer>
  </div>
  <div class="layout-overlay" data-view="layout#overlay">
  </div>
  <div class="notification-container" data-view="notifications#service">
  </div>
  <script type="text/javascript">
   setTimeout(function () {
  classNameWithFont = document.documentElement.className + ' wf-active'
  document.documentElement.className = classNameWithFont
}, 0);
  </script>
  <script debug="false" src="http://assets.toptal.io/assets/public-84f013821cd4ff5d96df17f64724d72b.js">
  </script>
  <script debug="false" src="http://assets.toptal.io/assets/blog-722df17f39e24bb5df6907aa1ab13652.js">
  </script>
  <script type="text/javascript">
   if (window.bounceModalSettings.show) {
  window.bounceModals.init(function(settings) {
    if (!settings.country.white_listed) {
      settings.type = 'tshirt';
    }
  });
}
  </script>
  <div class="layout-counters">
   <script type="text/javascript">
    if (typeof(Widgets) !== 'undefined') {
  window.googleAnalytics = new Widgets.GoogleAnalytics('UA-21104039-1', 'auto');
  window.googleAnalytics.bucketRole('', '');
  if (gon['ga_settings']){
    window.googleAnalytics.grouping(gon['ga_settings']['group']);
  }
  window.googleAnalytics.trackPageview();
  window.googleAnalytics.track15secondsRead();

  if (window.optimizely &amp;&amp; window.optimizely.data) {
    window.googleAnalytics.trackOptimizelyExperiment(window.optimizely.data.state.variationMap)
  }
}
   </script>
   <script type="text/javascript">
    !function(){var analytics=window.analytics=window.analytics||[];if(!analytics.initialize)if(analytics.invoked)window.console&amp;&amp;console.error&amp;&amp;console.error("Segment snippet included twice.");else{analytics.invoked=!0;analytics.methods=["trackSubmit","trackClick","trackLink","trackForm","pageview","identify","group","track","ready","alias","page","once","off","on"];analytics.factory=function(t){return function(){var e=Array.prototype.slice.call(arguments);e.unshift(t);analytics.push(e);return analytics}};for(var t=0;t&lt;analytics.methods.length;t++){var e=analytics.methods[t];analytics[e]=analytics.factory(e)}analytics.load=function(t){var e=document.createElement("script");e.type="text/javascript";e.async=!0;e.src=("https:"===document.location.protocol?"https://":"http://")+"cdn.segment.com/analytics.js/v1/"+t+"/analytics.min.js";var n=document.getElementsByTagName("script")[0];n.parentNode.insertBefore(e,n)};analytics.SNIPPET_VERSION="3.0.1";
analytics.load('jnS4QsHOCAOeG6XvMDCjD9n9bAcQ53Mb');

analytics.page('posts#show');
}}();
   </script>
   <script type="text/javascript">
    adroll_adv_id = "6ZOMR2QLHZBEFEIMAJHJ4K";
adroll_pix_id = "FBQUGOS3RRAI3PZP2HVOYG";
(function () {
var oldonload = window.onload;
window.onload = function(){
   __adroll_loaded=true;
   var scr = document.createElement("script");
   var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "http://a.adroll.com");
   scr.setAttribute('async', 'true');
   scr.type = "text/javascript";
   scr.src = host + "/j/roundtrip.js";
   ((document.getElementsByTagName('head') || [null])[0] ||
    document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
   if(oldonload){oldonload()}};
}());
   </script>
   <img height="1" src="//ib.adnxs.com/seg?add=308219&amp;t=2" width="1"/>
   <script type="text/javascript">
    setTimeout(function(){var a=document.createElement("script");
var b=document.getElementsByTagName("script")[0];
a.src=document.location.protocol+"//dnn506yrbagrg.cloudfront.net/pages/scripts/0012/5977.js?"+Math.floor(new Date().getTime()/3600000);
a.async=true;a.type="text/javascript";b.parentNode.insertBefore(a,b)}, 1);
   </script>
  </div>
  <div class="breadcrumbs" id="breadcrumbs">
   <span itemscope="itemscope" itemtype="http://data-vocabulary.org/Breadcrumb">
    <a href="http://www.toptal.com/" itemprop="url">
     <span itemprop="title">
      Home
     </span>
    </a>
   </span>
   
   <span itemscope="itemscope" itemtype="http://data-vocabulary.org/Breadcrumb">
    <a href="http://www.toptal.com/blog" itemprop="url">
     <span itemprop="title">
      Blog
     </span>
    </a>
   </span>
   
   <span itemscope="itemscope" itemtype="http://data-vocabulary.org/Breadcrumb">
    <a class="current" href="/java/hunting-memory-leaks-in-java" itemprop="url">
     <span itemprop="title">
      Hunting Memory Leaks in Java
     </span>
    </a>
   </span>
  </div>
 </body>
</html>