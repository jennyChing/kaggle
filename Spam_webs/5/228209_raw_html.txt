<!DOCTYPE html>
<html lang="en">
 <head>
  <meta charset="utf-8"/>
  <title>
   Things you may not know about jQuery  James Padolsey
  </title>
  <link href="http://james.padolsey.com/wp-content/themes/james.padolsey/style.css?20150603_6" media="screen" rel="stylesheet" type="text/css"/>
  <link href="http://james.padolsey.com/feed/" rel="alternate" title="James Padolsey RSS Feed" type="application/rss+xml"/>
  <link href="http://james.padolsey.com/xmlrpc.php" rel="pingback"/>
  <link href="/favicon.ico" rel="icon" type="image/x-icon"/>
  <link href="/favicon.ico" rel="shortcut icon"/>
  <link href="http://www.myopenid.com/server" rel="openid.server"/>
  <link href="http://jp1990-2.myopenid.com/" rel="openid.delegate"/>
  <script src="http://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js" type="text/javascript">
  </script>
  <script src="//use.typekit.net/zfd2kvw.js">
  </script>
  <script>
   try{Typekit.load();}catch(e){}
  </script>
  <link href="http://james.padolsey.com/cool-stuff/things-you-may-not-know-about-jquery/feed/" rel="alternate" title="James Padolsey  Things you may not know about jQuery Comments Feed" type="application/rss+xml"/>
  <script type="text/javascript">
   window._wpemojiSettings = {"baseUrl":"http:\/\/s.w.org\/images\/core\/emoji\/72x72\/","ext":".png","source":{"concatemoji":"http:\/\/james.padolsey.com\/wp-includes\/js\/wp-emoji-release.min.js?ver=4.2.2"}};
			!function(a,b,c){function d(a){var c=b.createElement("canvas"),d=c.getContext&amp;&amp;c.getContext("2d");return d&amp;&amp;d.fillText?(d.textBaseline="top",d.font="600 32px Arial","flag"===a?(d.fillText(String.fromCharCode(55356,56812,55356,56807),0,0),c.toDataURL().length&gt;3e3):(d.fillText(String.fromCharCode(55357,56835),0,0),0!==d.getImageData(16,16,1,1).data[0])):!1}function e(a){var c=b.createElement("script");c.src=a,c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var f,g;c.supports={simple:d("simple"),flag:d("flag")},c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.simple&amp;&amp;c.supports.flag||(g=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",g,!1),a.addEventListener("load",g,!1)):(a.attachEvent("onload",g),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&amp;&amp;c.readyCallback()})),f=c.source||{},f.concatemoji?e(f.concatemoji):f.wpemoji&amp;&amp;f.twemoji&amp;&amp;(e(f.twemoji),e(f.wpemoji)))}(window,document,window._wpemojiSettings);
  </script>
  <style type="text/css">
   img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
  </style>
  <link href="http://james.padolsey.com/wp-content/plugins/wp-syntax/css/wp-syntax.css?ver=1.0" id="wp-syntax-css-css" media="all" rel="stylesheet" type="text/css"/>
  <link href="http://james.padolsey.com/xmlrpc.php?rsd" rel="EditURI" title="RSD" type="application/rsd+xml"/>
  <link href="http://james.padolsey.com/wp-includes/wlwmanifest.xml" rel="wlwmanifest" type="application/wlwmanifest+xml"/>
  <link href="http://james.padolsey.com/snippets/random-unique/" rel="prev" title="Random &amp; Unique!"/>
  <link href="http://james.padolsey.com/snippets/parsing-urls-with-the-dom/" rel="next" title="Parsing URLs with the DOM!"/>
  <meta content="WordPress 4.2.2" name="generator"/>
  <link href="http://james.padolsey.com/cool-stuff/things-you-may-not-know-about-jquery/" rel="canonical"/>
  <link href="http://james.padolsey.com/?p=558" rel="shortlink"/>
  <style type="text/css">
   .recentcomments a{display:inline !important;padding:0 !important;margin:0 !important;}
  </style>
 </head>
 <body class="body">
  <div id="top">
   <div id="header">
    <!--&lt;div id="logo"&gt;
      &lt;a href="/"&gt;&lt;span&gt;James Padolsey&lt;/span&gt;&lt;/a&gt;
    &lt;/div&gt;-->
    <ul id="nav">
     <li>
      <a class="home" href="/">
       <span>
        JAMES PADOLSEY
       </span>
      </a>
     </li>
     <li>
      <a href="/posts">
       <span>
        Posts
       </span>
      </a>
     </li>
     <li>
      <a href="/contact">
       <span>
        Contact
       </span>
      </a>
     </li>
     <li>
      <a href="/cv">
       <span>
        CV
       </span>
      </a>
     </li>
     <li class="rss">
      <a href="http://feeds.feedburner.com/JamesPadolsey?format=html" title="Subscribe to RSS">
       RSS
      </a>
     </li>
    </ul>
   </div>
  </div>
  <div id="main">
   <div class="single" id="content">
    <h1>
     Things you may not know about jQuery
    </h1>
    <small class="author">
     Posted in '
     <a href="http://james.padolsey.com/category/cool-stuff/" rel="category tag">
      Cool Stuff
     </a>
     ,
     <a href="http://james.padolsey.com/category/javascript/" rel="category tag">
      JavaScript
     </a>
     ,
     <a href="http://james.padolsey.com/category/my-life/" rel="category tag">
      My Life
     </a>
     ,
     <a href="http://james.padolsey.com/category/news/" rel="category tag">
      News
     </a>
     ' on February 19th, 2009
     <!-- by james -->
    </small>
    <div class="post-content">
     <img alt="Things you may not know about jQuery" class="main-img" src="http://james.padolsey.com/wp-content/uploads/jquery2.png"/>
     <p>
      I was going to do a bit of a series, releasing a jQuery tip every day or week or something, but I think Im a little too lazy to commit to something like that. So Ive compiled them all into one post! Ill probably add to the list at later dates so make sure to bookmark it!
     </p>
     <p>
      Do you have a tip nobody knows about?  Add it in the comments
     </p>
     <ul class="imp">
      <li>
       <code>
        $.fn
       </code>
       is just a shortcut to
       <code>
        jQuery.prototype
       </code>
       .
      </li>
      <li>
       You can test if a jQuery collection contains any elements by trying to access the first element, e.g.
       <code>
        if($(selector)[0]){...}
       </code>
       .
      </li>
      <li>
       jQuery normalizes the event object across all browsers! Have a look at all the available properties/methods over here:
       <a href="http://docs.jquery.com/Events/jQuery.Event">
        http://docs.jquery.com/Events/jQuery.Event
       </a>
       .
      </li>
      <li>
       When you create a plugin you have access to the jQuery chains previous object:
       <div class="wp_syntax">
        <table>
         <tr>
          <td class="code">
           <pre class="javascript" style="font-family:monospace;">
            jQuery.
            <span style="color: #660066;">
             fn
            </span>
            .
            <span style="color: #660066;">
             doSomething
            </span>
            <span style="color: #339933;">
             =
            </span>
            <span style="color: #000066; font-weight: bold;">
             function
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #009900;">
             {
            </span>
            <span style="color: #000066; font-weight: bold;">
             this
            </span>
            <span style="color: #339933;">
             ;
            </span>
            <span style="color: #006600; font-style: italic;">
             // =&gt; $('a')
            </span>
            <span style="color: #000066; font-weight: bold;">
             this
            </span>
            .
            <span style="color: #660066;">
             prevObject
            </span>
            <span style="color: #339933;">
             ;
            </span>
            <span style="color: #006600; font-style: italic;">
             // =&gt; $('li')
            </span>
            <span style="color: #006600; font-style: italic;">
             // Remember chaining in your plugins:
            </span>
            <span style="color: #000066; font-weight: bold;">
             return
            </span>
            <span style="color: #000066; font-weight: bold;">
             this
            </span>
            <span style="color: #339933;">
             ;
            </span>
            <span style="color: #009900;">
             }
            </span>
            <span style="color: #339933;">
             ;
            </span>
            jQuery
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             'li'
            </span>
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             show
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             find
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             'a'
            </span>
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             doSomething
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
            <span style="color: #006600; font-style: italic;">
             // You could even create a new 'root' plugin:
            </span>
            <span style="color: #006600; font-style: italic;">
             // (Returns the 'root' of a chain)
            </span>
            jQuery.
            <span style="color: #660066;">
             fn
            </span>
            .
            <span style="color: #660066;">
             root
            </span>
            <span style="color: #339933;">
             =
            </span>
            <span style="color: #000066; font-weight: bold;">
             function
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #009900;">
             {
            </span>
            <span style="color: #006600; font-style: italic;">
             // Root is always document so we have to
            </span>
            <span style="color: #006600; font-style: italic;">
             // go back to one before the last:
            </span>
            <span style="color: #000066; font-weight: bold;">
             var
            </span>
            root
            <span style="color: #339933;">
             =
            </span>
            <span style="color: #000066; font-weight: bold;">
             this
            </span>
            <span style="color: #339933;">
             ;
            </span>
            while
            <span style="color: #009900;">
             (
            </span>
            root.
            <span style="color: #660066;">
             prevObject
            </span>
            .
            <span style="color: #660066;">
             prevObject
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #009900;">
             {
            </span>
            root
            <span style="color: #339933;">
             =
            </span>
            root.
            <span style="color: #660066;">
             prevObject
            </span>
            <span style="color: #339933;">
             ;
            </span>
            <span style="color: #009900;">
             }
            </span>
            <span style="color: #000066; font-weight: bold;">
             return
            </span>
            root
            <span style="color: #339933;">
             ;
            </span>
            <span style="color: #009900;">
             }
            </span>
            <span style="color: #339933;">
             ;
            </span>
            $
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             'li'
            </span>
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             find
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             'a'
            </span>
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             children
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             root
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
            <span style="color: #006600; font-style: italic;">
             // &lt;= $('li') is returned
            </span>
            <span style="color: #006600; font-style: italic;">
             // Using root() is the same as using end().end() in this situation
            </span>
           </pre>
          </td>
         </tr>
        </table>
       </div>
      </li>
      <li>
       You can namespace events! This is especially useful for plugin development:
       <div class="wp_syntax">
        <table>
         <tr>
          <td class="code">
           <pre class="javascript" style="font-family:monospace;">
            jQuery.
            <span style="color: #660066;">
             fn
            </span>
            .
            <span style="color: #660066;">
             myPlugin
            </span>
            <span style="color: #339933;">
             =
            </span>
            <span style="color: #000066; font-weight: bold;">
             function
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #009900;">
             {
            </span>
            <span style="color: #006600; font-style: italic;">
             // Clean up after yourself!
            </span>
            jQuery.
            <span style="color: #660066;">
             myPlugin
            </span>
            <span style="color: #339933;">
             =
            </span>
            <span style="color: #009900;">
             {
            </span>
            cleanUp
            <span style="color: #339933;">
             :
            </span>
            <span style="color: #000066; font-weight: bold;">
             function
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #009900;">
             {
            </span>
            <span style="color: #006600; font-style: italic;">
             // Remove all click handlers binded
            </span>
            <span style="color: #006600; font-style: italic;">
             // as a result of the plugin:
            </span>
            jQuery
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             '*'
            </span>
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             unbind
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             'click.myPlugin'
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
            <span style="color: #006600; font-style: italic;">
             // ALternatively, remove ALL events:
            </span>
            jQuery
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             '*'
            </span>
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             unbind
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             '.myPlugin'
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
            <span style="color: #009900;">
             }
            </span>
            <span style="color: #009900;">
             }
            </span>
            <span style="color: #339933;">
             ;
            </span>
            <span style="color: #000066; font-weight: bold;">
             return
            </span>
            <span style="color: #000066; font-weight: bold;">
             this
            </span>
            .
            <span style="color: #660066;">
             bind
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             'click.myPlugin'
            </span>
            <span style="color: #339933;">
             ,
            </span>
            <span style="color: #000066; font-weight: bold;">
             function
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #009900;">
             {
            </span>
            <span style="color: #006600; font-style: italic;">
             // Do something...
            </span>
            <span style="color: #009900;">
             }
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
            <span style="color: #009900;">
             }
            </span>
            <span style="color: #339933;">
             ;
            </span>
            <span style="color: #006600; font-style: italic;">
             // Note, you can also namespace data:
            </span>
            <span style="color: #006600; font-style: italic;">
             // E.g. $(elem).data('whatever.myPlugin',value);
            </span>
           </pre>
          </td>
         </tr>
        </table>
       </div>
      </li>
      <li>
       You can access all event handlers bound to an element (or any object) through jQuerys event storage:
       <div class="wp_syntax">
        <table>
         <tr>
          <td class="code">
           <pre class="javascript" style="font-family:monospace;">
            <span style="color: #006600; font-style: italic;">
             // List bound events:
            </span>
            console.
            <span style="color: #660066;">
             dir
            </span>
            <span style="color: #009900;">
             (
            </span>
            jQuery
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             '#elem'
            </span>
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             data
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             'events'
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
            <span style="color: #006600; font-style: italic;">
             // Log ALL handlers for ALL events:
            </span>
            jQuery.
            <span style="color: #660066;">
             each
            </span>
            <span style="color: #009900;">
             (
            </span>
            $
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             '#elem'
            </span>
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             data
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             'events'
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ,
            </span>
            <span style="color: #000066; font-weight: bold;">
             function
            </span>
            <span style="color: #009900;">
             (
            </span>
            i
            <span style="color: #339933;">
             ,
            </span>
            event
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #009900;">
             {
            </span>
            jQuery.
            <span style="color: #660066;">
             each
            </span>
            <span style="color: #009900;">
             (
            </span>
            event
            <span style="color: #339933;">
             ,
            </span>
            <span style="color: #000066; font-weight: bold;">
             function
            </span>
            <span style="color: #009900;">
             (
            </span>
            i
            <span style="color: #339933;">
             ,
            </span>
            handler
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #009900;">
             {
            </span>
            console.
            <span style="color: #660066;">
             log
            </span>
            <span style="color: #009900;">
             (
            </span>
            handler.
            <span style="color: #660066;">
             toString
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
            <span style="color: #009900;">
             }
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
            <span style="color: #009900;">
             }
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
            <span style="color: #006600; font-style: italic;">
             // You can see the actual functions which will occur
            </span>
            <span style="color: #006600; font-style: italic;">
             // on certain events; great for debugging!
            </span>
           </pre>
          </td>
         </tr>
        </table>
       </div>
      </li>
      <li>
       jQuery natively supports JSONP (
       <a href="http://json.org">
        JSON
       </a>
       with padding) which effectively means you can make cross-domain "Ajax" requests (although not strictly Ajax since it doesnt use XHR). For this to work the requested domain must have some JSONP API in place (it must be able wrap the JSON with a specified callback function). An example:
       <div class="wp_syntax">
        <table>
         <tr>
          <td class="code">
           <pre class="javascript" style="font-family:monospace;">
            <span style="color: #000066; font-weight: bold;">
             function
            </span>
            getLatestFlickrPics
            <span style="color: #009900;">
             (
            </span>
            tag
            <span style="color: #339933;">
             ,
            </span>
            callback
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #009900;">
             {
            </span>
            <span style="color: #000066; font-weight: bold;">
             var
            </span>
            flickrFeed
            <span style="color: #339933;">
             =
            </span>
            <span style="color: #3366CC;">
             'http://api.flickr.com/services/feeds/photos_public.gne?tags='
            </span>
            <span style="color: #339933;">
             +
            </span>
            tag
            <span style="color: #339933;">
             +
            </span>
            <span style="color: #3366CC;">
             '&amp;tagmode=any&amp;format=json&amp;jsoncallback=?'
            </span>
            <span style="color: #339933;">
             ;
            </span>
            jQuery.
            <span style="color: #660066;">
             getJSON
            </span>
            <span style="color: #009900;">
             (
            </span>
            flickrFeed
            <span style="color: #339933;">
             ,
            </span>
            callback
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
            <span style="color: #009900;">
             }
            </span>
            <span style="color: #006600; font-style: italic;">
             // Usage:
            </span>
            getLatestFlickrPics
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             'ferrari'
            </span>
            <span style="color: #339933;">
             ,
            </span>
            <span style="color: #000066; font-weight: bold;">
             function
            </span>
            <span style="color: #009900;">
             (
            </span>
            data
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #009900;">
             {
            </span>
            jQuery.
            <span style="color: #660066;">
             each
            </span>
            <span style="color: #009900;">
             (
            </span>
            data.
            <span style="color: #660066;">
             items
            </span>
            <span style="color: #339933;">
             ,
            </span>
            <span style="color: #000066; font-weight: bold;">
             function
            </span>
            <span style="color: #009900;">
             (
            </span>
            i
            <span style="color: #339933;">
             ,
            </span>
            item
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #009900;">
             {
            </span>
            $
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             "&lt;img/&gt;"
            </span>
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             attr
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             "src"
            </span>
            <span style="color: #339933;">
             ,
            </span>
            item.
            <span style="color: #660066;">
             media
            </span>
            .
            <span style="color: #660066;">
             m
            </span>
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             appendTo
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             'body'
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
            <span style="color: #009900;">
             }
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
            <span style="color: #009900;">
             }
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
           </pre>
          </td>
         </tr>
        </table>
       </div>
      </li>
      <li>
       You might find it a little messy but jQuery enables us to create an entire DOM structure within a single chain:
       <div class="wp_syntax">
        <table>
         <tr>
          <td class="code">
           <pre class="javascript" style="font-family:monospace;">
            <span style="color: #006600; font-style: italic;">
             // Create and inject in one chain:
            </span>
            jQuery
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             '&lt;div/&gt;'
            </span>
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             append
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             '&lt;p&gt;&lt;a href="#"&gt;Foo&lt;/a&gt;&lt;/p&gt;'
            </span>
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             find
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             'p a'
            </span>
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             click
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #000066; font-weight: bold;">
             function
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #009900;">
             {
            </span>
            <span style="color: #006600; font-style: italic;">
             // Do something...
            </span>
            <span style="color: #000066; font-weight: bold;">
             return
            </span>
            <span style="color: #003366; font-weight: bold;">
             false
            </span>
            <span style="color: #339933;">
             ;
            </span>
            <span style="color: #009900;">
             }
            </span>
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             end
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             append
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             '&lt;p&gt;&lt;a href="#"&gt;Bar&lt;/a&gt;&lt;/p&gt;'
            </span>
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             find
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             'p:eq(1) a'
            </span>
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             click
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #000066; font-weight: bold;">
             function
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #009900;">
             {
            </span>
            <span style="color: #006600; font-style: italic;">
             // Do something else...
            </span>
            <span style="color: #000066; font-weight: bold;">
             return
            </span>
            <span style="color: #003366; font-weight: bold;">
             false
            </span>
            <span style="color: #339933;">
             ;
            </span>
            <span style="color: #009900;">
             }
            </span>
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             end
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             appendTo
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             'body'
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
           </pre>
          </td>
         </tr>
        </table>
       </div>
      </li>
      <li>
       Accessing the DOM elements within a jQuery collection is incredibly easy:
       <div class="wp_syntax">
        <table>
         <tr>
          <td class="code">
           <pre class="javascript" style="font-family:monospace;">
            <span style="color: #000066; font-weight: bold;">
             var
            </span>
            HTMLCollection
            <span style="color: #339933;">
             =
            </span>
            $
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             'div'
            </span>
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #000066; font-weight: bold;">
             get
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
            <span style="color: #006600; font-style: italic;">
             // Alternatively, if you only want the first element:
            </span>
            $
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             'div'
            </span>
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #000066; font-weight: bold;">
             get
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #CC0000;">
             0
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
            $
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             'div'
            </span>
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #000066; font-weight: bold;">
             get
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #009900;">
             [
            </span>
            <span style="color: #CC0000;">
             0
            </span>
            <span style="color: #009900;">
             ]
            </span>
            <span style="color: #339933;">
             ;
            </span>
            $
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             'div'
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #009900;">
             [
            </span>
            <span style="color: #CC0000;">
             0
            </span>
            <span style="color: #009900;">
             ]
            </span>
            <span style="color: #339933;">
             ;
            </span>
           </pre>
          </td>
         </tr>
        </table>
       </div>
      </li>
      <li>
       Not only can you bind events to DOM elements; you can also bind a custom event to ANY object!
       <div class="wp_syntax">
        <table>
         <tr>
          <td class="code">
           <pre class="javascript" style="font-family:monospace;">
            <span style="color: #000066; font-weight: bold;">
             function
            </span>
            Widget
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #009900;">
             {
            </span>
            <span style="color: #006600; font-style: italic;">
             // Do something...
            </span>
            <span style="color: #009900;">
             }
            </span>
            <span style="color: #339933;">
             ;
            </span>
            <span style="color: #000066; font-weight: bold;">
             var
            </span>
            myPhotoWidget
            <span style="color: #339933;">
             =
            </span>
            <span style="color: #000066; font-weight: bold;">
             new
            </span>
            Widget
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             'photos'
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
            jQuery
            <span style="color: #009900;">
             (
            </span>
            myPhotoWidget
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             bind
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             'photoAdd'
            </span>
            <span style="color: #339933;">
             ,
            </span>
            <span style="color: #000066; font-weight: bold;">
             function
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #009900;">
             {
            </span>
            <span style="color: #006600; font-style: italic;">
             // Custom event handling...
            </span>
            <span style="color: #009900;">
             }
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
            <span style="color: #006600; font-style: italic;">
             // Trigger event:
            </span>
            jQuery
            <span style="color: #009900;">
             (
            </span>
            myPhotoWidget
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             trigger
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             'photoAdd'
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
           </pre>
          </td>
         </tr>
        </table>
       </div>
      </li>
      <li>
       Finding the index of a selected element is very easy. jQuery gives us the index method:
       <div class="wp_syntax">
        <table>
         <tr>
          <td class="code">
           <pre class="javascript" style="font-family:monospace;">
            $
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             'table tr'
            </span>
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             click
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #000066; font-weight: bold;">
             function
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #009900;">
             {
            </span>
            <span style="color: #006600; font-style: italic;">
             // Find index of clicked table row:
            </span>
            <span style="color: #000066; font-weight: bold;">
             var
            </span>
            index
            <span style="color: #339933;">
             =
            </span>
            $
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             'table tr'
            </span>
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             index
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #000066; font-weight: bold;">
             this
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
            <span style="color: #009900;">
             }
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
           </pre>
          </td>
         </tr>
        </table>
       </div>
      </li>
      <li>
       You can create your own filter selectors. I did a
       <a href="http://james.padolsey.com/javascript/extending-jquerys-selector-capabilities/">
        post on this
       </a>
       a while back, but take a look at an example anyway:
       <div class="wp_syntax">
        <table>
         <tr>
          <td class="code">
           <pre class="javascript" style="font-family:monospace;">
            $.
            <span style="color: #660066;">
             expr
            </span>
            <span style="color: #009900;">
             [
            </span>
            <span style="color: #3366CC;">
             ':'
            </span>
            <span style="color: #009900;">
             ]
            </span>
            .
            <span style="color: #660066;">
             external
            </span>
            <span style="color: #339933;">
             =
            </span>
            <span style="color: #000066; font-weight: bold;">
             function
            </span>
            <span style="color: #009900;">
             (
            </span>
            elem
            <span style="color: #339933;">
             ,
            </span>
            index
            <span style="color: #339933;">
             ,
            </span>
            match
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #009900;">
             {
            </span>
            <span style="color: #000066; font-weight: bold;">
             var
            </span>
            url
            <span style="color: #339933;">
             =
            </span>
            elem.
            <span style="color: #660066;">
             href
            </span>
            <span style="color: #339933;">
             ||
            </span>
            elem.
            <span style="color: #660066;">
             src
            </span>
            <span style="color: #339933;">
             ,
            </span>
            loc
            <span style="color: #339933;">
             =
            </span>
            window.
            <span style="color: #660066;">
             location
            </span>
            <span style="color: #339933;">
             ;
            </span>
            <span style="color: #000066; font-weight: bold;">
             return
            </span>
            <span style="color: #339933;">
             !!
            </span>
            url.
            <span style="color: #660066;">
             match
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #000066; font-weight: bold;">
             new
            </span>
            RegExp
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             '^'
            </span>
            <span style="color: #339933;">
             +
            </span>
            loc.
            <span style="color: #660066;">
             protocol
            </span>
            <span style="color: #339933;">
             +
            </span>
            <span style="color: #3366CC;">
             '//'
            </span>
            <span style="color: #339933;">
             +
            </span>
            <span style="color: #3366CC;">
             '(?!'
            </span>
            <span style="color: #339933;">
             +
            </span>
            loc.
            <span style="color: #660066;">
             hostname
            </span>
            <span style="color: #339933;">
             +
            </span>
            <span style="color: #3366CC;">
             ')'
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
            <span style="color: #009900;">
             }
            </span>
            <span style="color: #339933;">
             ;
            </span>
            <span style="color: #006600; font-style: italic;">
             // You can now use it within your selectors:
            </span>
            <span style="color: #006600; font-style: italic;">
             // Find all external anchors:
            </span>
            $
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             'a:external'
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
            <span style="color: #006600; font-style: italic;">
             // Find all external script elements:
            </span>
            $
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             'script:external'
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
            <span style="color: #006600; font-style: italic;">
             // Determine if link is external:
            </span>
            $
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             'a#mylink'
            </span>
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             is
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             ':external'
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
            <span style="color: #006600; font-style: italic;">
             // true/false
            </span>
           </pre>
          </td>
         </tr>
        </table>
       </div>
      </li>
      <li>
       I see quite a lot of people still using JavaScripts FOR or WHILE constructs to create loops in their jQuery scripts. Theres nothing wrong with this but be aware that jQuerys each method can also iterate over arrays and objects!
       <div class="wp_syntax">
        <table>
         <tr>
          <td class="code">
           <pre class="javascript" style="font-family:monospace;">
            <span style="color: #000066; font-weight: bold;">
             var
            </span>
            myArr
            <span style="color: #339933;">
             =
            </span>
            <span style="color: #009900;">
             [
            </span>
            <span style="color: #3366CC;">
             'apple'
            </span>
            <span style="color: #339933;">
             ,
            </span>
            <span style="color: #3366CC;">
             'banana'
            </span>
            <span style="color: #339933;">
             ,
            </span>
            <span style="color: #3366CC;">
             'orange'
            </span>
            <span style="color: #009900;">
             ]
            </span>
            <span style="color: #339933;">
             ;
            </span>
            $.
            <span style="color: #660066;">
             each
            </span>
            <span style="color: #009900;">
             (
            </span>
            myArr
            <span style="color: #339933;">
             ,
            </span>
            <span style="color: #000066; font-weight: bold;">
             function
            </span>
            <span style="color: #009900;">
             (
            </span>
            index
            <span style="color: #339933;">
             ,
            </span>
            item
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #009900;">
             {
            </span>
            <span style="color: #006600; font-style: italic;">
             // Do something with 'item'
            </span>
            <span style="color: #006600; font-style: italic;">
             // return false to BREAK
            </span>
            <span style="color: #006600; font-style: italic;">
             // return true to CONTINUE
            </span>
            <span style="color: #009900;">
             }
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
           </pre>
          </td>
         </tr>
        </table>
       </div>
      </li>
      <li>
       The filter method accepts a String selector or a function. When using it with a function you must return false to remove the element from the stack and true to keep it:
       <div class="wp_syntax">
        <table>
         <tr>
          <td class="code">
           <pre class="javascript" style="font-family:monospace;">
            $
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             'div'
            </span>
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             filter
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #000066; font-weight: bold;">
             function
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #009900;">
             {
            </span>
            <span style="color: #000066; font-weight: bold;">
             return
            </span>
            <span style="color: #000066; font-weight: bold;">
             this
            </span>
            .
            <span style="color: #660066;">
             childNodes
            </span>
            .
            <span style="color: #660066;">
             length
            </span>
            <span style="color: #339933;">
             &gt;
            </span>
            <span style="color: #CC0000;">
             10
            </span>
            <span style="color: #339933;">
             ;
            </span>
            <span style="color: #006600; font-style: italic;">
             // Must return a Boolean
            </span>
            <span style="color: #009900;">
             }
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
           </pre>
          </td>
         </tr>
        </table>
       </div>
      </li>
      <li>
       You dont have to give new elements IDs or classes to reference them later, just cache them into a variable:
       <div class="wp_syntax">
        <table>
         <tr>
          <td class="code">
           <pre class="javascript" style="font-family:monospace;">
            <span style="color: #000066; font-weight: bold;">
             var
            </span>
            myInjectedDiv
            <span style="color: #339933;">
             =
            </span>
            $
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             '&lt;div/&gt;'
            </span>
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             appendTo
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             'body'
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
            <span style="color: #006600; font-style: italic;">
             // Use 'myInjectedDiv' to reference the element:
            </span>
            myInjectedDiv.
            <span style="color: #660066;">
             bind
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             'click'
            </span>
            <span style="color: #339933;">
             ,
            </span>
            <span style="color: #000066; font-weight: bold;">
             function
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #009900;">
             {
            </span>
            <span style="color: #006600; font-style: italic;">
             // ...
            </span>
            <span style="color: #009900;">
             }
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
           </pre>
          </td>
         </tr>
        </table>
       </div>
      </li>
      <li>
       jQuerys map method is incredibly useful, the passed function will be run on every item of the passed array (or object) and whatever the function returns each time is added to the new array, take a look:
       <div class="wp_syntax">
        <table>
         <tr>
          <td class="code">
           <pre class="javascript" style="font-family:monospace;">
            <span style="color: #006600; font-style: italic;">
             // Create an array containing all anchor HREF attributes:
            </span>
            <span style="color: #000066; font-weight: bold;">
             var
            </span>
            URLs
            <span style="color: #339933;">
             =
            </span>
            $.
            <span style="color: #660066;">
             map
            </span>
            <span style="color: #009900;">
             (
            </span>
            $
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             'a'
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ,
            </span>
            <span style="color: #000066; font-weight: bold;">
             function
            </span>
            <span style="color: #009900;">
             (
            </span>
            elem
            <span style="color: #339933;">
             ,
            </span>
            index
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #009900;">
             {
            </span>
            <span style="color: #000066; font-weight: bold;">
             return
            </span>
            elem.
            <span style="color: #660066;">
             href
            </span>
            <span style="color: #339933;">
             ;
            </span>
            <span style="color: #009900;">
             }
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
            <span style="color: #006600; font-style: italic;">
             // URLs = ['http://google.com', 'http://whatever.com', 'http://yahoo.com']
            </span>
           </pre>
          </td>
         </tr>
        </table>
       </div>
      </li>
      <li>
       This isnt jQuery related but it can be very useful. When you need to compare two different ways of doing something (performance-wise) you can use the Firebug console to log the time taken to complete a chunk of code, for example:
       <div class="wp_syntax">
        <table>
         <tr>
          <td class="code">
           <pre class="javascript" style="font-family:monospace;">
            console.
            <span style="color: #660066;">
             time
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             'My first method'
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
            <span style="color: #006600; font-style: italic;">
             // Do something...
            </span>
            console.
            <span style="color: #660066;">
             timeEnd
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             'My first method'
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
            console.
            <span style="color: #660066;">
             time
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             'My second method'
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
            <span style="color: #006600; font-style: italic;">
             // Do something else...
            </span>
            console.
            <span style="color: #660066;">
             timeEnd
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             'My second method'
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
            <span style="color: #006600; font-style: italic;">
             // Firebug will log the time (in milliseconds) taken
            </span>
            <span style="color: #006600; font-style: italic;">
             // to complete each chunk...
            </span>
           </pre>
          </td>
         </tr>
        </table>
       </div>
      </li>
     </ul>
     <p class="postmetadata alt">
      <!--Comments are closed for this post.-->
     </p>
    </div>
    <!-- You can start editing here. -->
    <h3 id="comments">
     So far there's been 36 Responses to
     <br/>
     Things you may not know about jQuery
    </h3>
    <ol class="commentlist">
     <li id="comment-666">
      <span class="data">
       <img alt="" class="avatar avatar-48 photo" height="48" src="http://0.gravatar.com/avatar/375f473e75b0db1e161bb7554904634e?s=48&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g" srcset="http://0.gravatar.com/avatar/375f473e75b0db1e161bb7554904634e?s=96&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g 2x" width="48"/>
       <cite>
        <a class="url" href="http://another-perfect-world.org/" rel="external nofollow">
         Vasili
        </a>
       </cite>
       <small class="commentmetadata">
        <a href="#comment-666" title="">
         February 19th, 2009 at 1:17 pm
        </a>
       </small>
      </span>
      <div class="content">
       <p>
        Oh, this is very helpful. Thank you! 
       </p>
      </div>
     </li>
     <li id="comment-667">
      <span class="data">
       <img alt="" class="avatar avatar-48 photo" height="48" src="http://2.gravatar.com/avatar/bd88622fd224a32f6ad7ad63cde504bc?s=48&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g" srcset="http://2.gravatar.com/avatar/bd88622fd224a32f6ad7ad63cde504bc?s=96&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g 2x" width="48"/>
       <cite>
        <a class="url" href="http://www.brunobergher.com" rel="external nofollow">
         Bruno Bergher
        </a>
       </cite>
       <small class="commentmetadata">
        <a href="#comment-667" title="">
         February 19th, 2009 at 1:30 pm
        </a>
       </small>
      </span>
      <div class="content">
       <p>
        Very useful, as always. Thanks, James!
       </p>
      </div>
     </li>
     <li id="comment-668">
      <span class="data">
       <img alt="" class="avatar avatar-48 photo" height="48" src="http://0.gravatar.com/avatar/9aa2aa68144b2781ac025a29c83bbdd4?s=48&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g" srcset="http://0.gravatar.com/avatar/9aa2aa68144b2781ac025a29c83bbdd4?s=96&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g 2x" width="48"/>
       <cite>
        <a class="url" href="http://www.gasteroprod.com/" rel="external nofollow">
         Nicolas Hoizey
        </a>
       </cite>
       <small class="commentmetadata">
        <a href="#comment-668" title="">
         February 19th, 2009 at 1:31 pm
        </a>
       </small>
      </span>
      <div class="content">
       <p>
        Thanks a lot for these tips!
       </p>
       <p>
        But its a pain to click show code on each to be able to read
        <img alt=":-(" class="wp-smiley" src="http://james.padolsey.com/wp-includes/images/smilies/frownie.png" style="height: 1em; max-height: 1em;"/>
       </p>
      </div>
     </li>
     <li id="comment-669">
      <span class="data">
       <img alt="" class="avatar avatar-48 photo" height="48" src="http://0.gravatar.com/avatar/c7cf6cb00c652a5d18917ba8d736fde8?s=48&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g" srcset="http://0.gravatar.com/avatar/c7cf6cb00c652a5d18917ba8d736fde8?s=96&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g 2x" width="48"/>
       <cite>
        <a class="url" href="http://www.subprint.com" rel="external nofollow">
         Joe McCann
        </a>
       </cite>
       <small class="commentmetadata">
        <a href="#comment-669" title="">
         February 19th, 2009 at 2:22 pm
        </a>
       </small>
      </span>
      <div class="content">
       <p>
        Bad ass, once againwell done.
       </p>
      </div>
     </li>
     <li id="comment-670">
      <span class="data">
       <img alt="" class="avatar avatar-48 photo" height="48" src="http://2.gravatar.com/avatar/867ae2f7c8bed6471b285f02e2554e66?s=48&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g" srcset="http://2.gravatar.com/avatar/867ae2f7c8bed6471b285f02e2554e66?s=96&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g 2x" width="48"/>
       <cite>
        Matt Hobbs
       </cite>
       <small class="commentmetadata">
        <a href="#comment-670" title="">
         February 19th, 2009 at 3:59 pm
        </a>
       </small>
      </span>
      <div class="content">
       <p>
        Nice list, on the second point you can also use this
       </p>
       <div class="wp_syntax">
        <table>
         <tr>
          <td class="code">
           <pre class="javascript" style="font-family:monospace;">
            <span style="color: #000066; font-weight: bold;">
             if
            </span>
            <span style="color: #009900;">
             (
            </span>
            $
            <span style="color: #009900;">
             (
            </span>
            selector
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             length
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #009900;">
             {
            </span>
            
            <span style="color: #009900;">
             }
            </span>
           </pre>
          </td>
         </tr>
        </table>
       </div>
      </div>
     </li>
     <li id="comment-671">
      <span class="data">
       <img alt="" class="avatar avatar-48 photo" height="48" src="http://2.gravatar.com/avatar/22ca9f33299474000aa6b2559ffcb053?s=48&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g" srcset="http://2.gravatar.com/avatar/22ca9f33299474000aa6b2559ffcb053?s=96&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g 2x" width="48"/>
       <cite>
        <a class="url" href="http://haineault.com/" rel="external nofollow">
         h3
        </a>
       </cite>
       <small class="commentmetadata">
        <a href="#comment-671" title="">
         February 19th, 2009 at 4:50 pm
        </a>
       </small>
      </span>
      <div class="content">
       <p>
        Theres no need to instantiate created HTML chunks before inserting them;
       </p>
       <div class="wp_syntax">
        <table>
         <tr>
          <td class="code">
           <pre class="javascript" style="font-family:monospace;">
            <span style="color: #006600; font-style: italic;">
             // Instead of:
            </span>
            $
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             'body'
            </span>
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             append
            </span>
            <span style="color: #009900;">
             (
            </span>
            $
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             'Hello!'
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
            <span style="color: #006600; font-style: italic;">
             // Just do
            </span>
            $
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             'body'
            </span>
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             append
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             'Hello!'
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
            <span style="color: #006600; font-style: italic;">
             // In some simple cases you can also just revert the statement and achieve the same
            </span>
            $
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             'Hello!'
            </span>
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             appendTo
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             'body'
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
           </pre>
          </td>
         </tr>
        </table>
       </div>
       <p>
        You can specify the scope of a selector:
       </p>
       <div class="wp_syntax">
        <table>
         <tr>
          <td class="code">
           <pre class="javascript" style="font-family:monospace;">
            news
            <span style="color: #339933;">
             =
            </span>
            $
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             '.blog'
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
            $
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             'a'
            </span>
            <span style="color: #339933;">
             ,
            </span>
            news
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             click
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #006600; font-style: italic;">
             /* ... */
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
           </pre>
          </td>
         </tr>
        </table>
       </div>
       <p>
        Is is often useful:
       </p>
       <div class="wp_syntax">
        <table>
         <tr>
          <td class="code">
           <pre class="javascript" style="font-family:monospace;">
            <span style="color: #000066; font-weight: bold;">
             if
            </span>
            <span style="color: #009900;">
             (
            </span>
            $
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             '.warning'
            </span>
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             is
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             ':visible'
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #009900;">
             {
            </span>
            $
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             '.warning'
            </span>
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             hide
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
            <span style="color: #009900;">
             }
            </span>
           </pre>
          </td>
         </tr>
        </table>
       </div>
       <p>
        But theres always a way to be more efficient and lazy:
       </p>
       <div class="wp_syntax">
        <table>
         <tr>
          <td class="code">
           <pre class="javascript" style="font-family:monospace;">
            $
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             '.warning:visible'
            </span>
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             hide
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
           </pre>
          </td>
         </tr>
        </table>
       </div>
       <p>
        Make your jQuery plugin bulletproof by encapsulating it;
       </p>
       <div class="wp_syntax">
        <table>
         <tr>
          <td class="code">
           <pre class="javascript" style="font-family:monospace;">
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #000066; font-weight: bold;">
             function
            </span>
            <span style="color: #009900;">
             (
            </span>
            $
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #009900;">
             {
            </span>
            $
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             'body'
            </span>
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             append
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             'Hello !'
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
            <span style="color: #009900;">
             }
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #009900;">
             (
            </span>
            jQuery
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
           </pre>
          </td>
         </tr>
        </table>
       </div>
       <p>
        That way you are sure that $ always refers to a jQuery instance, even if you mix in more libraries (like Prototype).
       </p>
       <p>
        Thats all I could think of right now..
       </p>
      </div>
     </li>
     <li id="comment-672">
      <span class="data">
       <img alt="" class="avatar avatar-48 photo" height="48" src="http://0.gravatar.com/avatar/f3018d14b9c3d18e7c10ce34215b0f6c?s=48&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g" srcset="http://0.gravatar.com/avatar/f3018d14b9c3d18e7c10ce34215b0f6c?s=96&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g 2x" width="48"/>
       <cite>
        <a class="url" href="http://blog.pengworks.com/" rel="external nofollow">
         Dan G. Switzer, II
        </a>
       </cite>
       <small class="commentmetadata">
        <a href="#comment-672" title="">
         February 19th, 2009 at 4:50 pm
        </a>
       </small>
      </span>
      <div class="content">
       <p>
        You might want to add a return this to the jQuery.fn.doSomething function (just to show proper chaining.)
       </p>
       <p>
        Very good list though.
       </p>
      </div>
     </li>
     <li id="comment-673">
      <span class="data">
       <img alt="" class="avatar avatar-48 photo" height="48" src="http://1.gravatar.com/avatar/4318221d8a09d34b4e30e028d0812b5a?s=48&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g" srcset="http://1.gravatar.com/avatar/4318221d8a09d34b4e30e028d0812b5a?s=96&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g 2x" width="48"/>
       <cite>
        <a class="url" href="http://www.goffgrafix.com" rel="external nofollow">
         Heather Goff
        </a>
       </cite>
       <small class="commentmetadata">
        <a href="#comment-673" title="">
         February 19th, 2009 at 5:14 pm
        </a>
       </small>
      </span>
      <div class="content">
       <p>
        Thank you for the great tips! Appreciate it.
       </p>
      </div>
     </li>
     <li id="comment-674">
      <span class="data">
       <img alt="" class="avatar avatar-48 photo" height="48" src="http://1.gravatar.com/avatar/19b0d6b5077dc52954ca9675394dc815?s=48&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g" srcset="http://1.gravatar.com/avatar/19b0d6b5077dc52954ca9675394dc815?s=96&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g 2x" width="48"/>
       <cite>
        <a class="url" href="http://blog.klaus.pro.br/" rel="external nofollow">
         Klaus Paiva
        </a>
       </cite>
       <small class="commentmetadata">
        <a href="#comment-674" title="">
         February 19th, 2009 at 5:23 pm
        </a>
       </small>
      </span>
      <div class="content">
       <p>
        Great tips. Thanks!
       </p>
      </div>
     </li>
     <li id="comment-675">
      <span class="data">
       <img alt="" class="avatar avatar-48 photo" height="48" src="http://0.gravatar.com/avatar/c68e8a655d3835793d1d3be770cb4c85?s=48&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g" srcset="http://0.gravatar.com/avatar/c68e8a655d3835793d1d3be770cb4c85?s=96&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g 2x" width="48"/>
       <cite>
        <a class="url" href="http://www.uvlist.net" rel="external nofollow">
         Andrea
        </a>
       </cite>
       <small class="commentmetadata">
        <a href="#comment-675" title="">
         February 19th, 2009 at 5:26 pm
        </a>
       </small>
      </span>
      <div class="content">
       <p>
        Great post, I discovered a great blog too.
        <img alt=":-)" class="wp-smiley" src="http://james.padolsey.com/wp-includes/images/smilies/simple-smile.png" style="height: 1em; max-height: 1em;"/>
       </p>
      </div>
     </li>
     <li id="comment-676">
      <span class="data">
       <img alt="" class="avatar avatar-48 photo" height="48" src="http://2.gravatar.com/avatar/e381f713e019abe8d5fed200ce10dd17?s=48&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g" srcset="http://2.gravatar.com/avatar/e381f713e019abe8d5fed200ce10dd17?s=96&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g 2x" width="48"/>
       <cite>
        <a class="url" href="http://rpcreativedesign.com" rel="external nofollow">
         Ryan Person
        </a>
       </cite>
       <small class="commentmetadata">
        <a href="#comment-676" title="">
         February 19th, 2009 at 5:29 pm
        </a>
       </small>
      </span>
      <div class="content">
       <p>
        Great tips, bookmarked!
       </p>
      </div>
     </li>
     <li id="comment-677">
      <span class="data">
       <img alt="" class="avatar avatar-48 photo" height="48" src="http://0.gravatar.com/avatar/0c53d2438314504a3b6f7e943536dcfd?s=48&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g" srcset="http://0.gravatar.com/avatar/0c53d2438314504a3b6f7e943536dcfd?s=96&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g 2x" width="48"/>
       <cite>
        <a class="url" href="http://jonerickson.me/" rel="external nofollow">
         Jon Erickson
        </a>
       </cite>
       <small class="commentmetadata">
        <a href="#comment-677" title="">
         February 19th, 2009 at 6:12 pm
        </a>
       </small>
      </span>
      <div class="content">
       <p>
        Great tips!
       </p>
       <p>
        One that has gotten me before is the event queuing. If you want to ensure that events occur one after the other use the callbacks.
       </p>
       <div class="wp_syntax">
        <table>
         <tr>
          <td class="code">
           <pre class="javascript" style="font-family:monospace;">
            <span style="color: #006600; font-style: italic;">
             // No effect because the effects are fired asynchronously
            </span>
            $
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             '#mydiv'
            </span>
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             slideDown
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             'slow'
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
            $
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             '#mydiv'
            </span>
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             slideUp
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             'slow'
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
            <span style="color: #006600; font-style: italic;">
             // Ensures that slide up occurs after slide down finishes using the callback
            </span>
            $
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             '#mydiv'
            </span>
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             slideDown
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             'slow'
            </span>
            <span style="color: #339933;">
             ,
            </span>
            <span style="color: #000066; font-weight: bold;">
             function
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #009900;">
             {
            </span>
            $
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             '#mydiv'
            </span>
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             slideUp
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             'slow'
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
            <span style="color: #009900;">
             }
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
           </pre>
          </td>
         </tr>
        </table>
       </div>
      </div>
     </li>
     <li id="comment-678">
      <span class="data">
       <img alt="" class="avatar avatar-48 photo" height="48" src="http://1.gravatar.com/avatar/4de540543ae7f2f3bf783949840455a0?s=48&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g" srcset="http://1.gravatar.com/avatar/4de540543ae7f2f3bf783949840455a0?s=96&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g 2x" width="48"/>
       <cite>
        <a class="url" href="http://www.pushingbuttons.net" rel="external nofollow">
         Timothy
        </a>
       </cite>
       <small class="commentmetadata">
        <a href="#comment-678" title="">
         February 19th, 2009 at 6:15 pm
        </a>
       </small>
      </span>
      <div class="content">
       <p>
        Just an FYI, most of this, if not all, can be done in MooTools.
       </p>
      </div>
     </li>
     <li id="comment-679">
      <span class="data">
       <img alt="" class="avatar avatar-48 photo" height="48" src="http://0.gravatar.com/avatar/0c53d2438314504a3b6f7e943536dcfd?s=48&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g" srcset="http://0.gravatar.com/avatar/0c53d2438314504a3b6f7e943536dcfd?s=96&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g 2x" width="48"/>
       <cite>
        <a class="url" href="http://jonerickson.me/" rel="external nofollow">
         Jon Erickson
        </a>
       </cite>
       <small class="commentmetadata">
        <a href="#comment-679" title="">
         February 19th, 2009 at 6:18 pm
        </a>
       </small>
      </span>
      <div class="content">
       <p>
        This is a better example, because I just tested it. Small difference that occurs but knowing this will help you out in managing your desired effects.
       </p>
       <div class="wp_syntax">
        <table>
         <tr>
          <td class="code">
           <pre class="javascript" style="font-family:monospace;">
            <span style="color: #006600; font-style: italic;">
             // Background changes to blue WHILE the slideDown is occuring.
            </span>
            $
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             '#mydiv'
            </span>
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             slideDown
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             'slow'
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
            $
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             '#mydiv'
            </span>
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             css
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             'background-color'
            </span>
            <span style="color: #339933;">
             ,
            </span>
            <span style="color: #3366CC;">
             'Blue'
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
            <span style="color: #006600; font-style: italic;">
             // Background changes to blue AFTER the slideDown is finished.
            </span>
            $
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             '#mydiv'
            </span>
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             slideDown
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             'slow'
            </span>
            <span style="color: #339933;">
             ,
            </span>
            <span style="color: #000066; font-weight: bold;">
             function
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #009900;">
             {
            </span>
            $
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             '#mydiv'
            </span>
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             css
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             'background-color'
            </span>
            <span style="color: #339933;">
             ,
            </span>
            <span style="color: #3366CC;">
             'Blue'
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
            <span style="color: #009900;">
             }
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
           </pre>
          </td>
         </tr>
        </table>
       </div>
      </div>
     </li>
     <li id="comment-680">
      <span class="data">
       <img alt="" class="avatar avatar-48 photo" height="48" src="http://1.gravatar.com/avatar/1ac77c425a92075ce920d6800a3255be?s=48&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g" srcset="http://1.gravatar.com/avatar/1ac77c425a92075ce920d6800a3255be?s=96&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g 2x" width="48"/>
       <cite>
        <a class="url" href="http://www.152.org" rel="external nofollow">
         ernest leitch
        </a>
       </cite>
       <small class="commentmetadata">
        <a href="#comment-680" title="">
         February 19th, 2009 at 7:10 pm
        </a>
       </small>
      </span>
      <div class="content">
       <p>
        Some of your tips conflict with other things Ive read about jQuery.
        <br/>
        <a href="http://jquery-howto.blogspot.com/2009/02/5-easy-tips-on-how-to-improve-code.html" rel="nofollow">
         http://jquery-howto.blogspot.com/2009/02/5-easy-tips-on-how-to-improve-code.html
        </a>
       </p>
       <p>
        They said using .each on large datasets is slower than a for loop. What has your experience been with it?
       </p>
      </div>
     </li>
     <li class="author" id="comment-681">
      <span class="data">
       <img alt="" class="avatar avatar-48 photo" height="48" src="http://2.gravatar.com/avatar/e4dc1c48bd0a50e596078ad9bea72171?s=48&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g" srcset="http://2.gravatar.com/avatar/e4dc1c48bd0a50e596078ad9bea72171?s=96&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g 2x" width="48"/>
       <cite>
        James
       </cite>
       <small class="commentmetadata">
        <a href="#comment-681" title="">
         February 19th, 2009 at 7:49 pm
        </a>
       </small>
      </span>
      <div class="content">
       <p>
        Thanks for all the comments. Also, thank you to those who posted some jQuery tips!
        <img alt=":)" class="wp-smiley" src="http://james.padolsey.com/wp-includes/images/smilies/simple-smile.png" style="height: 1em; max-height: 1em;"/>
       </p>
       <p>
        @
        <a href="#comment-5779" rel="nofollow">
         <strong>
          Nicolas Hoizey
         </strong>
        </a>
        , sorry about that, Ive removed that feature for now
       </p>
       <p>
        @
        <a href="#comment-5791" rel="nofollow">
         <strong>
          Dan G. Switzer, II
         </strong>
        </a>
        , good idea, Ill add it now!
       </p>
       <p>
        @
        <a href="#comment-5790" rel="nofollow">
         <strong>
          h3
         </strong>
        </a>
        , great tips!
       </p>
       <p>
        @
        <a href="#comment-5805" rel="nofollow">
         <strong>
          Timothy
         </strong>
        </a>
        , I dont think anyone is denying that. Afterall its all JavaScript so whatever can be done with one framework can definitely be done with any other.
       </p>
       <p>
        @
        <a href="#comment-5806" rel="nofollow">
         <strong>
          Jon Erickson
         </strong>
        </a>
        , Good advice Although it can get a little bloated, nested callback within nested callback etc.
       </p>
       <p>
        @
        <a href="#comment-5809" rel="nofollow">
         <strong>
          ernest leitch
         </strong>
        </a>
        , jQuery is simply an abstraction and so will, by definition, be slower and probably less efficient than pure JavaScript. Using a while/for loop (assuming proper construction) will almost always be faster than any librarys stock iterator. On very large data-sets it would make more sense to iterate without the aid of a library. But then if performance is your prime concern using a library for anything probably isnt a good idea.
       </p>
      </div>
     </li>
     <li id="comment-682">
      <span class="data">
       <img alt="" class="avatar avatar-48 photo" height="48" src="http://1.gravatar.com/avatar/4de0527ca4ce50f3f9b5c0b5be56c314?s=48&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g" srcset="http://1.gravatar.com/avatar/4de0527ca4ce50f3f9b5c0b5be56c314?s=96&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g 2x" width="48"/>
       <cite>
        <a class="url" href="http://www.kelvinluck.com/" rel="external nofollow">
         Kelvin Luck
        </a>
       </cite>
       <small class="commentmetadata">
        <a href="#comment-682" title="">
         February 19th, 2009 at 10:44 pm
        </a>
       </small>
      </span>
      <div class="content">
       <p>
        Some great tips
        <img alt=":)" class="wp-smiley" src="http://james.padolsey.com/wp-includes/images/smilies/simple-smile.png" style="height: 1em; max-height: 1em;"/>
       </p>
       <p>
        For the index one, Id prefer to do it like:
       </p>
       <div class="wp_syntax">
        <table>
         <tr>
          <td class="code">
           <pre class="javascript" style="font-family:monospace;">
            $
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             'table tr'
            </span>
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             each
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #000066; font-weight: bold;">
             function
            </span>
            <span style="color: #009900;">
             (
            </span>
            i
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #009900;">
             {
            </span>
            $
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #000066; font-weight: bold;">
             this
            </span>
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             bind
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             'click'
            </span>
            <span style="color: #339933;">
             ,
            </span>
            i
            <span style="color: #339933;">
             ,
            </span>
            <span style="color: #000066; font-weight: bold;">
             function
            </span>
            <span style="color: #009900;">
             (
            </span>
            event
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #009900;">
             {
            </span>
            <span style="color: #006600; font-style: italic;">
             // event.data is the index
            </span>
            <span style="color: #009900;">
             }
            </span>
            <span style="color: #009900;">
             }
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
           </pre>
          </td>
         </tr>
        </table>
       </div>
       <p>
        It looks a little longer but I think its computationally cheaper
       </p>
      </div>
     </li>
     <li id="comment-683">
      <span class="data">
       <img alt="" class="avatar avatar-48 photo" height="48" src="http://2.gravatar.com/avatar/2d6a80b3fddfc09095d8933c86a0d2e5?s=48&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g" srcset="http://2.gravatar.com/avatar/2d6a80b3fddfc09095d8933c86a0d2e5?s=96&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g 2x" width="48"/>
       <cite>
        <a class="url" href="http://programmingdrunk.com" rel="external nofollow">
         mk
        </a>
       </cite>
       <small class="commentmetadata">
        <a href="#comment-683" title="">
         February 19th, 2009 at 11:06 pm
        </a>
       </small>
      </span>
      <div class="content">
       <p>
        You are not entirely correct about the JSONP tip. The requested domain must support JSONP. if it does not support it, you are out of luck, because the data you get back will not be wrapped in a function call, and you will get an error.
       </p>
       <p>
        i recently struggled with just this. I ended up having to make a jsonp proxy in perl:
        <br/>
        <a href="http://notetodogself.blogspot.com/2009/02/using-jquery-with-nyt-json-api.html" rel="nofollow">
         Using jQuery with NYT json API
        </a>
       </p>
      </div>
     </li>
     <li id="comment-684">
      <span class="data">
       <img alt="" class="avatar avatar-48 photo" height="48" src="http://1.gravatar.com/avatar/1591ee5da3f4480605ace6fcc0b8d43f?s=48&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g" srcset="http://1.gravatar.com/avatar/1591ee5da3f4480605ace6fcc0b8d43f?s=96&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g 2x" width="48"/>
       <cite>
        <a class="url" href="http://www.jaanuskase.com/" rel="external nofollow">
         Jaanus
        </a>
       </cite>
       <small class="commentmetadata">
        <a href="#comment-684" title="">
         February 20th, 2009 at 12:11 am
        </a>
       </small>
      </span>
      <div class="content">
       <p>
        Your second tip
       </p>
       <blockquote>
        <p>
         You can test if a jQuery collection contains any elements by trying to access the first element, e.g. if($(selector)[0]){}.
        </p>
       </blockquote>
       <p>
        is not so great, because if there are no elements, this tries to access an invalid element, and may fire an error. You might test if the array object has the particular key, but like Matt Hobbs said, its easier and more purist to use the .length property.
       </p>
       <div class="wp_syntax">
        <table>
         <tr>
          <td class="code">
           <pre class="javascript" style="font-family:monospace;">
            <span style="color: #000066; font-weight: bold;">
             if
            </span>
            <span style="color: #009900;">
             (
            </span>
            $
            <span style="color: #009900;">
             (
            </span>
            selector
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             length
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #009900;">
             {
            </span>
            ...
            <span style="color: #009900;">
             }
            </span>
           </pre>
          </td>
         </tr>
        </table>
       </div>
      </div>
     </li>
     <li id="comment-685">
      <span class="data">
       <img alt="" class="avatar avatar-48 photo" height="48" src="http://2.gravatar.com/avatar/bc5a05e7a6824f0b9aa95d9b7a0b8beb?s=48&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g" srcset="http://2.gravatar.com/avatar/bc5a05e7a6824f0b9aa95d9b7a0b8beb?s=96&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g 2x" width="48"/>
       <cite>
        <a class="url" href="http://jquery.malsup.com" rel="external nofollow">
         malsup
        </a>
       </cite>
       <small class="commentmetadata">
        <a href="#comment-685" title="">
         February 20th, 2009 at 12:53 am
        </a>
       </small>
      </span>
      <div class="content">
       <p>
        Good stuff, James!
       </p>
      </div>
     </li>
     <li class="author" id="comment-686">
      <span class="data">
       <img alt="" class="avatar avatar-48 photo" height="48" src="http://2.gravatar.com/avatar/e4dc1c48bd0a50e596078ad9bea72171?s=48&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g" srcset="http://2.gravatar.com/avatar/e4dc1c48bd0a50e596078ad9bea72171?s=96&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g 2x" width="48"/>
       <cite>
        James
       </cite>
       <small class="commentmetadata">
        <a href="#comment-686" title="">
         February 20th, 2009 at 1:02 am
        </a>
       </small>
      </span>
      <div class="content">
       <p>
        @
        <a href="#comment-5834" rel="nofollow">
         <strong>
          Kelvin Luck
         </strong>
        </a>
        , Ah, very clever! I never really tried out that
        <code>
         event.data
        </code>
        thing. Thanks.
       </p>
       <p>
        @
        <a href="#comment-5836" rel="nofollow">
         <strong>
          mk
         </strong>
        </a>
        , Sorry, Ill adjust it so it states there needs to be a JSON
        <strong>
         P
        </strong>
        API (with callback).
       </p>
       <p>
        @
        <a href="#comment-5845" rel="nofollow">
         <strong>
          Jaanus
         </strong>
        </a>
        , My solution will never fire an error. Trying to access [0] is the same as trying to access any property  if it exists it will return the property and if it doesnt it will return
        <code>
         undefined
        </code>
        which evaluates to
        <code>
         false
        </code>
        . Not sure what you mean by more purist  either way is absolutely fine.
       </p>
       <p>
        @
        <a href="#comment-5847" rel="nofollow">
         <strong>
          malsup
         </strong>
        </a>
        , Thanks!
       </p>
      </div>
     </li>
     <li id="comment-687">
      <span class="data">
       <img alt="" class="avatar avatar-48 photo" height="48" src="http://2.gravatar.com/avatar/5dcdf28d944831f2fb87d48b81500c66?s=48&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g" srcset="http://2.gravatar.com/avatar/5dcdf28d944831f2fb87d48b81500c66?s=96&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g 2x" width="48"/>
       <cite>
        aaa
       </cite>
       <small class="commentmetadata">
        <a href="#comment-687" title="">
         February 20th, 2009 at 6:29 am
        </a>
       </small>
      </span>
      <div class="content">
       <p>
        jquery is so badass
       </p>
      </div>
     </li>
     <li id="comment-688">
      <span class="data">
       <img alt="" class="avatar avatar-48 photo" height="48" src="http://2.gravatar.com/avatar/ea332df71e20fd65f2ad4630e46dfa97?s=48&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g" srcset="http://2.gravatar.com/avatar/ea332df71e20fd65f2ad4630e46dfa97?s=96&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g 2x" width="48"/>
       <cite>
        redsquare
       </cite>
       <small class="commentmetadata">
        <a href="#comment-688" title="">
         February 20th, 2009 at 10:38 am
        </a>
       </small>
      </span>
      <div class="content">
       <p>
        The index method is cumbersome, I prefer
       </p>
       <div class="wp_syntax">
        <table>
         <tr>
          <td class="code">
           <pre class="javascript" style="font-family:monospace;">
            $
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             '#someLi'
            </span>
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             prevAll
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             length
            </span>
           </pre>
          </td>
         </tr>
        </table>
       </div>
      </div>
     </li>
     <li id="comment-689">
      <span class="data">
       <img alt="" class="avatar avatar-48 photo" height="48" src="http://0.gravatar.com/avatar/02a2f301a22940878fa4ce4be4273c4c?s=48&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g" srcset="http://0.gravatar.com/avatar/02a2f301a22940878fa4ce4be4273c4c?s=96&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g 2x" width="48"/>
       <cite>
        <a class="url" href="http://www.fgkpsoft.com.ar" rel="external nofollow">
         Diego
        </a>
       </cite>
       <small class="commentmetadata">
        <a href="#comment-689" title="">
         February 20th, 2009 at 1:18 pm
        </a>
       </small>
      </span>
      <div class="content">
       <p>
        Nice post
       </p>
      </div>
     </li>
     <li id="comment-690">
      <span class="data">
       <img alt="" class="avatar avatar-48 photo" height="48" src="http://2.gravatar.com/avatar/5573d830c3500a04b9e85a94674a28d2?s=48&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g" srcset="http://2.gravatar.com/avatar/5573d830c3500a04b9e85a94674a28d2?s=96&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g 2x" width="48"/>
       <cite>
        Neil
       </cite>
       <small class="commentmetadata">
        <a href="#comment-690" title="">
         February 20th, 2009 at 9:05 pm
        </a>
       </small>
      </span>
      <div class="content">
       <p>
        @Jaanus, My solution will never fire an error. Trying to access [0] is the same as trying to access any property  if it exists it will return the property and if it doesnt it will return undefined which evaluates to false. Not sure what you mean by more purist  either way is absolutely fine.
       </p>
       <p>
        I agree with the [0] statement.  I wont fire and error unless you try to access properties on it.
        <br/>
        Another way is to use the .size() method.
        <br/>
        Either way, the example will most likely lead to consumers of this post doing a double selection:
       </p>
       <div class="wp_syntax">
        <table>
         <tr>
          <td class="code">
           <pre class="javascript" style="font-family:monospace;">
            <span style="color: #000066; font-weight: bold;">
             if
            </span>
            <span style="color: #009900;">
             (
            </span>
            $
            <span style="color: #009900;">
             (
            </span>
            selector
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #009900;">
             [
            </span>
            <span style="color: #CC0000;">
             0
            </span>
            <span style="color: #009900;">
             ]
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #009900;">
             {
            </span>
            $
            <span style="color: #009900;">
             (
            </span>
            selector
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             hide
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #009900;">
             }
            </span>
           </pre>
          </td>
         </tr>
        </table>
       </div>
       <p>
        Make sure you create a pointer variable:
       </p>
       <div class="wp_syntax">
        <table>
         <tr>
          <td class="code">
           <pre class="javascript" style="font-family:monospace;">
            $els
            <span style="color: #339933;">
             =
            </span>
            $
            <span style="color: #009900;">
             (
            </span>
            selector
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
            <span style="color: #000066; font-weight: bold;">
             if
            </span>
            <span style="color: #009900;">
             (
            </span>
            $els
            <span style="color: #009900;">
             [
            </span>
            <span style="color: #CC0000;">
             0
            </span>
            <span style="color: #009900;">
             ]
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #009900;">
             {
            </span>
            $els.
            <span style="color: #660066;">
             hide
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #009900;">
             }
            </span>
           </pre>
          </td>
         </tr>
        </table>
       </div>
      </div>
     </li>
     <li id="comment-691">
      <span class="data">
       <img alt="" class="avatar avatar-48 photo" height="48" src="http://2.gravatar.com/avatar/23e145d2d05a142f43dd891bec53c215?s=48&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g" srcset="http://2.gravatar.com/avatar/23e145d2d05a142f43dd891bec53c215?s=96&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g 2x" width="48"/>
       <cite>
        dChavez
       </cite>
       <small class="commentmetadata">
        <a href="#comment-691" title="">
         February 21st, 2009 at 4:59 pm
        </a>
       </small>
      </span>
      <div class="content">
       <p>
        Some great exaples of jquery,:D thanks a lot james
       </p>
      </div>
     </li>
     <li id="comment-692">
      <span class="data">
       <img alt="" class="avatar avatar-48 photo" height="48" src="http://0.gravatar.com/avatar/cbc8e7e4cb1d20727a90d1351b5d5d01?s=48&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g" srcset="http://0.gravatar.com/avatar/cbc8e7e4cb1d20727a90d1351b5d5d01?s=96&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g 2x" width="48"/>
       <cite>
        Jeffrey Jose
       </cite>
       <small class="commentmetadata">
        <a href="#comment-692" title="">
         February 21st, 2009 at 10:38 pm
        </a>
       </small>
      </span>
      <div class="content">
       <p>
        Another nice tutorial from James. Really appreciate the amount of thought and work behind this. really shows. Extremely useful.
       </p>
       <p>
        Keep hem coming and Congrats !
       </p>
      </div>
     </li>
     <li id="comment-693">
      <span class="data">
       <img alt="" class="avatar avatar-48 photo" height="48" src="http://0.gravatar.com/avatar/9c5bb2670cdb0bcf05cddcae033029f1?s=48&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g" srcset="http://0.gravatar.com/avatar/9c5bb2670cdb0bcf05cddcae033029f1?s=96&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g 2x" width="48"/>
       <cite>
        <a class="url" href="http://www.bleulemon.com" rel="external nofollow">
         Renzo
        </a>
       </cite>
       <small class="commentmetadata">
        <a href="#comment-693" title="">
         March 11th, 2009 at 4:24 am
        </a>
       </small>
      </span>
      <div class="content">
       <p>
        JQuery is way ahead of prototype and mootools. JavaScript can be really tricky, and I find this article really helpful.
       </p>
      </div>
     </li>
     <li id="comment-694">
      <span class="data">
       <img alt="" class="avatar avatar-48 photo" height="48" src="http://0.gravatar.com/avatar/9005b531138a6839fc232c8a70da3aa5?s=48&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g" srcset="http://0.gravatar.com/avatar/9005b531138a6839fc232c8a70da3aa5?s=96&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g 2x" width="48"/>
       <cite>
        <a class="url" href="http:/www.ferdychristant.com" rel="external nofollow">
         Ferdy
        </a>
       </cite>
       <small class="commentmetadata">
        <a href="#comment-694" title="">
         March 11th, 2009 at 7:24 pm
        </a>
       </small>
      </span>
      <div class="content">
       <p>
        Great post, thank you for the effort.
       </p>
       <p>
        One minor remark: you say the the event object is normalized across all browsers. This is true, but I do like to point out that the event triggers are not normalized. For example, listening to keypresses works differently in different browsers, the same goes for the submit event, which is different in Opera.
       </p>
      </div>
     </li>
     <li id="comment-695">
      <span class="data">
       <img alt="" class="avatar avatar-48 photo" height="48" src="http://2.gravatar.com/avatar/25baa2e0f526eff1e32dbde64b468944?s=48&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g" srcset="http://2.gravatar.com/avatar/25baa2e0f526eff1e32dbde64b468944?s=96&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g 2x" width="48"/>
       <cite>
        <a class="url" href="http://www.cancelbubble.com" rel="external nofollow">
         cancel bubble
        </a>
       </cite>
       <small class="commentmetadata">
        <a href="#comment-695" title="">
         March 25th, 2009 at 10:00 pm
        </a>
       </small>
      </span>
      <div class="content">
       <p>
        jQuerys Event object has keyCode for keyup/keydown events and which for keypress and mouse events (which button was pressed).  I think which is reliable cross browser, it gives you the character code of keypress events.
       </p>
      </div>
     </li>
     <li id="comment-696">
      <span class="data">
       <img alt="" class="avatar avatar-48 photo" height="48" src="http://0.gravatar.com/avatar/6d4a1321d5df506713744badf5e55441?s=48&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g" srcset="http://0.gravatar.com/avatar/6d4a1321d5df506713744badf5e55441?s=96&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g 2x" width="48"/>
       <cite>
        olivvv
       </cite>
       <small class="commentmetadata">
        <a href="#comment-696" title="">
         April 12th, 2009 at 10:12 pm
        </a>
       </small>
      </span>
      <div class="content">
       <p>
        nice stuff.
       </p>
       <p>
        I think there is a little type here, the second i should be replaced by a j
       </p>
       <div class="wp_syntax">
        <table>
         <tr>
          <td class="code">
           <pre class="javascript" style="font-family:monospace;">
            <span style="color: #006600; font-style: italic;">
             // List bound events:
            </span>
            console.
            <span style="color: #660066;">
             dir
            </span>
            <span style="color: #009900;">
             (
            </span>
            jQuery
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             '#elem'
            </span>
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             data
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             'events'
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
            <span style="color: #006600; font-style: italic;">
             // Log ALL handlers for ALL events:
            </span>
            jQuery.
            <span style="color: #660066;">
             each
            </span>
            <span style="color: #009900;">
             (
            </span>
            $
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             '#elem'
            </span>
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             data
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             'events'
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ,
            </span>
            <span style="color: #000066; font-weight: bold;">
             function
            </span>
            <span style="color: #009900;">
             (
            </span>
            i
            <span style="color: #339933;">
             ,
            </span>
            event
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #009900;">
             {
            </span>
            jQuery.
            <span style="color: #660066;">
             each
            </span>
            <span style="color: #009900;">
             (
            </span>
            event
            <span style="color: #339933;">
             ,
            </span>
            <span style="color: #000066; font-weight: bold;">
             function
            </span>
            <span style="color: #009900;">
             (
            </span>
            i
            <span style="color: #339933;">
             ,
            </span>
            handler
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #009900;">
             {
            </span>
            console.
            <span style="color: #660066;">
             log
            </span>
            <span style="color: #009900;">
             (
            </span>
            handler.
            <span style="color: #660066;">
             toString
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
            <span style="color: #009900;">
             }
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
            <span style="color: #009900;">
             }
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
            <span style="color: #006600; font-style: italic;">
             // You can see the actual functions which will occur
            </span>
            <span style="color: #006600; font-style: italic;">
             // on certain events; great for debugging!
            </span>
           </pre>
          </td>
         </tr>
        </table>
       </div>
      </div>
     </li>
     <li id="comment-697">
      <span class="data">
       <img alt="" class="avatar avatar-48 photo" height="48" src="http://1.gravatar.com/avatar/7c478d7c4f4c2c9c657624b8197882ab?s=48&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g" srcset="http://1.gravatar.com/avatar/7c478d7c4f4c2c9c657624b8197882ab?s=96&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g 2x" width="48"/>
       <cite>
        <a class="url" href="http://www.theramblingdev.com" rel="external nofollow">
         Mark Hoffman
        </a>
       </cite>
       <small class="commentmetadata">
        <a href="#comment-697" title="">
         May 2nd, 2009 at 7:18 pm
        </a>
       </small>
      </span>
      <div class="content">
       <p>
        Great post! Found the answers to several JQuery questions that I had. Thanks for taking the time to post this!
       </p>
      </div>
     </li>
     <li id="comment-698">
      <span class="data">
       <img alt="" class="avatar avatar-48 photo" height="48" src="http://0.gravatar.com/avatar/ce8432a0f445db39bfd2c1baf08cb28d?s=48&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g" srcset="http://0.gravatar.com/avatar/ce8432a0f445db39bfd2c1baf08cb28d?s=96&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g 2x" width="48"/>
       <cite>
        Jibbidy
       </cite>
       <small class="commentmetadata">
        <a href="#comment-698" title="">
         May 5th, 2009 at 7:38 pm
        </a>
       </small>
      </span>
      <div class="content">
       <p>
        I was a little confused by the namespacing events example:
       </p>
       <div class="wp_syntax">
        <table>
         <tr>
          <td class="code">
           <pre class="javascript" style="font-family:monospace;">
            jQuery.
            <span style="color: #660066;">
             fn
            </span>
            .
            <span style="color: #660066;">
             myPlugin
            </span>
            <span style="color: #339933;">
             =
            </span>
            <span style="color: #000066; font-weight: bold;">
             function
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #009900;">
             {
            </span>
            <span style="color: #006600; font-style: italic;">
             // Clean up after yourself!
            </span>
            jQuery.
            <span style="color: #660066;">
             myPlugin
            </span>
            <span style="color: #339933;">
             =
            </span>
            <span style="color: #009900;">
             {
            </span>
            cleanUp
            <span style="color: #339933;">
             :
            </span>
            <span style="color: #000066; font-weight: bold;">
             function
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #009900;">
             {
            </span>
            <span style="color: #006600; font-style: italic;">
             // Remove all click handlers binded
            </span>
            <span style="color: #006600; font-style: italic;">
             // as a result of the plugin:
            </span>
            jQuery
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             '*'
            </span>
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             unbind
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             'click.myPlugin'
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
            <span style="color: #006600; font-style: italic;">
             // ALternatively, remove ALL events:
            </span>
            jQuery
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             '*'
            </span>
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             unbind
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             '.myPlugin'
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
            <span style="color: #009900;">
             }
            </span>
            <span style="color: #009900;">
             }
            </span>
            <span style="color: #339933;">
             ;
            </span>
            <span style="color: #000066; font-weight: bold;">
             return
            </span>
            <span style="color: #000066; font-weight: bold;">
             this
            </span>
            .
            <span style="color: #660066;">
             bind
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #3366CC;">
             'click.myPlugin'
            </span>
            <span style="color: #339933;">
             ,
            </span>
            <span style="color: #000066; font-weight: bold;">
             function
            </span>
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #009900;">
             {
            </span>
            <span style="color: #006600; font-style: italic;">
             // Do something...
            </span>
            <span style="color: #009900;">
             }
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
            <span style="color: #009900;">
             }
            </span>
            <span style="color: #339933;">
             ;
            </span>
            <span style="color: #006600; font-style: italic;">
             // Note, you can also namespace data:
            </span>
            <span style="color: #006600; font-style: italic;">
             // E.g. $(elem).data('whatever.myPlugin',value);
            </span>
           </pre>
          </td>
         </tr>
        </table>
       </div>
       <p>
        1. Why put the cleanUp function inside jQuery.myPlugin = {}, couldnt you just use var cleanUp = function() {} ?
       </p>
       <p>
        2. If you needed to declare some variables for you plugins state, where would you put them: in the jQuery.fn.myPlugin = function() {} block; or the jQuery.myPlugin = {} block?
       </p>
       <p>
        My apologies if these are stupid questions.
        <img alt=":)" class="wp-smiley" src="http://james.padolsey.com/wp-includes/images/smilies/simple-smile.png" style="height: 1em; max-height: 1em;"/>
       </p>
      </div>
     </li>
     <li id="comment-699">
      <span class="data">
       <img alt="" class="avatar avatar-48 photo" height="48" src="http://0.gravatar.com/avatar/61311ec91f4c149554a9b1f581f12e90?s=48&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g" srcset="http://0.gravatar.com/avatar/61311ec91f4c149554a9b1f581f12e90?s=96&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g 2x" width="48"/>
       <cite>
        <a class="url" href="http://rondelrosario.com/" rel="external nofollow">
         Ron
        </a>
       </cite>
       <small class="commentmetadata">
        <a href="#comment-699" title="">
         July 1st, 2009 at 3:27 am
        </a>
       </small>
      </span>
      <div class="content">
       <p>
        Great list! There was at least one I needed!  Thanks!
       </p>
      </div>
     </li>
     <li id="comment-700">
      <span class="data">
       <img alt="" class="avatar avatar-48 photo" height="48" src="http://0.gravatar.com/avatar/f2077dbed28ae040719cbe698800ec29?s=48&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g" srcset="http://0.gravatar.com/avatar/f2077dbed28ae040719cbe698800ec29?s=96&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g 2x" width="48"/>
       <cite>
        Mark Schultheiss
       </cite>
       <small class="commentmetadata">
        <a href="#comment-700" title="">
         October 30th, 2009 at 4:17 pm
        </a>
       </small>
      </span>
      <div class="content">
       <p>
        Lots of peeps do not actually realize jQuery(document).ready(); is really and EVENT HANDLER!  handle the .ready() event.
       </p>
       <p>
        Call a function on page load:
        <br/>
        function MyFunction()
        <br/>
        {
        <br/>
        // do lots of my stuff here
        <br/>
        }
        <br/>
        jQuery(document).ready(MyFunction());
       </p>
       <p>
        OR
        <br/>
        jQuery(document).ready(function(){// do little stuff here});
       </p>
      </div>
     </li>
     <li id="comment-701">
      <span class="data">
       <img alt="" class="avatar avatar-48 photo" height="48" src="http://1.gravatar.com/avatar/15167897dd3bfa2a42bfa0800ddb8816?s=48&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g" srcset="http://1.gravatar.com/avatar/15167897dd3bfa2a42bfa0800ddb8816?s=96&amp;d=http%3A%2F%2Fjames.padolsey.com%2Fwp-content%2Fthemes%2Fjames.padolsey%2Fimages%2Fdef_grav.png&amp;r=g 2x" width="48"/>
       <cite>
        <a class="url" href="http://www.zeroedandnoughted.com" rel="external nofollow">
         Antony Kennedy
        </a>
       </cite>
       <small class="commentmetadata">
        <a href="#comment-701" title="">
         November 19th, 2009 at 12:11 pm
        </a>
       </small>
      </span>
      <div class="content">
       <p>
        @Mark Schultheiss
       </p>
       <p>
        Yes, ready is an event handler (a great one, since it fires when the DOM is ready, rather than waiting for images to load).
       </p>
       <p>
        However, when using it, you want to pass a reference to the function, not execute the function itself.
       </p>
       <p>
        Rather than:
       </p>
       <div class="wp_syntax">
        <table>
         <tr>
          <td class="code">
           <pre class="javascript" style="font-family:monospace;">
            jQuery
            <span style="color: #009900;">
             (
            </span>
            document
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             ready
            </span>
            <span style="color: #009900;">
             (
            </span>
            MyFunction
            <span style="color: #009900;">
             (
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
           </pre>
          </td>
         </tr>
        </table>
       </div>
       <p>
        Do:
       </p>
       <div class="wp_syntax">
        <table>
         <tr>
          <td class="code">
           <pre class="javascript" style="font-family:monospace;">
            jQuery
            <span style="color: #009900;">
             (
            </span>
            document
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             ready
            </span>
            <span style="color: #009900;">
             (
            </span>
            MyFunction
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
           </pre>
          </td>
         </tr>
        </table>
       </div>
       <p>
        Also, one of the nicest things jQuery does, is if you pass it a function straight away, that is a shortcut to the document ready event.
       </p>
       <div class="wp_syntax">
        <table>
         <tr>
          <td class="code">
           <pre class="javascript" style="font-family:monospace;">
            jQuery
            <span style="color: #009900;">
             (
            </span>
            document
            <span style="color: #009900;">
             )
            </span>
            .
            <span style="color: #660066;">
             ready
            </span>
            <span style="color: #009900;">
             (
            </span>
            MyFunction
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
           </pre>
          </td>
         </tr>
        </table>
       </div>
       <p>
        Is exactly the same as:
       </p>
       <div class="wp_syntax">
        <table>
         <tr>
          <td class="code">
           <pre class="javascript" style="font-family:monospace;">
            jQuery
            <span style="color: #009900;">
             (
            </span>
            MyFunction
            <span style="color: #009900;">
             )
            </span>
            <span style="color: #339933;">
             ;
            </span>
           </pre>
          </td>
         </tr>
        </table>
       </div>
      </div>
     </li>
    </ol>
   </div>
  </div>
  <!--main-->
  <div id="footer">
   <p>
    <abbr title="Copyright 2008-2015">
     
    </abbr>
    James Padolsey
   </p>
   <br/>
   <p>
    <a href="/tutor">
     Tutoring
    </a>
    //
    <a href="/contact">
     Contact me
    </a>
    //
    <a href="/terms-conditions">
     Terms
    </a>
   </p>
  </div>
  <script src="http://james.padolsey.com/wp-content/themes/james.padolsey/m.js?201213">
  </script>
 </body>
</html>
<!-- Dynamic page generated in 0.210 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2015-07-14 05:30:33 -->
