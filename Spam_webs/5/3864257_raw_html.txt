<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html dir="ltr" lang="en-US" xmlns="http://www.w3.org/1999/xhtml">
 <head profile="http://gmpg.org/xfn/11">
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <title>
   a walking city   Blog Archive    QR Codes Made Easy In Android
  </title>
  <meta content="WordPress 3.1.2" name="generator"/>
  <!-- leave this for stats -->
  <link href="http://awalkingcity.com/blog/wp-content/themes/cognitivecombine-wm-white-minimalism-100/style.css" media="screen" rel="stylesheet" type="text/css"/>
  <link href="http://awalkingcity.com/blog/feed/" rel="alternate" title="a walking city RSS Feed" type="application/rss+xml"/>
  <link href="http://awalkingcity.com/blog/xmlrpc.php" rel="pingback"/>
  <style media="screen" type="text/css">
   #page { background: url("http://awalkingcity.com/blog/wp-content/themes/cognitivecombine-wm-white-minimalism-100/images/kubrickbgwide.jpg") repeat-y top; border: none; }
  </style>
  <link href="http://awalkingcity.com/blog/2008/08/25/qr-codes-made-easy-in-android/feed/" rel="alternate" title="a walking city  QR Codes Made Easy In Android Comments Feed" type="application/rss+xml"/>
  <link href="http://awalkingcity.com/blog/xmlrpc.php?rsd" rel="EditURI" title="RSD" type="application/rsd+xml"/>
  <link href="http://awalkingcity.com/blog/wp-includes/wlwmanifest.xml" rel="wlwmanifest" type="application/wlwmanifest+xml"/>
  <link href="http://awalkingcity.com/blog/" rel="index" title="a walking city"/>
  <link href="http://awalkingcity.com/blog/2008/03/05/android-extending-wikinotes/" rel="start" title="Android: Extending WikiNotes"/>
  <link href="http://awalkingcity.com/blog/2008/04/09/build-your-own-micro-location-sharing-service-with-googles-appengine-and-use-it-with-android/" rel="prev" title="Build Your Own Micro Location Sharing Service With Googles AppEngine and use it with android"/>
  <link href="http://awalkingcity.com/blog/2008/10/23/qr-codes-made-even-easier-with-android/" rel="next" title="Qr Codes Made Even Easier With Android"/>
  <meta content="WordPress 3.1.2" name="generator"/>
  <link href="http://awalkingcity.com/blog/2008/08/25/qr-codes-made-easy-in-android/" rel="canonical"/>
  <link href="http://awalkingcity.com/blog/?p=39" rel="shortlink"/>
  <link href="http://awalkingcity.com/blog/wp-content/plugins/syntaxhighlighter/files/SyntaxHighlighter.css" rel="stylesheet" type="text/css"/>
 </head>
 <body>
  <div id="wrap">
   <div id="wrap2round">
    <div id="wrap2">
     <div id="header">
      <div class="headera">
       <a href="http://awalkingcity.com/blog/">
        a walking city
       </a>
       <div class="description">
       </div>
      </div>
      <ul class="pagelinks">
       <li class="page_item page-item-2">
        <a href="http://awalkingcity.com/blog/about/" title="About">
         About
        </a>
       </li>
      </ul>
     </div>
     <div id="nav">
      <div class="inside">
       <form action="http://awalkingcity.com/blog/index.php" id="searchform" method="get">
        <p>
         ?
         <input name="s" size="15" type="text"/>
        </p>
       </form>
      </div>
     </div>
     <div id="entrywrap">
      <div id="entrybox">
       <div class="inside">
        <div class="navigation">
         <div class="alignleft">
          
          <a href="http://awalkingcity.com/blog/2008/04/09/build-your-own-micro-location-sharing-service-with-googles-appengine-and-use-it-with-android/" rel="prev">
           Build Your Own Micro Location Sharing Service With Googles AppEngine and use it with android
          </a>
         </div>
         <div class="alignright">
          <a href="http://awalkingcity.com/blog/2008/10/23/qr-codes-made-even-easier-with-android/" rel="next">
           Qr Codes Made Even Easier With Android
          </a>
          
         </div>
        </div>
        <div class="post" id="post-39">
         <div id="posttitle">
          <h2>
           <a href="http://awalkingcity.com/blog/2008/08/25/qr-codes-made-easy-in-android/" rel="bookmark" title="Permanent Link: QR Codes Made Easy In Android">
            QR Codes Made Easy In Android
           </a>
          </h2>
         </div>
         <div class="entry">
          <p>
           QR Codes are a great way to share information with mobile phones.  Originally used to track car parts, QR codes are now used to quickly and easily spread information to mobile users.  For example a company can put a QR code in a magazine that contains the URL to their website.  Instead of the user having to type in a long URL on their phone they can simply take a picture of the QR Code with their camera phone and have their decoding software open the link for them.  For more uses of QR Codes check out this
           <a href="http://mobile.kaywa.com/">
            blog
           </a>
           .
          </p>
          <p>
           I am going to go through a quick example of encoding and decoding QR codes in Android.
          </p>
          <p>
           <strong>
            Encoding
           </strong>
          </p>
          <p>
           There are a number of services and libraries available for encoding QR Codes.  The actual encoding process is a bit more involved than I would like to go through for this entry and we generally would not want to do the actual encoding on the client.  Instead we will harness the power of the cloud to do the heavy lifting for us.  In this case we will use the
           <a href="http://code.google.com/apis/chart/#qrcodes">
            Google Charts API
           </a>
           which just recently expanded to include QR codes.  The API allows for a number of options such as size, error correction type, encoding type, and margins (the general rule for QR Codes is to have a 4 column/row white border around the barcode so that the decoding software can get a better lock on it)
          </p>
          <p>
           The code below makes an http request to the Google Charts API with the URL encoded text we entered in the EditText view and populates our ImageView with the resulting image.
          </p>
          <pre class="java" name="code">
           encodeButton.setOnClickListener(new OnClickListener(){

public void onClick(View arg0) {
    img.setImageBitmap(QR.this.encodeString(edit.getText().toString()));
}

});

private Bitmap encodeString(String input) {
     URL aURL;
     try {
      aURL = new URL("http://chart.apis.google.com/chart?chs=300x300&amp;cht=qr&amp;choe=UTF- 8chl="+URLEncoder.encode(input, "UTF-8"));
      URLConnection conn = aURL.openConnection();
      conn.connect();
      InputStream is = conn.getInputStream();
      BufferedInputStream bis = new BufferedInputStream(is);
      Bitmap bm = BitmapFactory.decodeStream(bis);
      bis.close();
      is.close();
      return bm;
      } catch (MalformedURLException e) {
       e.printStackTrace();
      } catch (IOException e) {
       e.printStackTrace();
      }
     return null;
}
          </pre>
          <p>
          </p>
          <center>
           <a href="http://awalkingcity.com/blog/wp-content/uploads/2008/08/qrfest.png">
            <img alt="" class="aligncenter size-medium wp-image-40" height="480" src="http://awalkingcity.com/blog/wp-content/uploads/2008/08/qrfest.png" title="qrfest" width="320"/>
           </a>
          </center>
          <p>
           <strong>
            Decoding
           </strong>
          </p>
          <p>
           The
           <a href="http://code.google.com/p/zxing/">
            ZXing
           </a>
           library is an open source Java library for decoding numerous 1D and 2D barcodes.  We will be using the core library but there is also an Android specific application that provides hooks into the camera.  Since the emulator does not support capturing images just yet we will settle for using the image we just encoded.  We will need one class specific to the Android ZXing library, RGBMonochromeBitmapSource which lets us convert Android bitmaps to the format that ZXing uses.
          </p>
          <p>
           The code below takes the bitmap image from the ImageView and pushes it through the decoder populating a TextView.
          </p>
          <pre class="java" name="code">
           decodeButton.setOnClickListener(new OnClickListener(){

public void onClick(View arg0) {

     try {
      tv.setText(((QR.this.decode(img.getDrawingCache()))));
     } catch (ReaderException e) {
      e.printStackTrace();
     }
}
});

private String decode(Bitmap bm) throws ReaderException {
     QRCodeReader reader = new QRCodeReader();
     Result r = reader.decode( new RGBMonochromeBitmapSource(bm));
     return r.getText();
}
          </pre>
          <p>
           We can use our friend Linkify to automatically make any text of the correct format (http://, mailto:, and even map locations) into a link that launches the appropriate application.
          </p>
          <pre class="java" name="code">
           textView.setAutoLinkMask(Linkify.ALL);
          </pre>
          <p>
          </p>
          <center>
           <br/>
           <a href="http://awalkingcity.com/blog/wp-content/uploads/2008/08/device.png">
            <img alt="" class="aligncenter size-medium wp-image-43" height="480" src="http://awalkingcity.com/blog/wp-content/uploads/2008/08/device.png" title="device" width="320"/>
           </a>
           <br/>
          </center>
          <p>
           I have even been experimenting with integrating the decoder with the built in WebView class which lets us decode images directly from the web browser.  As you can see in this example I have clicked on a QR Code and a dialog pops up with the decoded information.
          </p>
          <p>
           <a href="http://awalkingcity.com/blog/wp-content/uploads/2008/08/qrbrowse1.png">
            <img alt="" class="aligncenter size-medium wp-image-41" height="480" src="http://awalkingcity.com/blog/wp-content/uploads/2008/08/qrbrowse1.png" title="qrbrowse1" width="320"/>
           </a>
           <a href="http://awalkingcity.com/blog/wp-content/uploads/2008/08/qrbrowse2.png">
            <img alt="" class="aligncenter size-medium wp-image-42" height="480" src="http://awalkingcity.com/blog/wp-content/uploads/2008/08/qrbrowse2.png" title="qrbrowse2" width="320"/>
           </a>
          </p>
          <p>
           The code to do this is a little hackish but involves using the WebView.requestImageRef(msg) mechanism and calling decode from the handler that receives that message.
          </p>
          <p>
           I know of a number of decoders being developed for android but hopefully there will be a standard one that can be called using Intents so that developers can just fire off an intent in their application and get text back, not having to worry about dealing with the camera or the decoder libraries.
          </p>
          <div id="postmetadata">
           <p>
            Posted
												on August 25th, 2008						| filed under
            <a href="http://awalkingcity.com/blog/category/android/" rel="category tag" title="View all posts in android">
             android
            </a>
            ,
            <a href="http://awalkingcity.com/blog/category/java/" rel="category tag" title="View all posts in java">
             java
            </a>
            ,
            <a href="http://awalkingcity.com/blog/category/mobile/" rel="category tag" title="View all posts in mobile">
             mobile
            </a>
            |
            <a href="http://awalkingcity.com/blog/2008/08/25/qr-codes-made-easy-in-android/trackback/" rel="trackback">
             Trackback
            </a>
            |
           </p>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div id="commentsbox">
      <div class="inside">
       <!-- You can start editing here. -->
       <div id="commenthead">
        <h3 id="comments">
         5 Comments
        </h3>
       </div>
       <ol class="commentlist">
        <div id="comment">
         <div class="commentinside">
          <li class="alt" id="comment-30">
           <cite>
            <a class="url" href="http://code.google.com/p/zxing/" rel="external nofollow">
             Daniel Switkin
            </a>
           </cite>
           :
           <br/>
           <div class="commentmetadata">
            <a href="#comment-30" title="">
             August 26th, 2008
            </a>
           </div>
           <p>
            Good article, thanks for featuring ZXing. Have a look at the new Android client in the ZXing source tree. There are Intents documented there both for scanning and encoding using Chart Server. If you install this client, called Barcode Scanner, all other apps pick up this functionality for free.
           </p>
          </li>
         </div>
        </div>
        <div id="comment">
         <div class="commentinside">
          <li id="comment-492">
           <cite>
            Sujith
           </cite>
           :
           <br/>
           <div class="commentmetadata">
            <a href="#comment-492" title="">
             February 3rd, 2011
            </a>
           </div>
           <p>
            Can you provide the full source code of the WebView (You have mentioned it later). I am exactly working on the same.
           </p>
          </li>
         </div>
        </div>
        <div id="comment">
         <div class="commentinside">
          <li class="alt" id="comment-497">
           <cite>
            Romain
           </cite>
           :
           <br/>
           <div class="commentmetadata">
            <a href="#comment-497" title="">
             March 21st, 2011
            </a>
           </div>
           <p>
            Im interest too by the full source code of the WebView,can you provide it ?
           </p>
          </li>
         </div>
        </div>
        <div id="comment">
         <div class="commentinside">
          <li id="comment-503">
           <cite>
            Ricard
           </cite>
           :
           <br/>
           <div class="commentmetadata">
            <a href="#comment-503" title="">
             April 12th, 2011
            </a>
           </div>
           <p>
            Can you give me the full source brother? I can pay
           </p>
          </li>
         </div>
        </div>
        <div id="comment">
         <div class="commentinside">
          <li class="alt" id="comment-571">
           <cite>
            ntt
           </cite>
           :
           <br/>
           <div class="commentmetadata">
            <a href="#comment-571" title="">
             December 21st, 2011
            </a>
           </div>
           <p>
            hi
            <br/>
            can you share simple source code of scanning QR code using zxing and getting back a result?
            <br/>
            theres not much resources, turtorial and complete source code for doing this simple thing.
            <br/>
            very nice writeup.
           </p>
          </li>
         </div>
        </div>
       </ol>
       <div id="replybox">
        <div id="reply">
         Leave a Reply
        </div>
        <form action="http://awalkingcity.com/blog/wp-comments-post.php" id="commentform" method="post">
         <p>
          <input id="author" name="author" size="22" tabindex="1" type="text" value=""/>
          <label for="author">
           <small>
            Name (required)
           </small>
          </label>
         </p>
         <p>
          <input id="email" name="email" size="22" tabindex="2" type="text" value=""/>
          <label for="email">
           <small>
            Mail (will not be published) (required)
           </small>
          </label>
         </p>
         <p>
          <input id="url" name="url" size="22" tabindex="3" type="text" value=""/>
          <label for="url">
           <small>
            Website
           </small>
          </label>
         </p>
         <p>
          <small>
           <strong>
            XHTML:
           </strong>
           You can use these tags:
           <code>
            &lt;a href="" title=""&gt; &lt;abbr title=""&gt; &lt;acronym title=""&gt; &lt;b&gt; &lt;blockquote cite=""&gt; &lt;cite&gt; &lt;code&gt; &lt;del datetime=""&gt; &lt;em&gt; &lt;i&gt; &lt;q cite=""&gt; &lt;strike&gt; &lt;strong&gt;
           </code>
          </small>
         </p>
         <p>
          <textarea color="#fff" cols="80%" id="comment" name="comment" rows="10" tabindex="4">
          </textarea>
         </p>
         <p>
          <input class="textfield" id="submit" name="submit" tabindex="5" type="submit" value="Submit Comment"/>
          <input name="comment_post_ID" type="hidden" value="39"/>
         </p>
         <p style="display: none;">
          <input id="akismet_comment_nonce" name="akismet_comment_nonce" type="hidden" value="e14b1e60fb"/>
         </p>
        </form>
       </div>
      </div>
     </div>
     <div id="footer">
      <div class="insidefooter">
       <p>
         2015 a walking city | All Rights Reserved | Powered by
        <a href="http://wordpress.org/">
         WordPress
        </a>
        | Theme:
        <a href="http://www.cognitivecombine.com/?p=52">
         CognitiveCombine WM
        </a>
        |
        <a href="http://awalkingcity.com/blog/feed/">
         Entries RSS
        </a>
        |
        <a href="http://awalkingcity.com/blog/comments/feed/">
         Comments RSS
        </a>
        <!-- 15 queries. 0.514 seconds. -->
       </p>
      </div>
     </div>
    </div>
   </div>
  </div>
  <!--stats_footer_test-->
  <script src="http://stats.wordpress.com/e-201529.js" type="text/javascript">
  </script>
  <script type="text/javascript">
   st_go({blog:'3051814',v:'ext',post:'39'});
var load_cmc = function(){linktracker_init(3051814,39,2);};
if ( typeof addLoadEvent != 'undefined' ) addLoadEvent(load_cmc);
else load_cmc();
  </script>
  <!-- SyntaxHighlighter Stuff -->
  <script src="http://awalkingcity.com/blog/wp-content/plugins/syntaxhighlighter/files/shCore.js" type="text/javascript">
  </script>
  <script src="http://awalkingcity.com/blog/wp-content/plugins/syntaxhighlighter/files/shBrushJava.js" type="text/javascript">
  </script>
  <script type="text/javascript">
   dp.SyntaxHighlighter.ClipboardSwf = 'http://awalkingcity.com/blog/wp-content/plugins/syntaxhighlighter/files/clipboard.swf';
	dp.SyntaxHighlighter.HighlightAll('code');
  </script>
 </body>
</html>
<!-- Dynamic Page Served (once) in 0.514 seconds -->
