<!DOCTYPE html>
<html>
 <head>
  <title>
   How To Set Up a Masterless Puppet Environment on Ubuntu 14.04 | DigitalOcean
  </title>
  <meta content="Typically, a user pushes their Puppet modules to a version control server, then pulls those modules down to a Puppet master. Puppet clients periodically connect to the Puppet master to pull and apply any changes.&#13; &#13; This scenario works fine un" name="description"/>
  <meta content="Configuration Management Git" name="keywords"/>
  <meta content="How To Set Up a Masterless Puppet Environment on Ubuntu 14.04 | DigitalOcean" name="og:title"/>
  <meta content="Typically, a user pushes their Puppet modules to a version control server, then pulls those modules down to a Puppet master. Puppet clients periodically connect to the Puppet master to pull and apply any changes.&#13; &#13; This scenario works fine un" name="og:description"/>
  <meta content="DigitalOcean" name="og:site_name"/>
  <meta content="article" name="og:type"/>
  <meta content="DigitalOcean" name="twitter:site"/>
  <meta content="How To Set Up a Masterless Puppet Environment on Ubuntu 14.04 | DigitalOcean" name="twitter:title"/>
  <meta content="Typically, a user pushes their Puppet modules to a version control server, then pulls those modules down to a Puppet master. Puppet clients periodically connect to the Puppet master to pull and apply any changes.&#13; &#13; This scenario works fine un" name="twitter:description"/>
  <meta content="DigitalOcean" name="twitter:creator"/>
  <meta content="https://www.digitalocean.com/assets/community/tags/git-f98f2a0cdd46ce4ac549a7a0d4700eee.png" property="og:image"/>
  <meta content="photo" name="twitter:card"/>
  <meta content="https://www.digitalocean.com/assets/community/tags/git-f98f2a0cdd46ce4ac549a7a0d4700eee.png" name="twitter:image"/>
  <meta content="https://www.digitalocean.com/community/tutorials/how-to-set-up-a-masterless-puppet-environment-on-ubuntu-14-04" name="twitter:url"/>
  <link href="https://www.digitalocean.com/community/tutorials/how-to-set-up-a-masterless-puppet-environment-on-ubuntu-14-04" rel="canonical"/>
  <link href="/assets/community/application-85a088600c9f1d584b150ca5d6d8bfa4.css" media="all" rel="stylesheet"/>
  <meta content="authenticity_token" name="csrf-param"/>
  <meta content="U++L7nEVj68CwU8Wwe0egyz5/wSNXXbWOhW7SvhGMtMKY6uD6XQK/G5jqxHeLHX06onA8J79FbmrABa2JQSRtg==" name="csrf-token"/>
  <script src="//use.typekit.net/njm7orv.js" type="text/javascript">
  </script>
  <script type="text/javascript">
   try{Typekit.load();}catch(e){}
  </script>
  <script src="//cdn.optimizely.com/js/701281621.js">
  </script>
  <script type="text/javascript">
   if(window.analytics=window.analytics||[],window.analytics.included)window.console&amp;&amp;console.error&amp;&amp;console.error("analytics.js included twice");else{window.analytics.included=!0,window.analytics.methods=["identify","group","track","page","pageview","alias","ready","on","once","off","trackLink","trackForm","trackClick","trackSubmit"],window.analytics.factory=function(a){return function(){var n=Array.prototype.slice.call(arguments);return n.unshift(a),window.analytics.push(n),window.analytics}};for(var i=0;i&lt;window.analytics.methods.length;i++){var key=window.analytics.methods[i];window.analytics[key]=window.analytics.factory(key)}window.analytics.load=function(a){var n=document.createElement("script");n.type="text/javascript",n.async=!0,n.src=("https:"===document.location.protocol?"https://":"http://")+"cdn.segment.com/analytics.js/v1/"+a+"/analytics.min.js";var t=document.getElementsByTagName("script")[0];t.parentNode.insertBefore(n,t)},window.analytics.SNIPPET_VERSION="2.0.9",
      window.analytics.load("puo3uv968t")}
      window.analytics.page();
  </script>
  <meta content="initial-scale=1, maximum-scale=1" name="viewport"/>
  <script src="/assets/community/application-b30258fd032fd296541edf1b56af66e0.js">
  </script>
 </head>
 <body class="tutorials-controller tutorial-single" data-env="production" data-facebook-app-id="694818843983011" data-prefix="/community" data-user-id="">
  <script>
   //&lt;![CDATA[

    $(function() {
      dataLayer = [$.parseJSON('{\"user_id\":\"\",\"is_community_page\":true,\"content_type\":\"tutorial\",\"author\":\"Michael Holley\",\"difficulty\":\"advanced\",\"created_at\":\"2015-04-29T15:04:06.223Z\",\"published_at\":\"2015-04-29T15:32:04.208Z\",\"updated_at\":\"2015-05-15T20:24:06.176Z\",\"article_tags\":\"Git, Configuration Management\"}')];
    });

//]]&gt;
  </script>
  <!-- Google Tag Manager -->
  <noscript>
   <iframe height="0" src="//www.googletagmanager.com/ns.html?id=GTM-KHWBBT" style="display:none;visibility:hidden" width="0">
   </iframe>
  </noscript>
  <script>
   (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&amp;l='+l:'';j.async=true;j.src=
'//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-KHWBBT');
  </script>
  <!-- End Google Tag Manager -->
  <div class="outside_viewport">
   <div class="modal fade mini-modal" id="share-modal" style="display: none;">
    <div class="modal-dialog">
     <div class="modal-content">
      <div class="modal-header">
       <h1>
        Share
       </h1>
       <a class="close-button" data-dismiss="modal" href="">
        <span class="icon icon-close-light">
        </span>
       </a>
      </div>
      <div class="modal-body">
       <div class="social-sharing social-sharing-container">
        <ul class="bottom ">
         <li class="shareBtn" id="sbTwitter">
          <a class="share-icon share-popup" href="http://twitter.com/share?text=How To Set Up a Masterless Puppet Environment on Ubuntu 14.04&amp;url=https://www.digitalocean.com/community/tutorials/how-to-set-up-a-masterless-puppet-environment-on-ubuntu-14-04?utm_content=how-to-set-up-a-masterless-puppet-environment-on-ubuntu-14-04&amp;utm_medium=community&amp;utm_source=twshare" title="Share on Twitter">
           <span class="sIcon icon-bird">
           </span>
          </a>
          <a class="share-link share-popup" href="http://twitter.com/share?text=How To Set Up a Masterless Puppet Environment on Ubuntu 14.04&amp;url=https://www.digitalocean.com/community/tutorials/how-to-set-up-a-masterless-puppet-environment-on-ubuntu-14-04?utm_content=how-to-set-up-a-masterless-puppet-environment-on-ubuntu-14-04&amp;utm_medium=community&amp;utm_source=twshare" title="Share on Twitter">
           Twitter
          </a>
         </li>
         <li class="shareBtn" id="sbFacebook">
          <a class="share-icon facebook-share" href="https://www.digitalocean.com/community/tutorials/how-to-set-up-a-masterless-puppet-environment-on-ubuntu-14-04?utm_content=how-to-set-up-a-masterless-puppet-environment-on-ubuntu-14-04&amp;utm_medium=community&amp;utm_source=fbshare" onclick="" title="Share on Facebook">
           <span class="sIcon icon-facebook-B">
           </span>
          </a>
          <a class="share-link facebook-share" href="https://www.digitalocean.com/community/tutorials/how-to-set-up-a-masterless-puppet-environment-on-ubuntu-14-04?utm_content=how-to-set-up-a-masterless-puppet-environment-on-ubuntu-14-04&amp;utm_medium=community&amp;utm_source=fbshare" onclick="" title="Share on Facebook">
           Facebook
          </a>
         </li>
         <li class="shareBtn" id="sbGoogle">
          <a class="share-icon share-popup" href="https://plus.google.com/share?url=https://www.digitalocean.com/community/tutorials/how-to-set-up-a-masterless-puppet-environment-on-ubuntu-14-04?utm_content=how-to-set-up-a-masterless-puppet-environment-on-ubuntu-14-04&amp;utm_medium=community&amp;utm_source=gpshare" title="Share on Google+">
           <span class="sIcon icon-google-plus-B">
           </span>
          </a>
          <a class="share-link share-popup" href="https://plus.google.com/share?url=https://www.digitalocean.com/community/tutorials/how-to-set-up-a-masterless-puppet-environment-on-ubuntu-14-04?utm_content=how-to-set-up-a-masterless-puppet-environment-on-ubuntu-14-04&amp;utm_medium=community&amp;utm_source=gpshare" title="Share on Google+">
           Google+
          </a>
         </li>
         <li class="shareBtn" id="sbYC">
          <a class="share-icon" href="https://news.ycombinator.com/submitlink?t=How To Set Up a Masterless Puppet Environment on Ubuntu 14.04&amp;u=https://www.digitalocean.com/community/tutorials/how-to-set-up-a-masterless-puppet-environment-on-ubuntu-14-04?utm_content=how-to-set-up-a-masterless-puppet-environment-on-ubuntu-14-04&amp;utm_medium=community&amp;utm_source=hnshare" target="_blank" title="Submit to Hacker News">
           <span class="sIcon icon-hacker-news">
           </span>
          </a>
          <a class="share-link" href="https://news.ycombinator.com/submitlink?t=How To Set Up a Masterless Puppet Environment on Ubuntu 14.04&amp;u=https://www.digitalocean.com/community/tutorials/how-to-set-up-a-masterless-puppet-environment-on-ubuntu-14-04?utm_content=how-to-set-up-a-masterless-puppet-environment-on-ubuntu-14-04&amp;utm_medium=community&amp;utm_source=hnshare" target="_blank" title="Submit to Hacker News">
           Hacker News
          </a>
         </li>
        </ul>
       </div>
      </div>
     </div>
    </div>
   </div>
   <div class="modal fade mini-modal" id="contents-modal" style="display: none;">
    <div class="modal-dialog">
     <div class="modal-content">
      <div class="modal-header">
       <h1>
        Contents
       </h1>
       <a class="close-button" data-dismiss="modal" href="">
        <span class="icon icon-close-light">
        </span>
       </a>
      </div>
      <div class="modal-body">
       <div class="table-of-contents-modal open">
       </div>
      </div>
     </div>
    </div>
   </div>
   <div class="tutorial-info-bar-container top">
    <div class="tutorial-info-bar">
     <div class="left-section">
      <div class="tutorial-author-avatar">
       <a href="/community/users/michaelholley">
        <img alt="2bead7b7d80a88d147750a6839177311eae3cda7" class="avatar avatar-medium" src="https://community-cdn-digitalocean-com.global.ssl.fastly.net/assets/users/avatars/medium/2bead7b7d80a88d147750a6839177311eae3cda7.png?1421722188"/>
       </a>
      </div>
      <div class="author-and-date">
       <div class="tutorial-author">
        <div class="by">
         By:
        </div>
        <a href="/community/users/michaelholley">
         Michael Holley
        </a>
       </div>
       <div class="tutorial-date">
        Apr 29, 2015
       </div>
      </div>
      <div class="upvotes upvoted tutorial-upvote">
       <form accept-charset="UTF-8" action="/community/upvotes/toggle?upvote%5Bupvotable_id%5D=1580&amp;upvote%5Bupvotable_type%5D=Tutorial" class="upvote-form upvote signed-out-upvote" data-remote="true" data-upvotable="tutorial_1580" data-upvotable-type="tutorial" method="post">
        <input name="utf8" type="hidden" value=""/>
        <input name="_method" type="hidden" value="patch"/>
        <input name="authenticity_token" type="hidden" value="tykl3meEHiYsxuwWmUSDJpi6eH90JvY2NJ8NiAuA+jXupQWz/+WbdUBkCBGGhehRXspHi2eGlVmliqB01sJZUA=="/>
        <button data-target="#sign-in-modal" data-toggle="modal" disabled="disabled" type="submit">
         <span class="icon-upvote-heart-small upvote-heart" data-placement="bottom" data-return-url="" data-target="#sign-in-modal" data-toggle="modal" title="Do you find this post helpful? Show the author by Hearting it!">
         </span>
        </button>
       </form>
       <span class="upvote-text">
        <span class="hearted-text">
         Hearted
        </span>
        <span class="heart-text">
         Heart
        </span>
       </span>
       <div class="upvote-count ">
        7
       </div>
      </div>
      <div class="tutorial-comments-count">
       <span class="icon icon-new-comment">
       </span>
       2
      </div>
     </div>
     <div class="right-section">
      <div class="section-item social-sharing-item">
       <div class="sharing">
        <a class="share-button" data-target="#share-modal" data-toggle="modal" href="#">
         <span class="icon icon-share-square">
         </span>
         Share
        </a>
       </div>
      </div>
      <div class="section-item table-of-contents-triggers">
       <div class="toc-trigger ">
        <a href="javascript:void(0);">
         <span class="icon icon-close-light">
         </span>
         <span class="icon icon-menu-thin">
         </span>
         <span class="title">
          Contents
         </span>
        </a>
       </div>
       <div class="toc-trigger-mobile" data-target="#contents-modal" data-toggle="modal">
        <a href="javascript:void(0);">
         <span class="icon icon-menu-thin">
         </span>
         <span class="title">
          Contents
         </span>
        </a>
       </div>
      </div>
     </div>
    </div>
   </div>
   <div class="table-of-contents ">
   </div>
   <div class="modal fade mini-modal" id="share-modal" style="display: none;">
    <div class="modal-dialog">
     <div class="modal-content">
      <div class="modal-header">
       <h1>
        Share
       </h1>
       <a class="close-button" data-dismiss="modal" href="">
        <span class="icon icon-close-light">
        </span>
       </a>
      </div>
      <div class="modal-body">
       <div class="social-sharing social-sharing-container">
        <ul class="top ">
         <li class="shareBtn" id="sbTwitter">
          <a class="share-icon share-popup" href="http://twitter.com/share?text=How To Set Up a Masterless Puppet Environment on Ubuntu 14.04&amp;url=https://www.digitalocean.com/community/tutorials/how-to-set-up-a-masterless-puppet-environment-on-ubuntu-14-04?utm_content=how-to-set-up-a-masterless-puppet-environment-on-ubuntu-14-04&amp;utm_medium=community&amp;utm_source=twshare" title="Share on Twitter">
           <span class="sIcon icon-bird">
           </span>
          </a>
          <a class="share-link share-popup" href="http://twitter.com/share?text=How To Set Up a Masterless Puppet Environment on Ubuntu 14.04&amp;url=https://www.digitalocean.com/community/tutorials/how-to-set-up-a-masterless-puppet-environment-on-ubuntu-14-04?utm_content=how-to-set-up-a-masterless-puppet-environment-on-ubuntu-14-04&amp;utm_medium=community&amp;utm_source=twshare" title="Share on Twitter">
           Twitter
          </a>
         </li>
         <li class="shareBtn" id="sbFacebook">
          <a class="share-icon facebook-share" href="https://www.digitalocean.com/community/tutorials/how-to-set-up-a-masterless-puppet-environment-on-ubuntu-14-04?utm_content=how-to-set-up-a-masterless-puppet-environment-on-ubuntu-14-04&amp;utm_medium=community&amp;utm_source=fbshare" onclick="" title="Share on Facebook">
           <span class="sIcon icon-facebook-B">
           </span>
          </a>
          <a class="share-link facebook-share" href="https://www.digitalocean.com/community/tutorials/how-to-set-up-a-masterless-puppet-environment-on-ubuntu-14-04?utm_content=how-to-set-up-a-masterless-puppet-environment-on-ubuntu-14-04&amp;utm_medium=community&amp;utm_source=fbshare" onclick="" title="Share on Facebook">
           Facebook
          </a>
         </li>
         <li class="shareBtn" id="sbGoogle">
          <a class="share-icon share-popup" href="https://plus.google.com/share?url=https://www.digitalocean.com/community/tutorials/how-to-set-up-a-masterless-puppet-environment-on-ubuntu-14-04?utm_content=how-to-set-up-a-masterless-puppet-environment-on-ubuntu-14-04&amp;utm_medium=community&amp;utm_source=gpshare" title="Share on Google+">
           <span class="sIcon icon-google-plus-B">
           </span>
          </a>
          <a class="share-link share-popup" href="https://plus.google.com/share?url=https://www.digitalocean.com/community/tutorials/how-to-set-up-a-masterless-puppet-environment-on-ubuntu-14-04?utm_content=how-to-set-up-a-masterless-puppet-environment-on-ubuntu-14-04&amp;utm_medium=community&amp;utm_source=gpshare" title="Share on Google+">
           Google+
          </a>
         </li>
         <li class="shareBtn" id="sbYC">
          <a class="share-icon" href="https://news.ycombinator.com/submitlink?t=How To Set Up a Masterless Puppet Environment on Ubuntu 14.04&amp;u=https://www.digitalocean.com/community/tutorials/how-to-set-up-a-masterless-puppet-environment-on-ubuntu-14-04?utm_content=how-to-set-up-a-masterless-puppet-environment-on-ubuntu-14-04&amp;utm_medium=community&amp;utm_source=hnshare" target="_blank" title="Submit to Hacker News">
           <span class="sIcon icon-hacker-news">
           </span>
          </a>
          <a class="share-link" href="https://news.ycombinator.com/submitlink?t=How To Set Up a Masterless Puppet Environment on Ubuntu 14.04&amp;u=https://www.digitalocean.com/community/tutorials/how-to-set-up-a-masterless-puppet-environment-on-ubuntu-14-04?utm_content=how-to-set-up-a-masterless-puppet-environment-on-ubuntu-14-04&amp;utm_medium=community&amp;utm_source=hnshare" target="_blank" title="Submit to Hacker News">
           Hacker News
          </a>
         </li>
        </ul>
       </div>
      </div>
     </div>
    </div>
   </div>
  </div>
  <div class="mobile-nav">
   <div class="account-buttons">
    <div id="entrance">
     <a class="button" href="/community/auth/digitalocean?display=sessionless+register" id="sign-up">
      Sign Up
     </a>
     <a class="button" href="/community/auth/digitalocean" id="log-in">
      Log In
     </a>
    </div>
   </div>
   <a class="close-panel icon-close" href="javascript:void(0);">
   </a>
   <form accept-charset="UTF-8" action="/community/search" class="mobile-search" method="get">
    <input name="utf8" type="hidden" value=""/>
    <span class="icon icon-search-thin">
    </span>
    <input id="q" name="q" placeholder="Search" type="text"/>
    <button class="icon-btn" name="button" type="submit">
     submit
    </button>
   </form>
   <nav>
    <ul>
     <li>
      <a href="/community/tutorials">
       Tutorials
      </a>
     </li>
     <li>
      <a href="/community/questions">
       Questions
      </a>
     </li>
     <li>
      <a href="/community/projects">
       Projects
      </a>
     </li>
     <li class="mobile-nav-only">
      <a href="https://www.digitalocean.com/">
       Main Site
      </a>
     </li>
    </ul>
   </nav>
  </div>
  <header>
   <div class="main-menu-container">
    <div class="wrapper">
     <div class="logo">
      <a class="" href="https://www.digitalocean.com/">
       <span class="icon icon-cloud">
       </span>
      </a>
      <a class="" href="/community">
       <span class="logo-community-text">
        Community
       </span>
      </a>
     </div>
     <a class="mobile-nav-toggle icon-menu-thin" data-role="left">
      <span>
       Menu
      </span>
     </a>
     <nav>
      <ul>
       <li>
        <a href="/community/tutorials">
         Tutorials
        </a>
       </li>
       <li>
        <a href="/community/questions">
         Questions
        </a>
       </li>
       <li>
        <a href="/community/projects">
         Projects
        </a>
       </li>
       <li class="mobile-nav-only">
        <a href="https://www.digitalocean.com/">
         Main Site
        </a>
       </li>
      </ul>
     </nav>
     <div class="account-buttons">
      <div id="entrance">
       <a class="button" href="/community/auth/digitalocean?display=sessionless+register" id="sign-up">
        Sign Up
       </a>
       <a class="button" href="/community/auth/digitalocean" id="log-in">
        Log In
       </a>
      </div>
     </div>
     <div class="header-search open">
      <form accept-charset="UTF-8" action="/community/search" method="get">
       <input name="utf8" type="hidden" value=""/>
       <span class="icon icon-search-thin">
       </span>
       <input autocomplete="off" class="header-search-input" data-algolia-api-key="c5470567eae7fa1177d43222e18ba086" data-algolia-application-id="6ZHEUVKJ88" id="q" name="q" placeholder="Search" spellcheck="off" type="text"/>
       <button class="icon-btn" name="button" type="submit">
        submit
       </button>
      </form>
     </div>
     <div class="search-results-dropdown dropdown" data-root-path="https://www.digitalocean.com/community">
      <div class="container">
       <div class="header-search-results-list">
       </div>
       <div id="btn-wrap">
        <a class="more-search-results" data-search-path="/community/search" href="/community/search">
         <span class="icon-mag">
         </span>
         View All Results
        </a>
       </div>
      </div>
     </div>
     <script id="autocomplete-hits-template" type="text/template">
      &lt;div class="inner-search"&gt;
    &lt;ul&gt;
        {{#hits}}
          &lt;li&gt;
            &lt;span class='icon icon-{{type}}'&gt;&lt;/span&gt;
            &lt;a href='{{url}}'&gt;{{{_highlightResult.title.value}}}&lt;/a&gt;
          &lt;/li&gt;
        {{/hits}}
    &lt;/ul&gt;
  &lt;/div&gt;
     </script>
     <div class="clearfix">
     </div>
    </div>
   </div>
   <div class="wrapper">
   </div>
  </header>
  <div class="flash-container">
  </div>
  <div class="wrapper layout-wrapper">
   <div class="section-content content">
    <div class="info-cta">
     <a class="icon-close-light" href="javascript:void();">
     </a>
     We hope you find this tutorial helpful. In addition to guides like this one, we provide simple cloud infrastructure for developers.
     <a href="https://www.digitalocean.com/?utm_medium=community&amp;utm_source=community_gencta&amp;utm_campaign=needaserver&amp;utm_content=how-to-set-up-a-masterless-puppet-environment-on-ubuntu-14-04">
      Learn more 
     </a>
    </div>
    <h1 class="content-title">
     How To Set Up a Masterless Puppet Environment on Ubuntu 14.04
    </h1>
    <span class="meta-section tags">
     <span class="meta-label">
      Tags:
     </span>
     <span class="meta-value">
      <a class="" href="/community/tags/configuration-management?type=tutorials">
       Configuration Management
      </a>
      ,
      <a class="" href="/community/tags/git?type=tutorials">
       Git
      </a>
     </span>
    </span>
    <span class="meta-section tags">
     <span class="meta-label">
      Distribution:
     </span>
     <span class="meta-value">
      <a class="" href="/community/tags/ubuntu?type=tutorials">
       Ubuntu
      </a>
     </span>
    </span>
    <div class="content-body tutorial-content">
     <h3 id="introduction">
      Introduction
     </h3>
     <p>
      In the modern world of cloud computing, configuration management is a crucial step.
      <em>
       Configuration management tools
      </em>
      allow you to reliably deploy configurations to your servers. One of the more mature configuration management tools in this space is
      <a href="https://www.digitalocean.com/community/tutorials/getting-started-with-puppet-code-manifests-and-modules">
       Puppet
      </a>
      .
     </p>
     <p>
      In a typical Puppet environment, a user writes Puppet modules on their workstation, pushes the modules to a version control server (e.g. Git), then pulls those modules down to a Puppet master. A server running the Puppet client periodically connects to the Puppet master to see if anything has changed, and applies the changes if so.
     </p>
     <p>
      This scenario works just fine until you have to start scaling up how many servers are checking in or the modules become fairly complex. At that point you have two options: cluster your Puppet Master to handle the load (which will likely require you to buy the commercial version of Puppet), or just drop the Puppet master altogether. This article will look into the second option.
     </p>
     <p>
      A masterless Puppet setup requires a copy of all Puppet modules to be copied to each node via Git and then have Puppet apply the changes locally. The disadvantage with this method is that each server downloads all of the modules, then applies what is relevant, so it's not the best choice for e.g. setups with sensitive information. However, running without a Puppet master gives you a lot of flexibility and works great without having to scale your infrastructure.
     </p>
     <h3 id="prerequisites">
      Prerequisites
     </h3>
     <p>
      If you are new to Puppet, then you may want to pause here to read
      <a href="https://www.digitalocean.com/community/tutorials/getting-started-with-puppet-code-manifests-and-modules">
       this article on Puppet
      </a>
      first, as this tutorial assumes a working knowledge of the tool. If you're new to Git, you can check out
      <a href="https://www.digitalocean.com/community/tutorial_series/introduction-to-git-installation-usage-and-branches">
       this introduction to Git series
      </a>
      , too.
     </p>
     <p>
      In this tutorial, we'll be working with two Droplets: one running as a Git server, and the other that we'll be applying changes to via Puppet. We'll refer to the IP addresses of these Droplets with
      <code>
       your_git_server_ip
      </code>
      and
      <code>
       your_puppet_server_ip
      </code>
      respectively.
     </p>
     <p>
      So, to follow this tutorial, you will need:
     </p>
     <ul>
      <li>
       One Ubuntu 14.04 Droplet with a
       <a href="https://www.digitalocean.com/community/tutorials/how-to-add-and-delete-users-on-an-ubuntu-14-04-vps">
        sudo non-root user
       </a>
       and
       <a href="https://www.digitalocean.com/community/tutorials/how-to-configure-ssh-key-based-authentication-on-a-linux-server">
        SSH keys added
       </a>
       .
      </li>
      <li>
       Another Ubuntu 14.04 Dropet with SSH keys added and Git Labs installed.
      </li>
     </ul>
     <p>
      The easiest way to set up Git Labs is to use the one click image: on the Droplet creation page under
      <strong>
       Select Image
      </strong>
      , click the
      <strong>
       Applications
      </strong>
      tab, then click
      <strong>
       GitLab 7.10.0 CE on 14.04
      </strong>
      . You can also follow
      <a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-gitlab-as-your-very-own-private-github-clone">
       this tutorial
      </a>
      to set up Git Labs manually.
     </p>
     <h2 id="step-1--creating-a-git-repository">
      Step 1  Creating a Git Repository
     </h2>
     <p>
      The first step is to create a repository where all of our Puppet modules and manifests will be stored.
     </p>
     <p>
      First, open the Git Labs UI by going to
      <code>
       http://
       <span class="highlight">
        your_git_server_ip
       </span>
      </code>
      in your favorite browser. Create an account by filling in the details on the right under
      <strong>
       New user? Create an account
      </strong>
      and pressing the green
      <strong>
       Sign up
      </strong>
      button. You'll receive an account activation email, and after activating your account, you'll be able to sign in on the main page.
     </p>
     <p>
      Click on the green
      <strong>
       + New Project
      </strong>
      button on the main page. Enter "puppet" for the
      <strong>
       Project path
      </strong>
      , and click
      <strong>
       Create project
      </strong>
      . Enter "puppet" in the
      <strong>
       Project path
      </strong>
      field, and choose
      <strong>
       Public
      </strong>
      for the
      <strong>
       Visibility Level
      </strong>
      , then click the green
      <strong>
       Create Project
      </strong>
      button.
     </p>
     <p>
      Make sure you copy the SSH URL, which you'll see toward the top of the project screen, as we'll need it in a later step. It'll look something like
      <code>
       git@
       <span class="highlight">
        your_git_server_ip
       </span>
       :
       <span class="highlight">
        username
       </span>
       /puppet.git
      </code>
      .
     </p>
     <h2 id="step-2--adding-an-ssh-key-to-git-labs">
      Step 2  Adding an SSH Key to Git Labs
     </h2>
     <p>
      In this step, we will create an SSH key on the Puppet server, then add that key to the Git Labs server.
     </p>
     <p>
      Log in to the Puppet server as
      <strong>
       root
      </strong>
      . (Because Puppet's files will be owned by root, we need to have rights to setup the initial Git repo in the Puppet folder.)
     </p>
     <p>
      Create an SSH key for the root user. Make sure not to enter a passphrase because this key will be used by scripts, not a user.
     </p>
     <pre class="code-pre super_user">
      <code langs="">
       <ul class="prefixed">
        <li class="line" prefix="#">
         ssh-keygen -t rsa
        </li>
       </ul>
      </code>
     </pre>
     <p>
      Next, display your public key with the following command.
     </p>
     <pre class="code-pre super_user">
      <code langs="">
       <ul class="prefixed">
        <li class="line" prefix="#">
         cat ~/.ssh/id_rsa.pub
        </li>
       </ul>
      </code>
     </pre>
     <p>
      Copy this key. It will look something like
      <code>
       ssh-rsa long_alphanumeric_string root@
       <span class="highlight">
        hostname
       </span>
      </code>
      .
     </p>
     <p>
      Now, on your Git Labs Dashboard page, click on the
      <strong>
       Profile settings
      </strong>
      icon on the top bar, second from the right. In the left menu, click
      <strong>
       SSH Keys
      </strong>
      , then click the green
      <strong>
       Add an SSH Key
      </strong>
      button. In the
      <strong>
       Title
      </strong>
      , field add a description of the key (like "Root Puppet Key"), and paste your public key into the
      <strong>
       Key
      </strong>
      field. Finally, click
      <strong>
       Add key
      </strong>
      .
     </p>
     <h2 id="step-3--installing-puppet-and-git">
      Step 3  Installing Puppet and Git
     </h2>
     <p>
      In this step, we will install Puppet and Git.
     </p>
     <p>
      On the Puppet server, first download the Puppet package for Ubuntu 14.04.
     </p>
     <pre class="code-pre super_user">
      <code langs="">
       <ul class="prefixed">
        <li class="line" prefix="#">
         wget http://apt.puppetlabs.com/puppetlabs-release-trusty.deb
        </li>
       </ul>
      </code>
     </pre>
     <p>
      Install the package.
     </p>
     <pre class="code-pre super_user">
      <code langs="">
       <ul class="prefixed">
        <li class="line" prefix="#">
         dpkg -i /tmp/puppetlabs-release-trusty.deb
        </li>
       </ul>
      </code>
     </pre>
     <p>
      Update your system's package list.
     </p>
     <pre class="code-pre super_user">
      <code langs="">
       <ul class="prefixed">
        <li class="line" prefix="#">
         apt-get update
        </li>
       </ul>
      </code>
     </pre>
     <p>
      Finally, install Puppet and git.
     </p>
     <pre class="code-pre super_user">
      <code langs="">
       <ul class="prefixed">
        <li class="line" prefix="#">
         apt-get install puppet git-core
        </li>
       </ul>
      </code>
     </pre>
     <p>
      At this point, you should configure your Git environment by following the instructions in
      <a href="https://www.digitalocean.com/community/tutorials/how-to-install-git-on-ubuntu-14-04#how-to-set-up-git">
       this tutorial
      </a>
      .
     </p>
     <h2 id="step-4--pushing-the-initial-puppet-configuration">
      Step 4  Pushing the Initial Puppet Configuration
     </h2>
     <p>
      With Puppet and Git installed, we are ready to do our initial push to our Puppet repository.
     </p>
     <p>
      First, move to the
      <code>
       /etc/puppet
      </code>
      directory, where the configuration files live.
     </p>
     <pre class="code-pre super_user">
      <code langs="">
       <ul class="prefixed">
        <li class="line" prefix="#">
         cd /etc/puppet
        </li>
       </ul>
      </code>
     </pre>
     <p>
      Initialize a git repository here.
     </p>
     <pre class="code-pre super_user">
      <code langs="">
       <ul class="prefixed">
        <li class="line" prefix="#">
         git init
        </li>
       </ul>
      </code>
     </pre>
     <p>
      Add everything in the current directory.
     </p>
     <pre class="code-pre super_user">
      <code langs="">
       <ul class="prefixed">
        <li class="line" prefix="#">
         git add .
        </li>
       </ul>
      </code>
     </pre>
     <p>
      Commit these changes with a descriptive comment.
     </p>
     <pre class="code-pre super_user">
      <code langs="">
       <ul class="prefixed">
        <li class="line" prefix="#">
         git commit -m "
         <span class="highlight">
          Initial commit of Puppet files
         </span>
         "
        </li>
       </ul>
      </code>
     </pre>
     <p>
      Add the Git project we created earlier as origin using the SSH URL you copied in Step 1.
     </p>
     <pre class="code-pre super_user">
      <code langs="">
       <ul class="prefixed">
        <li class="line" prefix="#">
         git remote add origin git@
         <span class="highlight">
          your_server_ip
         </span>
         :
         <span class="highlight">
          username
         </span>
         /puppet.git
        </li>
       </ul>
      </code>
     </pre>
     <p>
      And finally, push the changes.
     </p>
     <pre class="code-pre super_user">
      <code langs="">
       <ul class="prefixed">
        <li class="line" prefix="#">
         git push -u origin master
        </li>
       </ul>
      </code>
     </pre>
     <h2 id="step-5--cleaning-up-puppet-39-s-configuration">
      Step 5  Cleaning Up Puppet's Configuration
     </h2>
     <p>
      Now that Puppet is installed, we can put everything together. At this point, you can log out as root and instead log in as the sudo non-root user you created during the prerequisites. It isn't good practice to operate as the root user unless absolutely necessary.
     </p>
     <p>
      To get the foundation in place, we need to make a couple of changes. First, we are going to clean up the
      <code>
       /etc/puppet/puppet.conf
      </code>
      file. Using your favorite editor (vim, nano, etc.) edit
      <code>
       /etc/puppet/puppet.conf
      </code>
      with the following changes.
     </p>
     <p>
      Let's start by making a few changes to the
      <code>
       /etc/puppet/puppet.conf
      </code>
      file for our specific setup. Open the file using nano or your favorite text editor.
     </p>
     <pre class="code-pre command">
      <code langs="">
       <ul class="prefixed">
        <li class="line" prefix="$">
         sudo nano /etc/puppet/puppet.conf
        </li>
       </ul>
      </code>
     </pre>
     <p>
      The file will look like this:
     </p>
     <div class="code-label " title="Original /etc/puppet/puppet.conf">
      Original /etc/puppet/puppet.conf
     </div>
     <pre class="code-pre ">
      <code langs="">
       [main]
logdir=/var/log/puppet
vardir=/var/lib/puppet
ssldir=/var/lib/puppet/ssl
rundir=/var/run/puppet
factpath=$vardir/lib/facter
templatedir=$confdir/templates

[master]
# These are needed when the puppetmaster is run by passenger
# and can safely be removed if webrick is used.
ssl_client_header = SSL_CLIENT_S_DN 
ssl_client_verify_header = SSL_CLIENT_VERIFY
      </code>
     </pre>
     <p>
      First, remove everything from the
      <code>
       [master]
      </code>
      line down, as we aren't running a Puppet master. Also delete the last line in the
      <code>
       [main]
      </code>
      section which begins with
      <code>
       templatedir
      </code>
      , as this is deprecated. Finally, change the line which reads
      <code>
       factpath=$vardir/lib/facter
      </code>
      to
      <code>
       factpath=$confdir/facter
      </code>
      instead.
      <code>
       $confdir
      </code>
      is equivalent to
      <code>
       /etc/puppet/
      </code>
      , i.e. our Puppet repository.
     </p>
     <p>
      Here is what your
      <code>
       puppet.conf
      </code>
      should look like once you're finished with the above changes.
     </p>
     <div class="code-label " title="Modified /etc/puppet/puppet.conf">
      Modified /etc/puppet/puppet.conf
     </div>
     <pre class="code-pre ">
      <code langs="">
       [main]
logdir=/var/log/puppet
vardir=/var/lib/puppet
ssldir=/var/lib/puppet/ssl
rundir=/var/run/puppet
factpath=$confdir/facter
      </code>
     </pre>
     <h2 id="step-6--adding-a-puppet-module">
      Step 6  Adding a Puppet Module
     </h2>
     <p>
      Now Puppet is set up, but it's not doing any work. The way Puppet works is by looking at files called manifests that define what it should do, so in this step, we'll create a useful module for Puppet to run.
     </p>
     <p>
      Our first module, which we will call cron-puppet, will deploy Puppet via Git. It'll install a Git hook that will run Puppet after a successful merge (e.g. git pull), and it'll install a cron job to perform a
      <code>
       git pull
      </code>
      every 30 minutes.
     </p>
     <p>
      First, move into the Puppet modules directory.
     </p>
     <pre class="code-pre command">
      <code langs="">
       <ul class="prefixed">
        <li class="line" prefix="$">
         cd /etc/puppet/modules
        </li>
       </ul>
      </code>
     </pre>
     <p>
      Next, make a
      <code>
       cron-puppet
      </code>
      directory containing
      <code>
       manifests
      </code>
      and
      <code>
       files
      </code>
      directories.
     </p>
     <pre class="code-pre command">
      <code langs="">
       <ul class="prefixed">
        <li class="line" prefix="$">
         sudo mkdir -p cron-puppet/manifests cron-puppet/files
        </li>
       </ul>
      </code>
     </pre>
     <p>
      Create and open a file called
      <code>
       init.pp
      </code>
      in the
      <code>
       manifests
      </code>
      directory.
     </p>
     <pre class="code-pre command">
      <code langs="">
       <ul class="prefixed">
        <li class="line" prefix="$">
         sudo nano cron-puppet/manifests/init.pp
        </li>
       </ul>
      </code>
     </pre>
     <p>
      Copy the following code into
      <code>
       init.pp
      </code>
      . This is what tells Puppet to pull from Git every half hour.
     </p>
     <div class="code-label " title="init.pp">
      init.pp
     </div>
     <pre class="code-pre ">
      <code langs="">
       class cron-puppet {
    file { 'post-hook':
        ensure  =&gt; file,
        path    =&gt; '/etc/puppet/.git/hooks/post-merge',
        source  =&gt; 'puppet:///modules/cron-puppet/post-merge',
        mode    =&gt; 0755,
        owner   =&gt; root,
        group   =&gt; root,
    }
    cron { 'puppet-apply':
        ensure  =&gt; present,
        command =&gt; "cd /etc/puppet ; /usr/bin/git pull",
        user    =&gt; root,
        minute  =&gt; '*/30',
        require =&gt; File['post-hook'],
    }
}
      </code>
     </pre>
     <p>
      Save and close the file, then open another file called
      <code>
       post-merge
      </code>
      in the
      <code>
       files
      </code>
      directory.
     </p>
     <pre class="code-pre command">
      <code langs="">
       <ul class="prefixed">
        <li class="line" prefix="$">
         sudo nano cron-puppet/files/post-merge
        </li>
       </ul>
      </code>
     </pre>
     <p>
      Copy the following bash script into
      <code>
       post-merge
      </code>
      . This bash script will run after a successful Git merge, and logs the result of the run.
     </p>
     <div class="code-label " title="post-merge">
      post-merge
     </div>
     <pre class="code-pre ">
      <code class="code-highlight language-bash">
       #!/bin/bash -e
## Run Puppet locally using puppet apply
/usr/bin/puppet apply /etc/puppet/manifests/site.pp

## Log status of the Puppet run
if [ $? -eq 0 ]
then
    /usr/bin/logger -i "Puppet has run successfully" -t "puppet-run"
    exit 0
else
    /usr/bin/logger -i "Puppet has ran into an error, please run Puppet manually" -t "puppet-run"
    exit 1
fi
      </code>
     </pre>
     <p>
      Save and close this file
     </p>
     <p>
      Finally, we have to tell Puppet to run this module by creating a global manifest, which is canonically found at
      <code>
       /etc/puppet/manifests/site.pp
      </code>
      .
     </p>
     <pre class="code-pre command">
      <code langs="">
       <ul class="prefixed">
        <li class="line" prefix="$">
         sudo nano /etc/puppet/manifests/site.pp
        </li>
       </ul>
      </code>
     </pre>
     <p>
      Paste the following into
      <code>
       site.pp
      </code>
      . This creates a node classification called 'default'. Whatever is included in the 'default' node will be run on every server. Here, we tell it to run our
      <code>
       cron-puppet
      </code>
      module.
     </p>
     <div class="code-label " title="site.pp">
      site.pp
     </div>
     <pre class="code-pre ">
      <code langs="">
       node default {
    include cron-puppet
}
      </code>
     </pre>
     <p>
      Save and close the file. Now, let's make sure our module works by running it.
     </p>
     <pre class="code-pre command">
      <code langs="">
       <ul class="prefixed">
        <li class="line" prefix="$">
         sudo puppet apply /etc/puppet/manifests/site.pp
        </li>
       </ul>
      </code>
     </pre>
     <p>
      After a successful run you should see some output ending with a line like this.
     </p>
     <pre class="code-pre ">
      <code langs="">
       ...

Notice: Finished catalog run in 0.18 seconds
      </code>
     </pre>
     <p>
      Finally, let's commit our changes to the Git repository. First, log in as the root user, because that is the user with SSH key access to the repository.
     </p>
     <p>
      Next, change to the
      <code>
       /etc/puppet
      </code>
      directory.
     </p>
     <pre class="code-pre command">
      <code langs="">
       <ul class="prefixed">
        <li class="line" prefix="$">
         cd /etc/puppet
        </li>
       </ul>
      </code>
     </pre>
     <p>
      Add everything in that directory to the commit.
     </p>
     <pre class="code-pre command">
      <code langs="">
       <ul class="prefixed">
        <li class="line" prefix="$">
         git add .
        </li>
       </ul>
      </code>
     </pre>
     <p>
      Commit the changes with a descriptive message.
     </p>
     <pre class="code-pre command">
      <code langs="">
       <ul class="prefixed">
        <li class="line" prefix="$">
         git commit -m "
         <span class="highlight">
          Added the cron-puppet module
         </span>
         "
        </li>
       </ul>
      </code>
     </pre>
     <p>
      Finally, push the changes.
     </p>
     <pre class="code-pre command">
      <code langs="">
       <ul class="prefixed">
        <li class="line" prefix="$">
         git push -u origin master
        </li>
       </ul>
      </code>
     </pre>
     <h2 id="conclusion">
      Conclusion
     </h2>
     <p>
      To add more servers, simply follow step 3 above to install Puppet and Git on the new server, then clone the Git repository to
      <code>
       /etc/puppet
      </code>
      and apply the
      <code>
       site.pp
      </code>
      manifest.
     </p>
     <p>
      You can even automate this installation by using
      <a href="https://www.digitalocean.com/community/tutorials/an-introduction-to-droplet-metadata">
       user data
      </a>
      when you create a Droplet. Make sure you use an SSH key when you create the Droplet, and have that SSH key added to your GitLab server. Then just tick the
      <strong>
       Enable User Data
      </strong>
      checkbox on the Droplet creation screen and enter the following bash script, replacing the variables highlighted in red with your own.
     </p>
     <pre class="code-pre ">
      <code class="code-highlight language-bash">
       #!/bin/bash -e

## Install Git and Puppet
wget -O /tmp/puppetlabs.deb http://apt.puppetlabs.com/puppetlabs-release-`lsb_release -cs`.deb
dpkg -i /tmp/puppetlabs.deb
apt-get update
apt-get -y install git-core puppet

# Clone the 'puppet' repo
cd /etc
mv puppet/ puppet-bak
git clone http://
       <span class="highlight">
        your_git_server_ip
       </span>
       /
       <span class="highlight">
        username
       </span>
       /puppet.git /etc/puppet

# Run Puppet initially to set up the auto-deploy mechanism
puppet apply /etc/puppet/manifests/site.pp
      </code>
     </pre>
     <p>
      That's all! You now have a masterless Puppet system, and can spin up any number of additional servers without even having to log in to them.
     </p>
    </div>
   </div>
   <div class="tutorial-footer">
    <div class="tutorial-footer-details">
     <div class="section-content tutorial-public-actions">
      <div class="upvotes upvoted tutorial-upvote large-upvotes">
       <form accept-charset="UTF-8" action="/community/upvotes/toggle?upvote%5Bupvotable_id%5D=1580&amp;upvote%5Bupvotable_type%5D=Tutorial" class="upvote-form upvote signed-out-upvote" data-remote="true" data-upvotable="tutorial_1580" data-upvotable-type="tutorial" method="post">
        <input name="utf8" type="hidden" value=""/>
        <input name="_method" type="hidden" value="patch"/>
        <input name="authenticity_token" type="hidden" value="KC72Re5qvRFNHIUiy9lQWqEfPS4Xa11+u6OQ/LQusM5xotYodgs4QiG+YSXUGDstZ28C2gTLPhEqtj0AaWwTqw=="/>
        <button data-target="#sign-in-modal" data-toggle="modal" disabled="disabled" type="submit">
         <span class="icon-upvote-heart-small upvote-heart" data-placement="top" data-return-url="" data-target="#sign-in-modal" data-toggle="modal" title="Do you find this post helpful? Show the author by Hearting it!">
         </span>
        </button>
       </form>
       <span class="upvote-text">
        <span class="hearted-text">
         Hearted
        </span>
        <span class="heart-text">
         Heart
        </span>
       </span>
       <div class="upvote-count ">
        7
       </div>
      </div>
      <div class="share-subscribe-actions">
       <span class="meta-section opt-in-switch off signed-out-subscribe">
        <span class="meta-label subscribe-label">
         <span class="subscription-label subscribe">
          Subscribe
         </span>
         <span class="subscription-label subscribed">
          Subscribed
         </span>
        </span>
        <span class="meta-value">
         <a class="mini-switch-container" data-target="#sign-in-modal" data-toggle="modal" href="javascript:void(0);">
          <div class="mini-switch off signed-out-subscribe">
           <div class="switch-handle">
           </div>
          </div>
         </a>
        </span>
       </span>
       <div class="sharing">
        <a class="share-button" data-target="#share-modal" data-toggle="modal" href="#">
         <span class="icon icon-share-square">
         </span>
         Share
        </a>
       </div>
      </div>
     </div>
     <div class="section-content tutorial-contributors two">
      <div class="tutorial-footer-user">
       <a href="/community/users/michaelholley">
        <img alt="2bead7b7d80a88d147750a6839177311eae3cda7" class="avatar avatar-small" src="https://community-cdn-digitalocean-com.global.ssl.fastly.net/assets/users/avatars/small/2bead7b7d80a88d147750a6839177311eae3cda7.png?1421722188"/>
       </a>
       <div class="user-info">
        <div class="tutorial-user-type">
         Author:
        </div>
        <a href="/community/users/michaelholley">
         Michael Holley
        </a>
       </div>
      </div>
      <div class="tutorial-footer-user">
       <a href="/community/users/hazelnut">
        <img alt="6cbcddbff2a699eb6c34ad6c4ca1a211b4e173a0" class="avatar avatar-small" src="https://community-cdn-digitalocean-com.global.ssl.fastly.net/assets/users/avatars/small/6cbcddbff2a699eb6c34ad6c4ca1a211b4e173a0.jpg?1433266832"/>
       </a>
       <div class="user-info">
        <div class="tutorial-user-type">
         Editor:
        </div>
        <a class="" href="/community/users/hazelnut">
         Hazel Vird
        </a>
       </div>
      </div>
     </div>
    </div>
    <div class="tutorial-ctas">
     <div class="section-content">
      <div class="cta-description">
       <h2>
        Spin up an SSD cloud server in under a minute.
       </h2>
       <p>
        Simple setup. Full root access. Straightforward pricing.
       </p>
       <a class="cloud-tutorial-cta" href="https://www.digitalocean.com/?utm_medium=community&amp;utm_source=community_gencta&amp;utm_campaign=needaserver&amp;utm_content=how-to-set-up-a-masterless-puppet-environment-on-ubuntu-14-04">
        Deploy Server
       </a>
      </div>
     </div>
    </div>
    <div class="related-tutorials">
     <div class="section-content">
      <h2>
       Related Tutorials
      </h2>
      <ul>
       <li>
        <a class="related-link" href="/community/tutorials/how-to-install-puppet-on-a-digitalocean-vps">
         How To Install Puppet on a DigitalOcean VPS
        </a>
       </li>
       <li>
        <a class="related-link" href="/community/tutorials/how-to-automate-installing-wordpress-on-ubuntu-14-04-using-ansible">
         How To Automate Installing WordPress on Ubuntu 14.04 Using Ansible
        </a>
       </li>
       <li>
        <a class="related-link" href="/community/tutorials/how-to-install-and-configure-ansible-on-ubuntu-14-04">
         How to Install and Configure Ansible on Ubuntu 14.04
        </a>
       </li>
       <li>
        <a class="related-link" href="/community/tutorials/how-to-set-up-a-chef-12-configuration-management-system-on-ubuntu-14-04-servers">
         How To Set Up a Chef 12 Configuration Management System on Ubuntu 14.04 Servers
        </a>
       </li>
       <li>
        <a class="related-link" href="/community/tutorials/how-to-automatically-add-new-droplets-to-your-configuration-management-system">
         How To Automatically Add New Droplets to your Configuration Management System
        </a>
       </li>
      </ul>
     </div>
    </div>
   </div>
   <div class="content-comments">
    <div class="section-content">
     <div class="tutorial commentable" id="tutorial_1580">
      <div class="comments-header">
       <h4 class="comments-count">
        <span>
         2 Comments
        </span>
       </h4>
      </div>
      <div class="response no-avatar response-form">
       <div class="js-display-on-error flash error hidden">
       </div>
       <form accept-charset="UTF-8" action="/community/tutorials/how-to-set-up-a-masterless-puppet-environment-on-ubuntu-14-04/comments" class="content-form disabled-form" data-remote="true" id="new_comment" method="post">
        <input name="utf8" type="hidden" value=""/>
        <textarea class="js-comment-content tutorial-comment-field" data-markdown="true" id="comment_content" name="comment[content]" placeholder="Leave a comment...">
        </textarea>
        <div class="log-in-notice ">
         <a href="/community/auth/digitalocean">
          Log In to Comment
         </a>
        </div>
        <div class="clearfix">
        </div>
       </form>
      </div>
      <div class="comments">
       <ul class="response-list">
        <a class="js-click-on-load hidden" data-remote="true" href="/community/tutorials/how-to-set-up-a-masterless-puppet-environment-on-ubuntu-14-04/comments" rel="nofollow">
         Load
        </a>
       </ul>
       <div class="comments-spinner">
        <div class="spinner spinner-large">
         <div class="bounce1">
         </div>
         <div class="bounce2">
         </div>
         <div class="bounce3">
         </div>
        </div>
       </div>
      </div>
      <div class="load-more-container">
      </div>
     </div>
    </div>
   </div>
   <div class="creative-commons">
    <a class="creative-commons-image" href="https://creativecommons.org/licenses/by-nc-sa/4.0/">
     <img alt="Creative Commons License" rel="license" src="/assets/community/creativecommons-73205ed249d4b5109a7905503766d325.png"/>
    </a>
    <div class="license-text">
     This work is licensed under a
     <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/" rel="license">
      Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License
     </a>
     .
    </div>
   </div>
   <div class="clearfix">
   </div>
  </div>
  <footer class="footer">
   <div class="footer-icon">
    <span class="icon icon-sammy">
    </span>
   </div>
   <div class="copyright">
    Copyright  2015 DigitalOcean Inc.
   </div>
   <ul class="main-nav-links">
    <li>
     <a href="/community">
      Community
     </a>
    </li>
    <li>
     <a href="/community/tutorials">
      Tutorials
     </a>
    </li>
    <li>
     <a href="/community/questions">
      Questions
     </a>
    </li>
    <li>
     <a href="/community/projects">
      Projects
     </a>
    </li>
    <li>
     <a href="/community/tags">
      Tags
     </a>
    </li>
   </ul>
   <br/>
   <ul class="secondary-nav-links">
    <li>
     <a href="https://www.digitalocean.com/legal/terms/">
      Terms, Privacy, &amp; Copyright
     </a>
    </li>
    <li>
     <a href="https://www.digitalocean.com/security/">
      Security
     </a>
    </li>
    <li>
     <a href="/community/get-paid-to-write">
      Get Paid to Write
     </a>
    </li>
   </ul>
  </footer>
  <div class="modal fade mini-modal" id="sign-in-modal" style="display: none;">
   <div class="modal-dialog">
    <div class="modal-content">
     <div class="modal-header">
      <h1>
       Sign Up
      </h1>
      <a class="close-button" data-dismiss="modal" href="">
       <span class="icon icon-close-light">
       </span>
      </a>
     </div>
     <div class="modal-body">
      <div class="sign-in-message">
       Not so fast, you must have an account before you can do that.
      </div>
      <div class="sign-in-modal-actions">
       <a class="sign-in-link button blue-button" data-default-url="/community/auth/digitalocean" href="/community/auth/digitalocean">
        Log In
       </a>
       <a class="sign-up-link button green-button" data-default-url="/community/auth/digitalocean?display=sessionless+register" href="/community/auth/digitalocean?display=sessionless+register">
        Sign Up
       </a>
      </div>
     </div>
    </div>
   </div>
  </div>
  <script>
   $(function() {
      init_sharing();
    });
  </script>
 </body>
</html>