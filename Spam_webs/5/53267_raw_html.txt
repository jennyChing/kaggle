<!DOCTYPE html>
<html lang="en" xmlns:fb="http://ogp.me/ns/fb#">
 <head>
  <title>
   An Arduino Guide - Getting Started For Beginners
  </title>
  <meta charset="utf-8"/>
  <meta content="IE=edge,chrome=1" http-equiv="X-UA-Compatible"/>
  <meta content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" name="viewport"/>
  <link href="http://cdn.makeuseof.com/wp-content/themes/makeuseof2015/css/main.css?f35dd4" rel="stylesheet"/>
  <link href="http://feeds.feedburner.com/makeuseof" rel="alternate" title="RSS" type="application/rss+xml"/>
  <meta content="526592050701370" property="fb:app_id"/>
  <link href="https://plus.google.com/112975774125810216140/" rel="publisher"/>
  <!-- include g+ profiles in search results-->
  <!-- UNIVERSAL Google Analytics -->
  <script>
   (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-730874-1', 'auto');
    ga('require', 'displayfeatures');


            ga('set','dimension1','2013 July');
        ga('set','dimension2','Brad Kendall');

                    ga('set','dimension3','regular');
            ga('set','dimension4',60);
        
        
            ga('send', 'pageview');
  </script>
  <!-- End Google Analytics -->
  <!--Sitesearch links for Google SERPs - ONLY on homepage, as recommended by google-->
  <!-- end SiteSearch Schema Markup -->
  <link href="http://cdn.makeuseof.com/wp-content/themes/makeuseof2015/images/favicon/apple-touch-icon-57x57.png?f35dd4" rel="apple-touch-icon" sizes="57x57"/>
  <link href="http://cdn.makeuseof.com/wp-content/themes/makeuseof2015/images/favicon/apple-touch-icon-114x114.png?f35dd4" rel="apple-touch-icon" sizes="114x114"/>
  <link href="http://cdn.makeuseof.com/wp-content/themes/makeuseof2015/images/favicon/apple-touch-icon-72x72.png?f35dd4" rel="apple-touch-icon" sizes="72x72"/>
  <link href="http://cdn.makeuseof.com/wp-content/themes/makeuseof2015/images/favicon/apple-touch-icon-144x144.png?f35dd4" rel="apple-touch-icon" sizes="144x144"/>
  <link href="http://cdn.makeuseof.com/wp-content/themes/makeuseof2015/images/favicon/apple-touch-icon-60x60.png?f35dd4" rel="apple-touch-icon" sizes="60x60"/>
  <link href="http://cdn.makeuseof.com/wp-content/themes/makeuseof2015/images/favicon/apple-touch-icon-120x120.png?f35dd4" rel="apple-touch-icon" sizes="120x120"/>
  <link href="http://cdn.makeuseof.com/wp-content/themes/makeuseof2015/images/favicon/apple-touch-icon-152x152.png?f35dd4" rel="apple-touch-icon" sizes="152x152"/>
  <link href="http://cdn.makeuseof.com/wp-content/themes/makeuseof2015/images/favicon/apple-touch-icon-180x180.png?f35dd4" rel="apple-touch-icon" sizes="180x180"/>
  <link href="http://cdn.makeuseof.com/wp-content/themes/makeuseof2015/images/favicon/favicon-192x192.png?f35dd4" rel="icon" sizes="192x192" type="image/png"/>
  <link href="http://cdn.makeuseof.com/wp-content/themes/makeuseof2015/images/favicon/favicon-160x160.png?f35dd4" rel="icon" sizes="160x160" type="image/png"/>
  <link href="http://cdn.makeuseof.com/wp-content/themes/makeuseof2015/images/favicon/favicon-96x96.png?f35dd4" rel="icon" sizes="96x96" type="image/png"/>
  <link href="http://cdn.makeuseof.com/wp-content/themes/makeuseof2015/images/favicon/favicon-16x16.png?f35dd4" rel="icon" sizes="16x16" type="image/png"/>
  <link href="http://cdn.makeuseof.com/wp-content/themes/makeuseof2015/images/favicon/favicon-32x32.png?f35dd4" rel="icon" sizes="32x32" type="image/png"/>
  <meta content="#da532c" name="msapplication-TileColor"/>
  <meta content="http://cdn.makeuseof.com/wp-content/themes/makeuseof2015/images/favicon/mstile-144x144.png?f35dd4" name="msapplication-TileImage"/>
  <!--Wordpress Header-->
  <!-- Push notifications for this website enabled by Roost. Support for Chrome, Safari, and Firefox. (v 2.3.2) - https://goroost.com/ -->
  <!-- This site is optimized with the Yoast WordPress SEO plugin v1.7.4 - https://yoast.com/wordpress/plugins/seo/ -->
  <meta content="This Arduino guide can help if you've never played with an Arduino before, but you want to learn what it's all about. Start building Arduino projects today!" name="description"/>
  <link href="http://www.makeuseof.com/tag/getting-started-with-arduino-a-beginners-guide/" rel="canonical"/>
  <meta content="summary" name="twitter:card"/>
  <meta content="This Arduino guide can help if you've never played with an Arduino before, but you want to learn what it's all about. Start building Arduino projects today!" name="twitter:description"/>
  <meta content="An Arduino Guide - Getting Started For Beginners" name="twitter:title"/>
  <meta content="@makeuseof" name="twitter:site"/>
  <meta content="MakeUseOf" name="twitter:domain"/>
  <meta content="http://cdn.makeuseof.com/wp-content/uploads/2014/07/f473e34fcc3f0182df96387cd6298717.jpg?f35dd4" name="twitter:image:src"/>
  <meta content="@makeuseof" name="twitter:creator"/>
  <meta content="http://www.makeuseof.com/tag/getting-started-with-arduino-a-beginners-guide/" name="twitter:url"/>
  <!-- / Yoast WordPress SEO plugin. -->
  <style media="screen" type="text/css">
   html { margin-top: 0px !important; }
      * html body { margin-top: 0px !important; }
  </style>
  <!--/Wordpress Header-->
  <!-- Facebook Opengraph AND Twitter Whatever -->
  <meta content="Getting Started With Arduino: A Beginners Guide" name="twitter:title"/>
  <meta content="http://www.makeuseof.com/tag/getting-started-with-arduino-a-beginners-guide/" name="twitter:url"/>
  <meta content="@MakeUseOf" name="twitter:site"/>
  <meta content=" Table Of Contents 1Intro to the Arduino 2What Can You Do With an Arduino? 3What Is Inside an Arduino? 4What You Will Need For This Guide 5Electrical Component Overview 6Programming Overview 7Setting Up Your Arduino 8Starter Projects 9Where to go From Here 1. Intro to the Arduino Arduino is an open-source electronics prototyping platform" name="twitter:description"/>
  <meta content="http://cdn.makeuseof.com/wp-content/uploads/2014/07/f473e34fcc3f0182df96387cd6298717-709x381.jpg?f35dd4" name="twitter:image"/>
  <meta content="summary" name="twitter:card"/>
  <meta content="http://cdn.makeuseof.com/wp-content/uploads/2014/07/f473e34fcc3f0182df96387cd6298717-709x381.jpg?f35dd4" name="thumbnail"/>
  <meta content="https://www.facebook.com/makeuseof" property="article:publisher"/>
  <meta content="Getting Started With Arduino: A Beginners Guide" property="og:title"/>
  <meta content="http://www.makeuseof.com/tag/getting-started-with-arduino-a-beginners-guide/" property="og:url"/>
  <meta content="MakeUseOf" property="og:site_name"/>
  <meta content="article" property="og:type"/>
  <meta content=" Table Of Contents 1Intro to the Arduino 2What Can You Do With an Arduino? 3What Is Inside an Arduino? 4What You Will Need For This Guide 5Electrical Component Overview 6Programming Overview 7Setting Up Your Arduino 8Starter Projects 9Where to go From Here 1. Intro to the Arduino Arduino is an open-source electronics prototyping platform" property="og:description"/>
  <meta content="http://cdn.makeuseof.com/wp-content/uploads/2014/07/f473e34fcc3f0182df96387cd6298717-709x381.jpg?f35dd4" property="og:image"/>
  <meta content="on" name="twitter:widgets:csp"/>
  <script type="text/javascript">
   var googletag = googletag || {};
googletag.cmd = googletag.cmd || [];
(function() {
var gads = document.createElement('script');
gads.async = true;
gads.type = 'text/javascript';
var useSSL = 'https:' == document.location.protocol;
gads.src = (useSSL ? 'https:' : 'http:') +
'//www.googletagservices.com/tag/js/gpt.js';
var node = document.getElementsByTagName('script')[0];
node.parentNode.insertBefore(gads, node);
})();
  </script>
  <script src="//ad.idgtn.net/tnc.js?f35dd4" type="text/javascript">
  </script>
  <script type="text/javascript">
   googletag.cmd.push(function() {
var mapping = googletag.sizeMapping().addSize([1050, 200], [728, 90]).addSize([0, 0], [300,600]).build();var mapping_no_mobile = googletag.sizeMapping().addSize([1050, 200], [728, 90]).addSize([0, 0], []).build();googletag.defineSlot('/1065821/Footer-Ledderboard-728x90-468x60', [728, 90], 'div-gpt-ad-1360132638304-0').defineSizeMapping(mapping).addService(googletag.pubads());googletag.defineSlot('/1065821/Premium_1x1', [1, 1], 'div-gpt-ad-1434132493076-0').addService(googletag.pubads());googletag.defineSlot('/1065821/Sidebar-Second_Middle-300x250', [300, 250], 'div-gpt-ad-1411482584935-0').addService(googletag.pubads());googletag.defineSlot('/1065821/Sidebar-Third_Middle-300x250', [300, 250], 'div-gpt-ad-1436298895171-0').addService(googletag.pubads());googletag.pubads().collapseEmptyDivs();googletag.defineSlot('/1065821/SidebarTop300x600Only', [300, 600], 'div-gpt-ad-1411485984007-0').addService(googletag.pubads());googletag.defineSlot('/1065821/Sidebar-top-300x600-300x250', [300, 250], 'div-gpt-ad-1411482340693-0').addService(googletag.pubads());googletag.defineSlot('/1065821/Sidebar-Middle-300x250', [300, 250], 'div-gpt-ad-1411482473332-0').addService(googletag.pubads());googletag.defineSlot('/1065821/Sidebar-bottom-300x600-300x250', [300, 250], 'div-gpt-ad-1411482649292-0').addService(googletag.pubads());
googletag.pubads().setTargeting("category",["diy-projects"]);
googletag.pubads().enableSingleRequest();
googletag.enableServices();

			});
  </script>
  <script src="http://cdn.makeuseof.com/wp-content/themes/makeuseof2015/js/head_script.js?f35dd4">
  </script>
 </head>
 <body class="single single-post postid-361662 single-format-standard">
  <div class="with_menu" id="site">
   <script type="text/javascript">
    if (get_cookie('showMenu') == null || get_cookie('showMenu') == 0 || isMobile.any) {
                document.getElementById("site").className = "";
            }
   </script>
   <div id="content">
    <header id="header">
     <div id="logo" itemscope="" itemtype="http://schema.org/Organization">
      <a href="http://www.makeuseof.com" itemprop="url">
       <img alt="" itemprop="logo" src="http://www.makeuseof.com/wp-content/themes/makeuseof2015/img/logo.svg?f35dd4"/>
      </a>
     </div>
     <div class="searchform">
      <form action="//www.makeuseof.com/search/" id="searcher">
       <input name="cx" type="hidden" value="009717636731598800244:qhe4rh7wuxs"/>
       <input name="cof" type="hidden" value="FORID:11"/>
       <input id="q" name="q" speech="true" type="search" x-webkit-speech="true"/>
       <div class="butt">
       </div>
       <button class="searchSite" id="searchsubmit" name="sa" type="submit" value="Search">
       </button>
      </form>
     </div>
     <script defer="" src="//www.google.com/coop/cse/brand?form=cse-search-box&amp;lang=en" type="text/javascript">
     </script>
     <div class="menu">
      <div class="icon">
      </div>
      <div class="name">
       Menu
      </div>
      <div class="category">
       <a href="http://www.makeuseof.com/service/diy-projects/">
        <span class="icon-diy-projects">
         DIY
        </span>
       </a>
      </div>
     </div>
     <div class="hint closed">
      Smart Menu
      <div class="close">
      </div>
     </div>
    </header>
    <div id="wrapper">
     <div class="container ">
      <div class="leftcol">
       <div class="blc_post fade" itemscope="" itemtype="http://schema.org/Article">
        <h1 itemprop="headline">
         Getting Started With Arduino: A Beginners Guide
        </h1>
        <div class="entry">
         <div class="author">
          <a href="http://www.makeuseof.com/tag/author/brad/">
           <img alt="" class="avatar-37 photo" src="http://1.gravatar.com/avatar/b53af25845e6786cafa63a6823129166?s=37&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D37&amp;r=G"/>
           <span class="name">
            Written by
            <span itemprop="author">
             Brad Kendall
            </span>
           </span>
           <span class="date">
            <time itemprop="datePublished">
             July 25, 2013
            </time>
           </span>
          </a>
         </div>
         <div class="splash_sharing">
         </div>
         <div class="show_sharing">
         </div>
         <div class="sharing addthis_toolbox addthis_default_style addthis_32x32_style" data-title="Getting Started With Arduino: A Beginners Guide" data-url="http://www.makeuseof.com/tag/getting-started-with-arduino-a-beginners-guide/">
          <ul>
           <li class="s_bookmark ">
            <a href="#" title="Bookmark this article">
            </a>
           </li>
           <li class="s_print">
            <a href="#" onclick="if(window.print)window.print();" title="Print">
            </a>
           </li>
           <li class="s_email">
            <a href="mailto:?body=http://www.makeuseof.com/tag/getting-started-with-arduino-a-beginners-guide/&amp;subject=Getting Started With Arduino: A Beginners Guide " target="_blank" title="Email">
            </a>
           </li>
           <li class="s_sharing">
            <span class="toggle-socials" title="Share">
            </span>
            <div class="socials">
             <a class="s_facebook" data-social="facebook" href="#">
             </a>
             <a class="s_twitter" data-social="twitter" href="#">
             </a>
             <a class="s_whatsapp" data-social="whatsapp" href="#">
             </a>
             <a class="s_gplus" data-social="gplus" href="#">
             </a>
             <a class="s_pinterest" data-social="pinterest" href="#">
             </a>
            </div>
            <div id="mobile_splash">
            </div>
           </li>
          </ul>
         </div>
         <div class="single_featured_image">
          <img alt="Getting Started With Arduino: A Beginners Guide" src="http://cdn.makeuseof.com/wp-content/uploads/2014/07/f473e34fcc3f0182df96387cd6298717-644x250.jpg?f35dd4"/>
         </div>
         <div class="article_body" itemprop="articleBody">
          <div class="ad-unit-post">
           <div class="ad-unit-post" id="adsense1">
            <small>
             <a href="https://support.google.com/adsense/troubleshooter/1631343?url=http%3A%2F%2Fwww.makeuseof.com%2Ftag%2Fgetting-started-with-arduino-a-beginners-guide%2F&amp;client=ca-pub-9894449314507324" style="color:LightGray">
              Ads by Google
             </a>
            </small>
            <script type="text/javascript">
             adUnit   = document.getElementById("adsense1"); 							adWidth  = adUnit.offsetWidth;  							google_ad_client = "ca-pub-9894449314507324"; 							google_ad_slot = "3092450298"; 						    google_override_format = true; 						    google_ad_width = adWidth; 						    google_ad_height = 210; 						    google_font_face = 'verdana'; 						    google_max_num_ads="3";
            </script>
            <script src="http://pagead2.googlesyndication.com/pagead/show_ads.js" type="text/javascript">
            </script>
           </div>
          </div>
          <p>
          </p>
          <h2 id="heading_id_2">
           Table Of Contents
          </h2>
          <p>
           <a href="#chapter-1">
            1Intro to the Arduino
           </a>
          </p>
          <p>
           <a href="#chapter-2">
            2What Can You Do With an Arduino?
           </a>
          </p>
          <p>
           <a href="#chapter-3">
            3What Is Inside an Arduino?
           </a>
          </p>
          <p>
           <a href="#chapter-4">
            4What You Will Need For This Guide
           </a>
          </p>
          <p>
           <a href="#chapter-5">
            5Electrical Component Overview
           </a>
          </p>
          <p>
           <a href="#chapter-6">
            6Programming Overview
           </a>
          </p>
          <div>
           <div class="ad-unit-post" id="adsense2">
            <small>
             <a href="https://support.google.com/adsense/troubleshooter/1631343?url=http%3A%2F%2Fwww.makeuseof.com%2Ftag%2Fgetting-started-with-arduino-a-beginners-guide%2F&amp;client=ca-pub-9894449314507324" style="color:LightGray">
              Ads by Google
             </a>
            </small>
            <script type="text/javascript">
             adUnit   = document.getElementById("adsense2");
              adWidth  = adUnit.offsetWidth;

              google_ad_client = "ca-pub-9894449314507324";
              /* CSI Article unit */
              google_ad_slot = "7522649890";
              google_override_format = true;
              google_ad_width  =  adWidth;
              google_ad_height  =  230;
              google_font_face =  'verdana';
              google_max_num_ads="4";

              //--&gt;
            </script>
            <script src="http://pagead2.googlesyndication.com/pagead/show_ads.js" type="text/javascript">
            </script>
           </div>
          </div>
          <p>
           <a href="#chapter-7">
            7Setting Up Your Arduino
           </a>
          </p>
          <p>
           <a href="#chapter-8">
            8Starter Projects
           </a>
          </p>
          <p>
           <a href="#chapter-9">
            9Where to go From Here
           </a>
          </p>
          <h2 id="heading_id_2">
           <a name="chapter-1">
           </a>
           <span>
            1.
           </span>
           Intro to the Arduino
          </h2>
          <p>
           Arduino is an open-source electronics prototyping platform based on flexible, easy-to use hardware and software. Its intended for artists, designers, hobbyists, and anyone interested in creating interactive objects or environments.
          </p>
          <p>
           Arduino can sense the environment by receiving input from a variety of sensors and can affect its surroundings by controlling lights, motors, and other actuators. The microcontroller on the board is programmed using the Arduino programming language and the Arduino Development Environment. Arduino projects can be stand-alone, or they can communicate with software running on a computer.
          </p>
          <div class="img-container">
           <img alt="" class="center" src="http://cdn.makeuseof.com/wp-content/uploads/2013/07/Arduino-1.1.jpg?f35dd4"/>
          </div>
          <p>
           There are plenty of other microcontrollers available. So you may be asking, why choose the Arduino? Arduino really simplifies the process of building projects on a microcontroller making it a great platform for amateurs. You can easily start working on one with no previous electronics experience.
          </p>
          <p>
           That is what this Arduino guide is about.
          </p>
          <p>
           In addition to Arduinos simplicity, it is also inexpensive, cross-platform and open source. The Arduino is based on Atmels ATMEGA8 and ATMEGA168 microcontrollers. The plans for the modules are published under a Creative Commons license, so experienced hobbyists and professionals can make their own version of the Arduino, extending it and improving it.
          </p>
          <p>
           Believe it or not,
           <a href="http://www.makeuseof.com/tag/dont-spend-money-on-an-arduino-build-your-own-for-much-less/">
            even relatively inexperienced users can build a version of the Arduino module on a breadboard
           </a>
           in order to understand how it works and save a little bit of money.
          </p>
          <h2 id="heading_id_2">
           <a name="chapter-2">
           </a>
           <span>
            2.
           </span>
           What Can You Do With an Arduino?
          </h2>
          <p>
           There is a lot you can do with an Arduino. An Arduino can basically do anything by interfacing sensors with a computer. This would allow you to take any sensor and have any action applied with the readings. For example (in one of our projects) we will read the level of light in a room and adjust an LEDs brightness to react based on that input. This of course is a simple example of what you can do with an Arduino. A more complicated example would be to read from multiple sensors and use that data to affect other outputs. Think of the possibility of wiring your house with all sorts of different sensors (photocells, oxygen sensors, thermometers) and having it adjust your blinds, air conditioner and furnace and make your house a more comfortable place.
          </p>
          <p>
           Hackers have used Arduinos to create some amazing electronics projects. Things like:
          </p>
          <ul>
           <li>
            Robots
           </li>
           <li>
            Breathalyzers
           </li>
           <li>
            Remote controlled cars
           </li>
           <li>
            3d printers
           </li>
           <li>
            Video games
           </li>
           <li>
            Home automation systems
           </li>
           <li>
            And much more. Read about more
            <a href="http://www.makeuseof.com/tag/arduino-technology-explained/">
             great examples of Arduino projects
            </a>
            .
           </li>
          </ul>
          <h2 id="heading_id_2">
           <a name="chapter-3">
           </a>
           <span>
            3.
           </span>
           What Is Inside an Arduino?
          </h2>
          <p>
           Although there are many different types of Arduino boards available, this manual focuses on the Arduino Uno. This is the most popular Arduino board around. So what makes this thing tick? Here are the specifications:
          </p>
          <ul>
           <li>
            Processor: 16 Mhz ATmega328
           </li>
           <li>
            Flash memory: 32 KB
           </li>
           <li>
            Ram: 2kb
           </li>
           <li>
            Operating Voltage: 5V
           </li>
           <li>
            Input Voltage: 7-12 V
           </li>
           <li>
            Number of analog inputs: 6
           </li>
           <li>
            Number of digital I/O: 14 (6 of them pwm)
           </li>
          </ul>
          <p>
           The specs may seem meager compared to your desktop computer, but remember that the Arduino is an embedded device. We have a lot less to process than your desktop.
          </p>
          <p>
           Another wonderful feature of the Arduino is the ability to use what are called Shields. Although we will not be covering shields in this manual, an Arduino shield will give you crazy functionality like you wouldnt believe. Check out this
           <a href="http://www.makeuseof.com/tag/the-top-4-arduino-shields-to-superpower-your-projects/">
            list of some really cool Arduino shields
           </a>
           to take your projects to the next level.
          </p>
          <h2 id="heading_id_2">
           <a name="chapter-4">
           </a>
           <span>
            4.
           </span>
           What You Will Need For This Guide
          </h2>
          <p>
           Below you will find a shopping list of the components we will use for this manual. All these components should come in under $50.00 USD. This listing should be enough to give you a good understanding of basic electronics and have enough components to build some pretty cool projects using this or any other Arduino guide.
          </p>
          <ul>
           <li>
            <a href="https://www.sparkfun.com/products/11021">
             1x Arduino Uno Microcontroller
            </a>
           </li>
           <li>
            <a href="https://www.sparkfun.com/products/512">
             1 x USB A-B Cable (same as your printer takes)
            </a>
           </li>
           <li>
            <a href="https://www.sparkfun.com/products/9567">
             1x Breadboard
            </a>
           </li>
           <li>
            <a href="https://www.sparkfun.com/products/10632">
             2 x LEDs
            </a>
           </li>
           <li>
            <a href="https://www.sparkfun.com/products/9088">
             1 x Photo Resistor
            </a>
           </li>
           <li>
            <a href="https://www.sparkfun.com/products/97">
             1 x Tactile Switch
            </a>
           </li>
           <li>
            <a href="https://www.sparkfun.com/products/11089">
             1 x Piezo Speaker
            </a>
           </li>
           <li>
            <a href="https://www.sparkfun.com/products/8374">
             1 x 10 k-Ohm Resistors
            </a>
           </li>
           <li>
            <a href="https://www.sparkfun.com/products/8980">
             1 x 2 k-Ohm Resistors
            </a>
           </li>
           <li>
            <a href="https://www.sparkfun.com/products/8980">
             2 x 1 K-Ohm Resistors
            </a>
           </li>
           <li>
            <a href="https://www.sparkfun.com/products/8431">
             1 x Jumper Wire Kit
            </a>
           </li>
          </ul>
          <h2 id="heading_id_2">
           <a name="chapter-5">
           </a>
           <span>
            5.
           </span>
           Electrical Component Overview
          </h2>
          <h3 id="heading_id_3">
           <span>
            5.1
           </span>
           What is a Breadboard?
          </h3>
          <p>
           Breadboards are blocks of plastic with holes into which wires can be inserted. The holes are connected electrically, so that wires stuck in the connected holes are also connected electrically.
          </p>
          <p>
           The connected holes are arranged in rows, in groups of five, so that up to five parts can be quickly connected just by plugging their leads into connected holes in the breadboard. When you want to rearrange a circuit, just pull the wire or part out of the hole, and move it or replace it. The breadboard I recommended also includes power and ground lanes on each side for easy power management.
          </p>
          <div class="img-container">
           <img alt="arduino guide" class="center" src="http://cdn.makeuseof.com/wp-content/uploads/2013/07/Arduino-5.1.jpg?f35dd4"/>
          </div>
          <h3 id="heading_id_4">
           <span>
            5.2
           </span>
           What is an LED?
          </h3>
          <p>
           An LED, short for Light Emitting Diode, is a semiconductor light source. LEDs are typically used as visual indicators. For instance, your new Arduino microcontroller has an LED on pin 13 that we frequently use to indicate an action or event.
          </p>
          <div class="img-container">
           <img alt="arduino tutorial" class="center" src="http://cdn.makeuseof.com/wp-content/uploads/2013/07/Arduino-5.2.jpg?f35dd4"/>
          </div>
          <h3 id="heading_id_5">
           <span>
            5.3
           </span>
           What is a Photo Resistor?
          </h3>
          <p>
           A photo resistor allows us to measure light by decreasing its resistance when it detects an increase of light intensity.
          </p>
          <div class="img-container">
           <img alt="" class="center" src="http://cdn.makeuseof.com/wp-content/uploads/2013/07/Arduino-5.3.jpg?f35dd4"/>
          </div>
          <h3 id="heading_id_6">
           <span>
            5.4
           </span>
           What is a Tactile Switch?
          </h3>
          <p>
           A tactile switch is an electric switch that controls the flow of electricity. When pressed, the switch completes the circuit. Basically, it is a button.
          </p>
          <div class="img-container">
           <img alt="arduino guide" class="center" src="http://cdn.makeuseof.com/wp-content/uploads/2013/07/Arduino-5.4.png?f35dd4"/>
          </div>
          <h3 id="heading_id_7">
           <span>
            5.5
           </span>
           What is a Piezo Speaker?
          </h3>
          <p>
           A piezo speaker is a single frequency beeper that converts an electrical signal into a tone. This will allow your Arduino to sing to you.
          </p>
          <div class="img-container">
           <img alt="" class="center" src="http://cdn.makeuseof.com/wp-content/uploads/2013/07/Arduino-5.5.png?f35dd4"/>
          </div>
          <h3 id="heading_id_8">
           <span>
            5.6
           </span>
           What is a Resistor?
          </h3>
          <p>
           A resistor is an electrical component that limits or regulates the flow of electricity.
          </p>
          <div class="img-container">
           <img alt="" class="center" src="http://cdn.makeuseof.com/wp-content/uploads/2013/07/Arduino-5.6.jpg?f35dd4"/>
          </div>
          <h3 id="heading_id_9">
           <span>
            5.7
           </span>
           What are Jumper Wires?
          </h3>
          <p>
           Jumper wires are short wires that are used for prototyping circuits. These are what you will use to connect the various components electrically to your Arduino.
          </p>
          <div class="img-container">
           <img alt="arduino tutorial" class="center" src="http://cdn.makeuseof.com/wp-content/uploads/2013/07/Arduino-5.7.jpg?f35dd4"/>
          </div>
          <h2 id="heading_id_2">
           <a name="chapter-6">
           </a>
           <span>
            6.
           </span>
           Programming Overview
          </h2>
          <p>
           If youre not too familiar with programming, this guide should get you used to some of the fundamentals. If youd like to learn more about Arduino-specific functions, http://www.arduino.cc/en/Reference/HomePage is an excellent resource.
          </p>
          <h3 id="heading_id_3">
           <span>
            6.1
           </span>
           Variables
          </h3>
          <p>
           A variable is defined as a quantity that can assume any of a set of values. In the Arduino programming language, variables have types associated with them, which provide the set of valid values the variable can hold. Some languages are not strict and allow a variable to hold nearly anything, but that is out of the scope of this manual.
          </p>
          <p>
           For example, a variable with type int can only hold integer values like 1 or 12, and not 12.5 or cats. Unfortunately, no variable is capable of holding a cat, something the programming world is quite upset about.
          </p>
          <p>
           Variables are an excellent resource, as they improve code readability and reuse, and are extremely convenient for use as temporary storage.
          </p>
          <p>
           Before using a variable, you must declare it. This merely lets the Arduino compiler know what data type your variable will hold.
          </p>
          <p>
           An example of a variable declaration is as follows:
          </p>
          <pre>
           int itemCount;
          </pre>
          <p>
           In this case, the variable will be of type int, and therefore will only accept integers.
          </p>
          <p>
           Here are a few example assignments and operations.
          </p>
          <pre>
           itemCount = 4;  itemCount = itemCount + 8; // itemCount now holds the value 12.  itemCount = "10"; // This will not compile.
          </pre>
          <h3 id="heading_id_4">
           <span>
            6.2
           </span>
           Functions
          </h3>
          <p>
           A function is essentially a group of instructions that perform a specific task. There are many built-in functions, such as digitalWrite() or tone(). In those cases, you dont necessarily have to see the code, but can still reap the benefits. You can also specify your own functions.
          </p>
          <p>
           The general form of a function is:
          </p>
          <pre>
           [return type] [function name] ({arguments})  {  [ Code to execute ]  }
          </pre>
          <p>
           Note that functions can return data, as illustrated by the function having a return type.
          </p>
          <p>
           In many cases, there is no data to return, and in that case, the keyword void would be used.
          </p>
          <p>
           The function name is a user-friendly handle to reference later (digitalWrite would be the function name for the digitalWrite function).
          </p>
          <p>
           A function can accept zero or more arguments. Each argument must be of the form [datatype] [identifier]. For example, if we called a function foo as such:
          </p>
          <pre>
           foo(10);
          </pre>
          <p>
           The function header for foo would have to look like:
          </p>
          <pre>
           void foo(int number)  {  }
          </pre>
          <p>
           In the function, code can reference number to retrieve the passed value. Outside of the function, number would be undefined.
          </p>
          <p>
           Say we want to write a function to multiply two numbers, for whatever reason. This function would look like:
          </p>
          <pre>
           int multiply(int num1, int num2)  {  int result;  result = num1 * num2;  return result;  }
          </pre>
          <p>
           Note that this could simply look like:
          </p>
          <pre>
           int multiply(int num1, int num2) { return num1 * num2; }
          </pre>
          <p>
           Its usually a good idea to be liberal with the use of spaces, as it makes for much easier debugging. To each their own, however.
          </p>
          <h3 id="heading_id_5">
           <span>
            6.3
           </span>
           Logic Overview
          </h3>
          <p>
           Youll often find yourself wanting to execute certain code under certain conditions. This will give you a quick overview of the logical operators you have to work with.
          </p>
          <p>
           First up, with the exception of the NOT operator, each logical operation takes two operands.
          </p>
          <h4 class="sigilNotInTOC" id="heading_id_6">
           ==  The Equals operator
          </h4>
          <p>
           This operator ensures that both operands are equal to one another. To test whether or not the operands are not equal to one another, use the != (not-equals) operator.
          </p>
          <p>
           Example:
          </p>
          <pre>
           4 == 4 (true)  4 == 5 (false)  4 != 5 (true)
          </pre>
          <h4 class="sigilNotInTOC" id="heading_id_7">
           &amp;&amp;  The AND operator
          </h4>
          <p>
           The AND operator is quite similar to the equals operator, except it does not evaluate to true when both operands are false.
          </p>
          <p>
           For example: (true &amp;&amp; true) evaluates to true, while (true &amp;&amp; false) and (false &amp;&amp; false) both evaluate to false.
          </p>
          <h4 class="sigilNotInTOC" id="heading_id_8">
           ||  The OR operator
          </h4>
          <p>
           The OR operator will evaluate to true so long as at least one of the two operands is true.
          </p>
          <p>
           The only time OR will evaluate to false is if both the operands are false.
          </p>
          <h4 class="sigilNotInTOC" id="heading_id_9">
           !  The NOT operator
          </h4>
          <p>
           This simply flips the truthiness of the operand specified. !false == true.
          </p>
          <h4 class="sigilNotInTOC" id="heading_id_10">
           Using Multiple Expressions
          </h4>
          <p>
           Sometimes youd like to have more than one test. Fortunately, since (as above), something like (false == true) will evaluate to false, nesting statements in brackets works, and the statements in brackets will be evaluated first.
          </p>
          <p>
           For example:
          </p>
          <pre>
           if (( a != b) &amp;&amp; (b &gt; 12))
          </pre>
          <p>
           a != b and b &gt; 12 will have to be evaluated first, as their outcome determines whether the entire logical expression is true.
          </p>
          <p>
           The past two sections should have given you enough basic knowledge to get started with our projects below. If it all seems a little complicated, dont worry. It will make a lot more sense when we apply it in a practical sense.
          </p>
          <h2 id="heading_id_2">
           <a name="chapter-7">
           </a>
           <span>
            7.
           </span>
           Setting Up Your Arduino
          </h2>
          <p>
           Before we can start on our projects, we first need to get your Arduino talking to your computer. We need to do this so you can compile and send code for your Arduino to execute.
          </p>
          <h3 id="heading_id_3">
           <span>
            7.1
           </span>
           Installing the Arduino IDE on Windows
          </h3>
          <h4 class="sigilNotInTOC" id="heading_id_4">
           Step 1: Download the Arduino software
          </h4>
          <p>
           Go to
           <a href="http://arduino.cc/en/Main/Software">
            http://arduino.cc/en/Main/Software
           </a>
           and download the Arduino Software for your Windows.
          </p>
          <div class="img-container">
           <img alt="arduino tutorial" class="center" src="http://cdn.makeuseof.com/wp-content/uploads/2013/07/Arduino-7.1.png?f35dd4"/>
          </div>
          <h4 class="sigilNotInTOC" id="heading_id_5">
           Step 2: Install the software
          </h4>
          <p>
           Install the Drivers:
          </p>
          <ul>
           <li>
            Plug in your board and wait for Windows to begin its driver installation process. After a few moments, the process will fail, despite its best efforts.
           </li>
           <li>
            Click on the Start Menu, and open up the Control Panel.
           </li>
           <li>
            While in the Control Panel, navigate to System and Security. Next, click on System. Once the System window is up, open the Device Manager.
           </li>
           <li>
            Look under Ports (COM &amp; LPT). You should see an open port named Arduino UNO (COMxx).
           </li>
           <li>
            Right click on the Arduino UNO (COMxx) port and choose the Update Driver Software option.
           </li>
           <li>
            Next, choose the Browse my computer for Driver software option.
           </li>
           <li>
            Finally, navigate to and select the Unos driver file, named ArduinoUNO.inf, located in the Drivers folder of the Arduino Software download.
           </li>
           <li>
            Windows will finish up the driver installation from there.
           </li>
          </ul>
          <div class="img-container">
           <img alt="arduino guide" class="center" src="http://cdn.makeuseof.com/wp-content/uploads/2013/07/Arduino-7.2.png?f35dd4"/>
          </div>
          <h3 id="heading_id_6">
           <span>
            7.2
           </span>
           Installing the Arduino IDE on Mac OS X
          </h3>
          <h4 class="sigilNotInTOC" id="heading_id_7">
           Step 1: Download the Arduino software
          </h4>
          <p>
           Go to
           <a href="http://arduino.cc/en/Main/Software">
            http://arduino.cc/en/Main/Software
           </a>
           and download the Arduino Software for your Mac OS X.
          </p>
          <h4 class="sigilNotInTOC" id="heading_id_10">
           Step 2: Install the software
          </h4>
          <p>
           The disk image (.dmg) should mount automatically. If it doesnt, double-click it. It should look like the following image.
          </p>
          <div class="img-container">
           <img alt="" class="center" src="http://cdn.makeuseof.com/wp-content/uploads/2013/07/Arduino-7.3.jpg?f35dd4"/>
          </div>
          <p>
           Copy the Arduino application into the Applications folder (or elsewhere on your computer). Since youre using an Arduino Uno, you dont have any drivers to install.
          </p>
          <h3 id="heading_id_8">
           <span>
            7.3
           </span>
           Installing the Arduino IDE on Ubuntu/ Linux
          </h3>
          <p>
           Install gcc-avr and avr-libc
          </p>
          <pre>
           sudo apt-get install gcc-avr avr-libc
          </pre>
          <p>
           If you dont have openjdk-6-jre already, install and configure that too:
          </p>
          <pre>
           sudo apt-get install openjdk-6-jre  sudo update-alternatives --config java
          </pre>
          <p>
           Select the correct JRE if you have more than one installed.
          </p>
          <p>
           Go to
           <a href="http://arduino.cc/en/Main/Software">
            http://arduino.cc/en/Main/Software/
           </a>
           and download the Arduino Software for Linux. You can untar and run it with the following command:
          </p>
          <pre>
           tar xzvf arduino-x.x.x-linux64.tgz  cd arduino-1.0.1  ./arduino
          </pre>
          <h3 id="heading_id_9">
           <span>
            7.4
           </span>
           Running the Arduino Software
          </h3>
          <p>
           Now that our software is installed and our Arduino is setup, lets verify everything is working. The easiest way to do this is by using the Blink sample application.
          </p>
          <p>
           1  Open the Arduino Software by Double-clicking the Arduino Application (./arduino on Linux).
          </p>
          <p>
           2  Make sure the board is still connected to your computer.
          </p>
          <p>
           3  Open the LED blink example sketch:
           <i>
            File &gt; Examples &gt; 1.Basics &gt; Blink
           </i>
           . You should see the code for the application open and it should look like this:
          </p>
          <div class="img-container">
           <img alt="" class="center" src="http://cdn.makeuseof.com/wp-content/uploads/2013/07/Arduino-7.4.png?f35dd4"/>
          </div>
          <p>
           4  Youll need to select the entry in the
           <i>
            Tools &gt; Board
           </i>
           menu that corresponds to your Arduino. Select the Arduino Uno Option.
          </p>
          <div class="img-container">
           <img alt="" class="center" src="http://cdn.makeuseof.com/wp-content/uploads/2013/07/Arduino-7.5.jpg?f35dd4"/>
          </div>
          <p>
           5  Select the serial device of the Arduino board from the
           <i>
            Tools &gt; Serial Port
           </i>
           menu. On Windows, This is likely to be COM3 or higher. On the Mac or on Linux, this should be something with /dev/tty.usbmodem  in it.
          </p>
          <div class="img-container">
           <img alt="arduino tutorial" class="center" src="http://cdn.makeuseof.com/wp-content/uploads/2013/07/Arduino-7.6.png?f35dd4"/>
          </div>
          <p>
           6  Now, simply click the Upload button in the environment. Wait a few seconds  you should see the RX and TX LEDs on the Arduino flashing. If the upload is successful, the message Done uploading. will appear in the status bar.
          </p>
          <p>
           A few seconds after the upload finishes, you should see the pin 13 (L) LED on the board start to blink. If it does, congratulations! Youve got your Arduino up and running.
          </p>
          <h2 id="heading_id_40">
           <a name="chapter-8">
           </a>
           <span>
            8.
           </span>
           Starter Projects
          </h2>
          <p>
           Okay, now is when the real fun in this Arduino guide begins. Lets get started.
          </p>
          <h3 id="heading_id_2">
           <span>
            8.1
           </span>
           Communicating Between Your Arduino and Your PC
          </h3>
          <p>
           Most of the communication youll be doing with the Arduino (for now) will be done via the Serial port (The USB cord). This is quite trivial to set up on the Arduino. Merely add the following line to your setup() method:
          </p>
          <pre>
           Serial.begin(9600);
          </pre>
          <p>
           9600 is the baud rate, something we will not get into here (it essentially means the number of signal changes made per second, and merely ensures that the PC and the Arduino are on the same page in regards to this). Whenever you would like to write something to the serial port, simply use the Serial.print or Serial.println function, as so:
          </p>
          <pre>
           Serial.print("Hello world!");
          </pre>
          <h4 class="sigilNotInTOC" id="heading_id_3">
           Reading from the Serial Port
          </h4>
          <p>
           Note that you will have to read in a single character at a time via the serial port, which is rather unfortunate. If you take a peek at the sample code for our calculator application, specifically the waitForNum() method, you will see an example of how to read in all characters entered, albeit in this case for a number.
          </p>
          <h3 id="heading_id_4">
           <span>
            8.2
           </span>
           Building a Calculator
          </h3>
          <p>
           To tie all of your new found programming knowledge together, we submit to you the following program that performs basic mathematical operations. We have clearly commented the code, so you should be able to understand each step. There is a download available for people who dont like typing at:
           <a href="http://www.bradkendall.ca/arduino">
            http://www.bradkendall.ca/arduino
           </a>
          </p>
          <p>
           Here we go!
          </p>
          <pre>
           /*  Example Arduino Calculator  Communication protocol: Send an 'A', 'S', 'M', or 'D' via serial, than two numbers. The arduino will reply with the result of the operation on the two numbers, (first number first). Note that the division will no doubt look strange - it is an integer division and therefore there will not be anything after the decimal point.  */  void setup() {  Serial.begin(9600);  Serial.println("Calculator initiated.");  }  /* loop()  This code gets executed over, and over, and over, and over, and over, and over, and over, and over, and over, and over, and over, and over, and over, and over, and over, and over again.  Our loop pretty much starts the 'waiting for input' stage, where we wait for the user to input a character (the mathematical operation), then two operands.  After we output the result, we let the loop get hit again, and joy is had by all!  */  void loop() {  char operation;  int number1;  int number2; // hehe, Number 2.   int result; // Hold the result of the operation.  boolean success;  // Indicates whether the operation   // was successful (we knew what to   // do - nothing bad was inputted)  success = true;   // Go ahead and set success to true ;   // The only time we will be updating   // this variable now is to set it to   // false if we've encountered a   // problem.    Serial.println("Pick an operation: 'A'dd, 'S'ubtract, 'M'ultiply, or 'D'ivide (Simply input the first letter in quotes.)");  // We have to wait for the user to send something  // here; the easiest way to do so is to simply loop  // and waitfor Serial.available() to be true.  while(Serial.available() == 0) {  ; // ; indicates an empty statement. Or a sea  // monster in Nethack. God those suck.  }  // This loop will continue executing while Serial.  // available() == 0. Thus, it will be stuck here until   // the serial has a character waiting.  operation = Serial.read();  // We have to do the same thing to get the two  // operands (numbers).  // I have factored this code into a function so that   // I do not have to rewrite it twice. See if you can   // determine why I would not be able to use it (at   // least intuitively) to get the operation.  Serial.println("Okay, now please enter the two numbers, one at a time!");  number1 = waitForNum();  Serial.print("Read: ");  Serial.println(number1);  number2 = waitForNum();  Serial.print("Read: ");  Serial.println(number2);  // Now we have read in all the data we need. It is  // time to calculate the result. We will have to  // determine what operation the user specified, and  // perform the calculation from there.  Serial.print("Operation: ");  if(operation == 'A')  {  // This checks to see if the user sent along the  // character 'A', specifying an add.  Serial.println("ADD (Look, a kitty!)");  result = number1 + number2;  } else if(operation == 'S')  {  // Note that the above condition will only be  // tested for if operation is not equal to 'A' -  // hence the else.  // This code executes if the operation is 'S' for  // subtract.  Serial.println("Subtract");  result = number1 - number2;  } else if(operation == 'M')  {  // In this case, we will be multiplying.  Serial.println("Multiply");  result = number1 * number2;  } else if(operation == 'D')  {  // Here we will be dividing.  Serial.println("Divide");  result = number1 / number2;  } else{  // This code will be used if the character  // specified doesn't match anything - in other  // words, the user did not send A, S, D, or M,  // and we don't know what to do.  // Hence, set 'success' to false  success = false;  }  // Now we should have our result. Time to send the  // user back something! (Then start over again! Joy!)  if(success)  {  // Note that print will not start a new  // line, and the next print statement will  // continue writing right  // where the previous one left off.  // Output the result.  Serial.print("Result: ");  Serial.println(result);  } else  {  Serial.print("Sorry, I don't understand what you want me to do! (You inputted '");  Serial.print(operation);  Serial.println("')");  }  }  int waitForNum()  {  int ret;  while(Serial.available() == 0) { ;  }  // Why minus '0'? The value we'll get from Serial.  // read() will be a character. What this means is  // that its numeric value will not necessarily  // reflect the number it represents. (Look at an  // ASCII table, the character '0' actually has a  // decimal value of 48!)  // The take-away from this is that, since fortunately  // all the numbers are in sequence, you can simply  // subtract the decimal value of '0' from  // whatever you read in, and you'll be left with the  // number itself. '5' - '0' = 5 .  ret = Serial.read() - '0';  // To handle numbers that span more than one  // character (like 124, which spans three), we must  // loop until there is no more input, and multiply  // each number we read by one (as 124 would come in  // like: 4 2 1  // And the number we build would be:  // (((1 * 10) + 2) * 10) + 4,  // or 124! The joys of the decimal numbering system!  // Note that the delays are merely to slow things  // down a bit - removing them would have the  // code execute too quickly to 'notice' more  // characters waiting to come in from Serial.  // A little strange, neh? Welcome to the joys of this  // type of thing. =]  delay(10);  while(Serial.available() != 0)  {  ret = ret * 10;  ret += Serial.read() - '0';  delay(10);  }  return ret;  }
          </pre>
          <h3 id="heading_id_5">
           <span>
            8.3
           </span>
           Turning on an LED
          </h3>
          <div class="img-container">
           <img alt="arduino guide" class="center" src="http://cdn.makeuseof.com/wp-content/uploads/2013/07/Arduino-8.1.jpg?f35dd4"/>
          </div>
          <h4 class="sigilNotInTOC" id="heading_id_16">
           What You Need:
          </h4>
          <ul>
           <li>
            1  LED
           </li>
           <li>
            1  Resistor  1 KOhm (brown, black, red)
           </li>
           <li>
            4  Jumper Wires
           </li>
          </ul>
          <p>
           You will build a circuit by plugging the LED and resistor leads into small holes called sockets on the breadboard.
          </p>
          <p>
           Lets get started!
          </p>
          <h4 class="sigilNotInTOC" id="heading_id_6">
           Hardware Setup:
          </h4>
          <ul>
           <li>
            Step 1  Unplug the USB cord from your Arduino.
           </li>
           <li>
            Step 2  Plug a jumper wire from the 5V port on your Arduino into the positive section of your breadboards power lane.
           </li>
           <li>
            Step 3  Plug a jumper wire from the GND port on your Arduino into the negative section of your breadboards ground lane.
           </li>
           <li>
            Step 4  Plug the LEDs cathode (the short lead) into the I-2 socket on your breadboard.
           </li>
           <li>
            Step 5  Plug the LEDs anode (the long lead) into the I-4 socket on your breadboard.
           </li>
           <li>
            Step 6  Plug one of the resistors leads into the H-4 socket on your breadboard.
           </li>
           <li>
            Step 7  Plug the resistors other lead into the H-9 socket on your breadboard.
           </li>
           <li>
            Step 8  Connect a jumper wire from your breadboards power lane to the J-9 socket on your breadboard.
           </li>
           <li>
            Step 9  Connect a jumper wire from your breadboards ground lane to the J-2 socket on your breadboard.
           </li>
           <li>
            Step 10  Reconnect the USB cable to your Arduino.
           </li>
          </ul>
          <p>
           Summary: Once power is applied to the circuit, the LED will turn on. This is about as simple as a circuit gets.
          </p>
          <div class="img-container">
           <img alt="arduino guide book" class="center" src="http://cdn.makeuseof.com/wp-content/uploads/2013/07/Arduino-8.2.png?f35dd4"/>
          </div>
          <h3 id="heading_id_7">
           <span>
            8.4
           </span>
           Making Your LED Blink
          </h3>
          <h4 class="sigilNotInTOC" id="heading_id_17">
           What You Need:
          </h4>
          <ul>
           <li>
            1  LED
           </li>
           <li>
            1  Resistor  1 K Ohm (brown, black, red)
           </li>
           <li>
            4  Jumper Wires
           </li>
          </ul>
          <h4 class="sigilNotInTOC" id="heading_id_8">
           Hardware Setup:
          </h4>
          <ul>
           <li>
            Step 1  Unplug the USB cord from your Arduino.
           </li>
           <li>
            Step 2  Plug a jumper wire from the Digital IO pin 8 into the I-12 socket on your breadboard.
           </li>
           <li>
            Step 3  Plug one of the resistors leads into the H-12 socket on your breadboard.
           </li>
           <li>
            Step 4  Plug the resistors other lead into the H-4 socket on your breadboard.
           </li>
           <li>
            Step 5  Plug the LEDs cathode (the short lead) into the I-2 socket on your breadboard.
           </li>
           <li>
            Step 6  Plug the LEDs anode (the long lead) into the I-4 socket on your breadboard.
           </li>
           <li>
            Step 7  Connect a jumper wire from your breadboards ground lane to the J-2 socket on your breadboard. Ensure that the ground lane is still grounded.
           </li>
           <li>
            Step 8  Reconnect the USB cable to your Arduino.
           </li>
          </ul>
          <div class="img-container">
           <img alt="" class="center" src="http://cdn.makeuseof.com/wp-content/uploads/2013/07/Arduino-8.3.png?f35dd4"/>
          </div>
          <h4 class="sigilNotInTOC" id="heading_id_18">
           Software Setup:
          </h4>
          <p>
           Open up your Arduino Development Environment and create a new sketch (
           <i>
            File &gt; New
           </i>
           ).
          </p>
          <p>
           Enter the following code into your sketch:
          </p>
          <pre>
           void setup() {  // initialize the digital pin as an output.  // Pin 8 is our output pin  pinMode(8, OUTPUT);  }  void loop() {  digitalWrite(8, HIGH); // set the LED on  delay(1000); // wait for a second  digitalWrite(8, LOW); // set the LED off  delay(1000); // wait for a second  }
          </pre>
          <p>
           After you enter the code, press the upload button and your LED should start blinking.
          </p>
          <p>
           Summary: The digitalWrite(8, HIGH); command sets the output pin 8 on the Arduino to 5V. The digitalWrite(8, LOW); command sets the output pin 8 on the Arduino to 0V. The delay(1000); command pauses execution on the Arduino for 1000 ms or 1 second. Since this in the loop() function, the code is called over and over again. Pretty cool, huh?
          </p>
          <h3 id="heading_id_9">
           <span>
            8.5
           </span>
           Making Multiple LEDs Blink
          </h3>
          <div class="img-container">
           <img alt="" class="center" src="http://cdn.makeuseof.com/wp-content/uploads/2013/07/Arduino-8.4.jpg?f35dd4"/>
          </div>
          <h4 class="sigilNotInTOC" id="heading_id_19">
           What You Need:
          </h4>
          <ul>
           <li>
            2  LEDs
           </li>
           <li>
            2  Resistor  1 K Ohm (brown, black, red)
           </li>
           <li>
            4  Jumper Wires
           </li>
          </ul>
          <h4 class="sigilNotInTOC" id="heading_id_10">
           Hardware Setup:
          </h4>
          <ul>
           <li>
            Step 1  Unplug the USB cord from your Arduino.
           </li>
           <li>
            Step 2  Setup the project board the same as in Project 3.
           </li>
           <li>
            Step 3  Plug a jumper wire from the Digital IO pin 9 into the I-16 socket on your breadboard.
           </li>
           <li>
            Step 4  Plug one of the resistors leads into the H-16 socket on your breadboard.
           </li>
           <li>
            Step 5  Plug the resistors other lead into the H-24 socket on your breadboard.
           </li>
           <li>
            Step 6  Plug the LEDs anode (the long lead) into the I-24 socket on your breadboard.
           </li>
           <li>
            Step 7  Plug the LEDs cathode (the short lead) into the I-26 socket on your breadboard.
           </li>
           <li>
            Step 8  Connect a jumper wire from your breadboards ground lane to the J-26 socket on your breadboard. Ensure that the ground lane is still grounded.
           </li>
           <li>
            Step 9  Reconnect the USB cable to your Arduino.
           </li>
          </ul>
          <div class="img-container">
           <img alt="arduino guide" class="center" src="http://cdn.makeuseof.com/wp-content/uploads/2013/07/Arduino-8.5.jpg?f35dd4"/>
          </div>
          <h4 class="sigilNotInTOC" id="heading_id_20">
           Software Setup:
          </h4>
          <p>
           Open up your Arduino Development Environment and create a new sketch (
           <i>
            File &gt; New
           </i>
           ).
          </p>
          <p>
           Enter the following code into your sketch:
          </p>
          <pre>
           void setup() {  // initialize the digital pins as an output.  pinMode(8, OUTPUT);  pinMode(9, OUTPUT);  }  void loop() {  digitalWrite(8, HIGH); // set the LED on  digitalWrite(9, LOW); // set the LED on  delay(1000); // wait for a second  digitalWrite(8, LOW); // set the LED off  digitalWrite(9, HIGH); // set the LED on  delay(1000); // wait for a second  }
          </pre>
          <p>
           After you enter the code, press the upload button and both your LEDs should start blinking.
          </p>
          <p>
           Summary: This project is exactly the same as the last project, except we have added an additional LED on output pin 9 that turns off when the other LED is on. Can you think of any other ways to expand on this?
          </p>
          <h3 id="heading_id_11">
           <span>
            8.6
           </span>
           Pushbuttons with a Pull-up Resistor
          </h3>
          <h4 class="sigilNotInTOC" id="heading_id_21">
           What You Need:
          </h4>
          <ul>
           <li>
            1  Resistor 2 K Ohm (red-black-red)
           </li>
           <li>
            1  Resistor  1 K Ohm (brown, black, red)
           </li>
           <li>
            1  Tactile Switch
           </li>
           <li>
            5  Jumper Wires
           </li>
          </ul>
          <h4 class="sigilNotInTOC" id="heading_id_22">
           Hardware Setup:
          </h4>
          <ul>
           <li>
            Step 1  Unplug the USB cord from your Arduino.
           </li>
           <li>
            Step 2  Connect a jumper wire from your breadboards power lane to the C-3 socket on your breadboard. Ensure that the power lane is still connected.
           </li>
           <li>
            Step 3  Plug one of the 2 K ? resistors leads into the B-3 socket on your breadboard.
           </li>
           <li>
            Step 4  Plug the 2 K ? resistors other lead into the B-7 socket on your breadboard.
           </li>
           <li>
            Step 5  Plug a tactile switch so the pins are in the F-9, F-7, E-9 and E-7 on your breadboard.
           </li>
           <li>
            Step 6  Plug one of the 1K ? resistors leads into the H-7 socket on your breadboard.
           </li>
           <li>
            Step 7  Plug the 1K ? resistors other lead into the H-14 socket on your breadboard.
           </li>
           <li>
            Step 8  Plug a jumper wire from the Digital IO pin 9 into the I-14 socket on your breadboard.
           </li>
           <li>
            Step 9  Connect a jumper wire from your breadboards ground lane to the H-9 socket on your breadboard. Ensure that the ground lane is still connected.
           </li>
           <li>
            Step 10  Reconnect the USB cable to your Arduino.
           </li>
          </ul>
          <div class="img-container">
           <img alt="" class="center" src="http://cdn.makeuseof.com/wp-content/uploads/2013/07/Arduino-8.6.jpg?f35dd4"/>
          </div>
          <h4 class="sigilNotInTOC" id="heading_id_23">
           Software Setup:
          </h4>
          <p>
           Open up your Arduino Development Environment and create a new sketch (
           <i>
            File &gt;
           </i>
           <i>
            New
           </i>
           ).
          </p>
          <p>
           Enter the following code into your sketch:
          </p>
          <pre>
           void setup() {  // initialize the digital pin 9 as an input.  pinMode(9, INPUT);  // initialize the serial port.  Serial.begin(9600);  }  void loop() {  int buttonStatus = digitalRead(9);  if (buttonStatus == LOW) //The button is down  {  Serial.println("The button is down");  }  }
          </pre>
          <p>
           After you enter the code, press the upload button and open the Serial Monitor (
           <i>
            Tools &gt; Serial Monitor
           </i>
           ). When you press the tactile switch, the serial monitor should print The button is down.
          </p>
          <p>
           Summary: This project reads the digital input for 5v (HIGH). When the button is pressed, the voltage is set to 0v (LOW) and the Arduino executes the code in our if statement.
          </p>
          <h3 id="heading_id_15">
           <span>
            8.7
           </span>
           Turning on an LED with a Pushbutton
          </h3>
          <div class="img-container">
           <img alt="" class="center" src="http://cdn.makeuseof.com/wp-content/uploads/2013/07/Arduino-8.7.jpg?f35dd4"/>
          </div>
          <h4 class="sigilNotInTOC" id="heading_id_24">
           What You Need:
          </h4>
          <ul>
           <li>
            1  LED
           </li>
           <li>
            1  Resistor  1 K Ohm (brown, black, red)
           </li>
           <li>
            1  Tactile Switch
           </li>
           <li>
            4  Jumper Wires
           </li>
          </ul>
          <h4 class="sigilNotInTOC" id="heading_id_25">
           Hardware Setup:
          </h4>
          <ul>
           <li>
            Step 1  Unplug the USB cord from your Arduino.
           </li>
           <li>
            Step 2  Plug a tactile switch so the pins are in H-9, H-11, J-9 and J-11 on your breadboard.
           </li>
           <li>
            Step 3  Plug a jumper wire from the GND port on your Arduino into the negative section on your breadboards ground lane.
           </li>
           <li>
            Step 4  Plug the LEDs cathode (the short lead) into the I-2 socket on your breadboard.
           </li>
           <li>
            Step 5  Plug the LEDs anode (the long lead) into the I-4 socket on your breadboard.
           </li>
           <li>
            Step 6  Plug one of the resistors leads into the H-4 socket on your breadboard.
           </li>
           <li>
            Step 7  Plug the resistors other lead into the H-9 socket on your breadboard.
           </li>
           <li>
            Step 8  Connect a jumper wire from your breadboards power lane to the G-11 socket on your breadboard.
           </li>
           <li>
            Step 9  Connect a jumper wire from your breadboards ground lane to the J-2 socket on your breadboard.
           </li>
           <li>
            Step 10  Reconnect the USB cable to your Arduino.
           </li>
          </ul>
          <div class="img-container">
           <img alt="arduino guide" class="center" src="http://cdn.makeuseof.com/wp-content/uploads/2013/07/Arduino-8.8.png?f35dd4"/>
          </div>
          <h3 id="heading_id_12">
           <span>
            8.8
           </span>
           Control an LEDs Brightness
          </h3>
          <h4 class="sigilNotInTOC" id="heading_id_26">
           What You Need:
          </h4>
          <ul>
           <li>
            1  Photo Resistor
           </li>
           <li>
            1  Resistor  2 K Ohm (red-black-red)
           </li>
           <li>
            1  LED
           </li>
           <li>
            5  Jumper Wires
           </li>
          </ul>
          <h4 class="sigilNotInTOC" id="heading_id_27">
           Hardware Setup:
          </h4>
          <ul>
           <li>
            Step 1  Unplug the USB cord from your Arduino.
           </li>
           <li>
            Step 2  Plug one of the photo resistors leads into the I-14 socket on your breadboard.
           </li>
           <li>
            Step 3  Plug the photo resistors other lead into the I-15 socket on your breadboard.
           </li>
           <li>
            Step 4  Plug the LEDs cathode (the short lead) into the H-17 socket on your breadboard.
           </li>
           <li>
            Step 5  Plug the LEDs anode (the long lead) into the H-15 socket on your breadboard.
           </li>
           <li>
            Step 6  Plug one of the resistors lead into the I-17 socket on your breadboard.
           </li>
           <li>
            Step 7  Plug the resistors other lead into the I-22 socket on your breadboard.
           </li>
           <li>
            Step 8  Connect a jumper wire from your breadboards power lane to the J-14 socket on your breadboard. Ensure that the power lane is still connected.
           </li>
           <li>
            Step 9  Connect a jumper wire from your breadboards ground lane to the J-22 socket on your breadboard. Ensure that the ground lane is still connected.
           </li>
           <li>
            Step 10  Reconnect the USB cable to your Arduino.
           </li>
          </ul>
          <div class="img-container">
           <img alt="" class="center" src="http://cdn.makeuseof.com/wp-content/uploads/2013/07/Arduino-8.9.jpg?f35dd4"/>
          </div>
          <p>
           Summary: As you see, the resistance of the photo resistor decreases with more light. The lower the resistance, the brighter the LED. Combine this with the pull up resistor project (Chapter 8.6) and watch the opposite effect.
          </p>
          <h3 id="heading_id_13">
           <span>
            8.9
           </span>
           Observing Light with your Arduino
          </h3>
          <h4 class="sigilNotInTOC" id="heading_id_28">
           What You Need:
          </h4>
          <ul>
           <li>
            1  Photo Resistor
           </li>
           <li>
            1  Resistor  10 K Ohm (brown-black-orange)
           </li>
           <li>
            5  Jumper Wires
           </li>
          </ul>
          <h4 class="sigilNotInTOC" id="heading_id_29">
           Hardware Setup:
          </h4>
          <ul>
           <li>
            Step 1  Unplug the USB cord from your Arduino.
           </li>
           <li>
            Step 2  Plug one of the photo resistors leads into the F-16 socket on your breadboard.
           </li>
           <li>
            Step 3  Plug the photo resistors other lead into the F-15 socket on your breadboard.
           </li>
           <li>
            Step 4  Plug one of the resistors leads into the I-15 socket on your breadboard.
           </li>
           <li>
            Step 5  Plug the resistors other lead into the I-10 socket on your breadboard.
           </li>
           <li>
            Step 6  Connect a jumper wire from your breadboards power lane to the G-16 socket on your breadboard. Ensure that the power lane is still connected.
           </li>
           <li>
            Step 7  Connect a jumper wire from your breadboards ground lane to the J-10 socket on your breadboard. Ensure that the ground lane is still connected.
           </li>
           <li>
            Step 8  Plug a jumper wire from the Analog IO pin 0 into the G-15 socket on your breadboard
           </li>
           <li>
            Step 9  Reconnect the USB cable to your Arduino.
           </li>
          </ul>
          <div class="img-container">
           <img alt="arduino guide book" class="center" src="http://cdn.makeuseof.com/wp-content/uploads/2013/07/Arduino-8.10.jpg?f35dd4"/>
          </div>
          <h4 class="sigilNotInTOC" id="heading_id_30">
           Software Setup:
          </h4>
          <p>
           Open up your Arduino Development Environment and create a new sketch (
           <i>
            File &gt; New
           </i>
           ).
          </p>
          <p>
           Enter the following code into your sketch:
          </p>
          <pre>
           int lightPin = 0; //define a pin for Photo resistor  void setup()  {  Serial.begin(9600); //Begin serial communication  }  void loop()  {  //Write the value of the photo resistor to the serial //monitor.  int lightValue = analogRead(lightPin);  Serial.println(lightValue);  delay(1000); //pause for 1000 ms or 1 second.  }
          </pre>
          <p>
           After you enter the code, press the upload button and open the Serial Monitor (
           <i>
            Tools &gt; Serial Monitor
           </i>
           ). The console should give a light reading in the form of an integer. When you reduce the amount of light, the number will be lower.
          </p>
          <p>
           Summary: This project is the same as the previous project, except we are reading the values from your Arduino instead of outputting to an LED. The resistance of the photo resistor decreases with more light. You could use logic to reverse this effect!
          </p>
          <h3 id="heading_id_14">
           <span>
            8.10
           </span>
           Making Music with your Arduino
          </h3>
          <h4 class="sigilNotInTOC" id="heading_id_31">
           What You Need:
          </h4>
          <ul>
           <li>
            1  Piezo Speaker
           </li>
           <li>
            3  Jumper Wires
           </li>
          </ul>
          <h4 class="sigilNotInTOC" id="heading_id_32">
           Hardware Setup:
          </h4>
          <ul>
           <li>
            Step 1  Unplug the USB cord from your Arduino.
           </li>
           <li>
            Step 2  Plug the positive lead of your piezo speaker into the E-15 socket on your breadboard.
           </li>
           <li>
            Step 3  Plug the negative lead of your piezo speaker into the F-15 socket on your breadboard.
           </li>
           <li>
            Step 4  Plug a jumper wire from the Digital IO pin 8 into the A-15 socket on your breadboard.
           </li>
           <li>
            Step 5  Connect a jumper wire from your breadboards ground lane to the J-15 socket on your breadboard. Ensure that the ground lane is still connected.
           </li>
           <li>
            Step 6  Reconnect the USB cable to your Arduino.
           </li>
          </ul>
          <p>
           Easy, right?
          </p>
          <div class="img-container">
           <img alt="arduino guide" class="center" src="http://cdn.makeuseof.com/wp-content/uploads/2013/07/Arduino-8.11.jpg?f35dd4"/>
          </div>
          <h4 class="sigilNotInTOC" id="heading_id_33">
           Software Setup:
          </h4>
          <p>
           This project is included in the Examples Section. No typing on this one! Open up your Arduino Development Environment .Open the toneMelody Example Sketch (
           <i>
            File &gt; Examples &gt; Digital &gt; toneMelody
           </i>
           ).
          </p>
          <p>
           After you enter the code, press the upload button and your piezo speaker will start making noise. You can modify the sound by modifying the melody[] and noteDurations[] arrays.
          </p>
          <p>
           Summary: This project produces sound out of the piezo speaker.
          </p>
          <h2 id="heading_id_2">
           <a name="chapter-9">
           </a>
           <span>
            9.
           </span>
           Where to go From Here
          </h2>
          <p>
           As you can see, the Arduino is an easy way to get into electronics and software. Hopefully you have seen that it is easy to build simple electronic projects with it. I hope you have realized that your projects dont have to stay simple. You can build way more complex projects on top of these simple ones. Here are some of my favorite projects that would be a great next step:
          </p>
          <ul>
           <li>
            <a href="http://www.makeuseof.com/tag/arduino-project-flashy-christmas-lights-ornaments/">
             Create Christmas light ornaments
            </a>
           </li>
           <li>
            <a href="http://www.makeuseof.com/tag/arduino-traffic-light-controller/">
             Arduino Traffic light controller
            </a>
           </li>
           <li>
            <a href="http://www.makeuseof.com/tag/the-top-4-arduino-shields-to-superpower-your-projects/">
             Arduino Shields to superpower your project
            </a>
           </li>
           <li>
            <a href="http://www.makeuseof.com/tag/dont-spend-money-on-an-arduino-build-your-own-for-much-less/">
             Make your own Arduino
            </a>
           </li>
           <li>
            <a href="http://www.makeuseof.com/tag/how-to-recreate-the-classic-pong-game-using-arduino/">
             Build your own pong game with an Arduino
            </a>
           </li>
           <li>
            <a href="http://www.makeuseof.com/tag/give-your-arduino-project-its-own-mini-webserver-with-an-ethernet-shield/">
             Connect your Arduino to the internet
            </a>
           </li>
           <li>
            <a href="http://www.makeuseof.com/tag/control-appliances-from-an-arduino-the-start-of-home-automation/">
             Create a home automation system with your Arduino
            </a>
           </li>
          </ul>
          <p>
           <small>
            Arduino Guide Published: August 2013
           </small>
          </p>
          <div class="download">
           <div class="title">
            <span>
             Download this Guide
            </span>
           </div>
           <ul>
            <li>
             <a href="http://manuals.makeuseof.com.s3.amazonaws.com/for-mobile/Arduino_-_MakeUseOf.com.pdf">
              PDF
             </a>
            </li>
            <li>
             <a href="http://manuals.makeuseof.com.s3.amazonaws.com/EPUB/Arduino.epub">
              ePub
             </a>
            </li>
           </ul>
          </div>
         </div>
         <div id="eoa_trigger">
         </div>
         <div class="wdt_grouvi">
          <div class="header">
           <span class="web_view">
            Join live MakeUseOf Groups on Grouvi App
           </span>
           <span class="mobile_view">
            Join live Groups on Grouvi
           </span>
          </div>
          <div class="items">
           <div class="item">
            <div class="avatar">
             <img alt="Raspberry Pi Projects" src="https://cdn.grouvi.im/uploads/586d49ec-a58c-43c5-9969-71099752fae3/image.png" style="width:42px;height:42px;"/>
            </div>
            <div class="title">
             Raspberry Pi Projects
            </div>
            <div class="member">
             26 Members
            </div>
            <div class="join">
             <a class="grouvi-link" data-grouvi-group-id="78" href="http://grou.vi/1uhq-1">
              Join
             </a>
            </div>
           </div>
           <div class="item">
            <div class="avatar">
             <img alt="DIY Tech Projects" src="https://cdn.grouvi.im/uploads/376f6786-060c-4ede-9854-bd20eee4cc19/image.png" style="width:42px;height:42px;"/>
            </div>
            <div class="title">
             DIY Tech Projects
            </div>
            <div class="member">
             23 Members
            </div>
            <div class="join">
             <a class="grouvi-link" data-grouvi-group-id="77" href="http://grou.vi/1uta-2">
              Join
             </a>
            </div>
           </div>
           <div class="item">
            <div class="avatar">
             <img alt="Arduino Projects" src="https://cdn.grouvi.im/uploads/4cf5d3ec-40b4-4225-ac62-7eaada96ab35/image.png" style="width:42px;height:42px;"/>
            </div>
            <div class="title">
             Arduino Projects
            </div>
            <div class="member">
             21 Members
            </div>
            <div class="join">
             <a class="grouvi-link" data-grouvi-group-id="79" href="http://grou.vi/1uqa-1">
              Join
             </a>
            </div>
           </div>
          </div>
         </div>
         <div aria-hidden="true" aria-labelledby="mySmallModalLabel" class="modal fade grouvi" id="grouvi-window" role="dialog" tabindex="-1">
          <div class="modal-dialog modal-sm">
           <div class="modal-content">
            <div class="body">
             <div class="description">
              <p style="font-weight: bold;">
               Get a free Grouvi app (iOS/Android) to participate in MakeUseOf live chat groups.
              </p>
              <br/>
              <p>
               Enter your mobile number to receive a free text message with the download link for the app.
              </p>
             </div>
             <div class="success-message">
             </div>
             <div class="forms">
              <form class="form">
               <div class="items">
                <div class="item phone_input">
                 <input class="phone-number" name="meta[phone_number]" required="" type="tel"/>
                 <div class="error-message help-block">
                 </div>
                </div>
               </div>
               <input class="meta-group-id" name="meta[group_id]" type="hidden"/>
               <input class="meta-phone-number" name="meta[phone_number]" type="hidden"/>
               <input name="action" type="hidden" value="grouvi_save"/>
               <div class="controls">
                <button class="ladda-button" data-size="small" data-spinner-color="#fff" data-spinner-size="30" data-style="expand-left" type="submit">
                 <span class="ladda-label">
                  Submit
                 </span>
                 <span class="ladda-spinner">
                 </span>
                </button>
               </div>
              </form>
             </div>
            </div>
           </div>
          </div>
         </div>
         <div>
          <div class="ad-unit-post" id="adsense3">
           <small>
            <a href="https://support.google.com/adsense/troubleshooter/1631343?url=http%3A%2F%2Fwww.makeuseof.com%2Ftag%2Fgetting-started-with-arduino-a-beginners-guide%2F&amp;client=ca-pub-9894449314507324" style="color:LightGray">
             Ads by Google
            </a>
           </small>
           <script type="text/javascript">
            &lt;!--

	adUnit   = document.getElementById("adsense3");
	adWidth  = adUnit.offsetWidth;

	google_ad_client = "ca-pub-9894449314507324";
	/* MUO Article bottom */
	google_ad_slot = "2035481891";
	google_override_format = true;
	google_ad_width = adWidth;
	google_ad_height = 210;
	google_font_face = 'verdana';
	google_max_num_ads="3";

	//--&gt;
           </script>
           <script src="//pagead2.googlesyndication.com/pagead/show_ads.js?f35dd4" type="text/javascript">
           </script>
          </div>
         </div>
         <div id="crtoTextBanner">
          <script type="text/javascript">
           var crto_zoneid = window.innerWidth&gt;=768?204957:204958;
		&lt;!--//&lt;![CDATA[
		   document.MAX_ct0 ='';
		   var m3_u = (location.protocol=='https:'?'https://cas.criteo.com/delivery/ajs.php?':'http://cas.criteo.com/delivery/ajs.php?');
		   var m3_r = Math.floor(Math.random()*99999999999);
		   document.write ("&lt;scr"+"ipt type='text/javascript' src='"+m3_u);
		   document.write ("zoneid="+crto_zoneid);document.write("&amp;nodis=1");
		   document.write ('&amp;cb=' + m3_r);
		   if (document.MAX_used != ',') document.write ("&amp;exclude=" + document.MAX_used);
		   document.write (document.charset ? '&amp;charset='+document.charset : (document.characterSet ? '&amp;charset='+document.characterSet : ''));
		   document.write ("&amp;loc=" + escape(window.location));
		   if (document.referrer) document.write ("&amp;referer=" + escape(document.referrer));
		   if (document.context) document.write ("&amp;context=" + escape(document.context));
		   if ((typeof(document.MAX_ct0) != 'undefined') &amp;&amp; (document.MAX_ct0.substring(0,4) == 'http')) {
		       document.write ("&amp;ct0=" + escape(document.MAX_ct0));
		   }
		   if (document.mmm_fo) document.write ("&amp;mmm_fo=1");
		   document.write ("'&gt;&lt;/scr"+"ipt&gt;");
		//]]&gt;--&gt;
          </script>
         </div>
         <div id="snidget-content">
         </div>
        </div>
        <div class="blc_comments">
         <div class="header">
          <div class="counts">
          </div>
          <div class="title">
           Comment
           <span>
            (1)
           </span>
          </div>
         </div>
         <div class="comment_inner">
          <div class="write">
           <a href="#comment-form">
            Write a Comment
           </a>
          </div>
          <ul>
           <li>
            <div class="comment " data-comment-id="1608549" id="comment-1608549" itemprop="comment" itemscope="" itemtype="http://schema.org/UserComments">
             <div class="avatar">
              <img alt="" class="avatar-150 photo" src="http://0.gravatar.com/avatar/44ed486de74548308d4b0bbdcc89db49?s=150&amp;d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D150&amp;r=G"/>
             </div>
             <div class="author" itemprop="creator" itemscope="" itemtype="http://schema.org/Person">
              <span itemprop="name">
               Rakesh Ranjan
              </span>
             </div>
             <div class="date">
              <a href="http://www.makeuseof.com/tag/getting-started-with-arduino-a-beginners-guide/#comment-1608549">
               <time datetime="2015-04-28 11:38" itemprop="commentTime">
                28 April, 2015
               </time>
              </a>
             </div>
             <div class="comment_body" itemprop="commentText">
              <p>
              </p>
              <p>
               Very good pdf  book for  arduino
              </p>
             </div>
             <div class="manage">
              <a class="reply" href="#comment-form">
               Reply
              </a>
             </div>
            </div>
           </li>
           <!-- #comment-## -->
          </ul>
         </div>
        </div>
        <!-- /blc_comments -->
        <div class="wdt_disclimer mobile_view">
         <div class="header">
          Affiliate Disclamer
         </div>
         <div class="disclimer">
          <p>
           This review may contain affiliate links, which pays us a small compensation if you do decide to make a purchase based on our recommendation. Our judgement is in no way biased, and our recommendations are always based on the merits of the items.
          </p>
          For more details, please read
          <a href="http://www.makeuseof.com/affiliate-disclaimer/">
           our disclosure
          </a>
          .
         </div>
        </div>
        <div class="footer_ad">
         <div style="text-align:center;margin-bottom:20px">
          <!-- Footer-Ledderboard-728x90-468x60 -->
          <div id="div-gpt-ad-1360132638304-0">
           <script type="text/javascript">
            googletag.cmd.push(function() { googletag.display('div-gpt-ad-1360132638304-0'); });
           </script>
          </div>
         </div>
        </div>
       </div>
       <!-- /blc_post -->
      </div>
      <!-- /leftcol -->
      <div class="rightcol">
       <div class="subscription">
        <form accept-charset="utf-8" action="http://newsletter.makeuseof.com/subscribe" method="POST" target="_blank">
         <label for="subscriptionID">
          Subscribe to our newsletter
         </label>
         <input name="list" type="hidden" value="9reTgbmdexdVu3skLnj0lw"/>
         <input name="reg_date" type="hidden" value="2015-07-14 19:55:34"/>
         <input name="ip" type="hidden" value="37.9.62.74"/>
         <input id="subscriptionID" name="email" placeholder="E-mail" type="text"/>
         <button type="submit" value="Subscribe!">
          Get
         </button>
        </form>
       </div>
       <div class="wdt_ads">
        <div class="item">
         <!-- SidebarTop300x600 -->
         <div id="div-gpt-ad-1411485984007-0" style="width:300px; height:600px;">
          <script type="text/javascript">
           googletag.cmd.push(function() { googletag.display('div-gpt-ad-1411485984007-0'); });
          </script>
         </div>
        </div>
       </div>
       <!-- /wdt_ads -->
       <div class="wdt_sticky">
        <div class="item">
         <a href="http://www.makeuseof.com/tag/dont-spend-money-on-an-arduino-build-your-own-for-much-less/">
          <img alt="" height="250" src="http://cdn.makeuseof.com/wp-content/uploads/2013/03/featured-diy-arduino-300x110.jpg?f35dd4" width="300"/>
          <span class="title">
           Don't Spend Money On An Arduino - Build Your Own For Much Less
          </span>
          <span class="desc">
           I love my Arduinos. At any point, I have quite a few projects on the go  prototyping is just
          </span>
         </a>
        </div>
       </div>
       <!-- /wdt_sticky -->
       <div class="wdt_ads">
        <div class="item">
         <!-- Sidebar-top-300x600-300x250 -->
         <div id="div-gpt-ad-1411482340693-0" style="width:300px; height:250px;">
          <script type="text/javascript">
           googletag.cmd.push(function() { googletag.display('div-gpt-ad-1411482340693-0'); });
          </script>
         </div>
        </div>
       </div>
       <!-- /wdt_ads -->
       <div class="wdt_sticky">
        <div class="item">
         <a href="http://www.makeuseof.com/tag/arduino-technology-explained/">
          <img alt="" height="250" src="http://cdn.makeuseof.com/wp-content/uploads/2011/09/arduino_uno_test-300x110.jpeg?f35dd4" width="300"/>
          <span class="title">
           What Is Arduino &amp; What Can You Do With It? [Technology Explained]
          </span>
          <span class="desc">
           If youre like me, tinkering with electronics is something youd really like to do  in theory at least 
          </span>
         </a>
        </div>
       </div>
       <!-- /wdt_sticky -->
       <div class="wdt_ads">
        <div class="item">
         <!-- Sidebar-Middle-300x250 -->
         <div id="div-gpt-ad-1411482473332-0" style="width:300px; height:250px;">
          <script type="text/javascript">
           googletag.cmd.push(function() { googletag.display('div-gpt-ad-1411482473332-0'); });
          </script>
         </div>
        </div>
       </div>
       <!-- /wdt_ads -->
       <div class="wdt_sticky">
        <div class="item">
         <a href="http://www.makeuseof.com/tag/the-top-4-arduino-shields-to-superpower-your-projects/">
          <img alt="" height="250" src="http://cdn.makeuseof.com/wp-content/uploads/2013/01/featured-arduino-shields-300x110.jpg?f35dd4" width="300"/>
          <span class="title">
           The Top 4 Arduino Shields To Superpower Your Projects
          </span>
          <span class="desc">
           Youve bought an Arduino starter kit, youve followed all the basic Arduino guides, but now youve hit a stumbling block
          </span>
         </a>
        </div>
       </div>
       <!-- /wdt_sticky -->
       <div class="wdt_ads">
        <div class="item">
         <!-- Sidebar-Second_Middle-300x250 -->
         <div id="div-gpt-ad-1411482584935-0" style="width:300px; height:250px;">
          <script type="text/javascript">
           googletag.cmd.push(function() { googletag.display('div-gpt-ad-1411482584935-0'); });
          </script>
         </div>
        </div>
       </div>
       <!-- /wdt_ads -->
       <div class="wdt_sticky">
        <div class="item">
         <a href="http://www.makeuseof.com/tag/arduino-project-flashy-christmas-lights-ornaments/">
          <img alt="" height="250" src="http://cdn.makeuseof.com/wp-content/uploads/2011/12/featured-arduino-flashy-christmas-lights-project-300x110.jpg?f35dd4" width="300"/>
          <span class="title">
           An Arduino Project: How To Make Flashy Christmas Lights Ornaments
          </span>
          <span class="desc">
           This is the next part in our learning Arduino series, and this time we?ll be learning about and using Arrays
          </span>
         </a>
        </div>
       </div>
       <!-- /wdt_sticky -->
       <div class="wdt_ads">
        <div class="item">
         <!-- Sidebar-bottom-300x600-300x250 -->
         <div id="div-gpt-ad-1411482649292-0" style="width:300px; height:250px;">
          <script type="text/javascript">
           googletag.cmd.push(function() { googletag.display('div-gpt-ad-1411482649292-0'); });
          </script>
         </div>
        </div>
       </div>
       <!-- /wdt_ads -->
       <div class="wdt_sticky">
        <div class="item">
         <a href="http://www.makeuseof.com/tag/arduino-traffic-light-controller/">
          <img alt="" height="250" src="http://cdn.makeuseof.com/wp-content/uploads/2011/11/featured-arduino-300x110.jpg?f35dd4" width="300"/>
          <span class="title">
           Arduino Programming For Beginners: The Traffic Light Controller
          </span>
          <span class="desc">
           Last week, we learnt about the basic structure of an Arduino program and took a closer look at the blink
          </span>
         </a>
        </div>
       </div>
       <!-- /wdt_sticky -->
       <div class="wdt_ads">
        <div class="item">
         <!-- /1065821/Sidebar-Third_Middle-300x250 -->
         <div id="div-gpt-ad-1436298895171-0" style="height:250px; width:300px;">
          <script type="text/javascript">
           googletag.cmd.push(function() { googletag.display('div-gpt-ad-1436298895171-0'); });
          </script>
         </div>
        </div>
       </div>
       <!-- /wdt_ads -->
       <div class="wdt_sticky">
        <div class="item">
         <a href="http://www.makeuseof.com/tag/how-to-recreate-the-classic-pong-game-using-arduino/">
          <img alt="" height="250" src="http://cdn.makeuseof.com/wp-content/uploads/2013/06/featured-retro-pong-300x110.jpg?f35dd4" width="300"/>
          <span class="title">
           How To Recreate The Classic Pong Game Using Arduino
          </span>
          <span class="desc">
           Pong was the first ever videogame that reached the mass market. For the first time in history, the concept of
          </span>
         </a>
        </div>
       </div>
       <!-- /wdt_sticky -->
       <div class="wdt_disclimer web_view">
        <div class="header">
         Affiliate Disclamer
        </div>
        <div class="disclimer">
         <p>
          This review may contain affiliate links, which pays us a small compensation if you do decide to make a purchase based on our recommendation. Our judgement is in no way biased, and our recommendations are always based on the merits of the items.
         </p>
         For more details, please read
         <a href="http://www.makeuseof.com/affiliate-disclaimer/">
          our disclosure
         </a>
         .
        </div>
       </div>
      </div>
      <!-- /rightcol -->
     </div>
     <!-- /container -->
    </div>
    <!-- /wrapper -->
   </div>
   <!-- /content -->
   <div id="sidebar">
    <div class="close">
    </div>
    <div class="scroll-pane">
     <div class="wdt_login">
      <div class="title">
       One-Click Login
      </div>
      <div class="login">
       <ul>
        <li>
         <a class="i_facebook" data-provider="facebook" href="#">
         </a>
        </li>
        <li>
         <a class="i_gplus" data-provider="gplus" href="#">
         </a>
        </li>
        <li>
         <a class="i_email" data-target="#modalSignin" data-toggle="modal" href="#">
         </a>
        </li>
       </ul>
      </div>
      <div class="info">
       <div class="tit">
        Reasons to register
       </div>
       <ul>
        <li>
         <span>
          1
         </span>
         Bookmark posts for later
        </li>
        <li>
         <span>
          2
         </span>
         Ask questions to experts
        </li>
        <li>
         <span>
          3
         </span>
         Custom topic alerts
        </li>
       </ul>
      </div>
     </div>
     <div class="with_counters" id="mainmenu">
      <ul>
       <li>
        <a class="i_home" href="http://www.makeuseof.com">
         Home
        </a>
       </li>
       <li>
        <a class="i_my_bookmarks" href="http://www.makeuseof.com/my-bookmarks/">
         My Bookmarks
        </a>
       </li>
       <li>
        <a class="i_tech_news_digest news" data-tid="6208" href="http://www.makeuseof.com/service/news/">
         Tech News
        </a>
       </li>
       <li class="with_children">
        <a class="i_the_internet wwweb" data-tid="-1" href="#">
         The Web
        </a>
        <ul>
         <li>
          <a class="i_the_internet web-based" data-tid="1" href="http://www.makeuseof.com/service/web-based/">
           Internet
          </a>
         </li>
         <li>
          <a class="i_the_internet social-media" data-tid="166" href="http://www.makeuseof.com/service/social-media/">
           Social Media
          </a>
         </li>
         <li>
          <a class="i_the_internet web-culture" data-tid="2324" href="http://www.makeuseof.com/service/web-culture/">
           Web Culture
          </a>
         </li>
         <li>
          <a class="i_the_internet browser" data-tid="80" href="http://www.makeuseof.com/service/browser/">
           Browsers
          </a>
         </li>
        </ul>
       </li>
       <li class="with_children">
        <a class="i_apps mobile apps" data-tid="-2" href="#">
         Mobile
        </a>
        <ul>
         <li>
          <a class="i_android google-android" data-tid="3624" href="http://www.makeuseof.com/service/google-android/">
           Android
          </a>
         </li>
         <li>
          <a class="i_ios ios" data-tid="3899" href="http://www.makeuseof.com/service/ios/">
           iOS
          </a>
         </li>
        </ul>
       </li>
       <li class="with_children">
        <a class="i_desktop_tips desktop-tips" data-tid="-3" href="#">
         Desktop
        </a>
        <ul>
         <li>
          <a class="i_windows windows" data-tid="77" href="http://www.makeuseof.com/service/windows/">
           Windows
          </a>
         </li>
         <li>
          <a class="i_mac_os mac" data-tid="76" href="http://www.makeuseof.com/service/mac/">
           Mac
          </a>
         </li>
         <li>
          <a class="i_linux linux" data-tid="73" href="http://www.makeuseof.com/service/linux/">
           Linux
          </a>
         </li>
        </ul>
       </li>
       <li>
        <a class="i_product_reviews product-reviews" data-tid="4458" href="http://www.makeuseof.com/service/product-reviews/">
         Product Reviews
        </a>
       </li>
       <li>
        <a class="i_smart_home smart-home" data-tid="4893" href="http://www.makeuseof.com/service/smart-home/">
         Smart Home
        </a>
       </li>
       <li>
        <a class="i_do_it_yourself diy-projects" data-tid="4884" href="http://www.makeuseof.com/service/diy-projects/">
         DIY
        </a>
       </li>
       <li>
        <a class="i_security_matters security" data-tid="4864" href="http://www.makeuseof.com/service/security/">
         Security
        </a>
       </li>
       <li>
        <a class="i_future_tech future-tech" data-tid="4888" href="http://www.makeuseof.com/service/future-tech/">
         Future Tech
        </a>
       </li>
       <li>
        <a class="i_gaming games" data-tid="862" href="http://www.makeuseof.com/service/games/">
         Gaming
        </a>
       </li>
       <li>
        <a class="i_tech_explained technology-explained" data-tid="3299" href="http://www.makeuseof.com/service/technology-explained/">
         Tech Explained
        </a>
       </li>
       <li>
        <a class="i_self_improvement self-improvement" data-tid="3706" href="http://www.makeuseof.com/service/self-improvement/">
         Self Improvement
        </a>
       </li>
       <li>
        <a class="i_creative creative" data-tid="4934" href="http://www.makeuseof.com/service/creative/">
         Creative
        </a>
       </li>
       <li>
        <a class="i_creative productivity" data-tid="6380" href="http://www.makeuseof.com/service/productivity/">
         Office Productivity
        </a>
       </li>
       <li>
        <a class="i_entertainment entertainment" data-tid="6389" href="http://www.makeuseof.com/service/entertainment/">
         Entertainment
        </a>
       </li>
       <li>
        <a class="i_finance finance" data-tid="6364" href="http://www.makeuseof.com/service/finance/">
         Finance
        </a>
       </li>
       <li>
        <a class="i_ask_a_question" href="http://www.makeuseof.com/answers/">
         Ask The Experts
        </a>
       </li>
       <li>
        <a class="i_deals deals" href="https://deals.makeuseof.com/" rel="nofollow">
         Deals
        </a>
       </li>
      </ul>
     </div>
     <!-- /mainmenu -->
     <div class="wdt_social">
      <ul>
       <li>
        <a class="i_facebook" href="https://www.facebook.com/makeuseof" target="_blank">
         <span>
          345k
         </span>
        </a>
       </li>
       <li>
        <a class="i_twitter" href="https://twitter.com/MakeUseOf" target="_blank">
         <span>
          120k
         </span>
        </a>
       </li>
       <li>
        <a class="i_gplus" href="https://plus.google.com/+makeuseof" target="_blank">
         <span>
          172k
         </span>
        </a>
       </li>
      </ul>
     </div>
     <!-- /wdt_social -->
    </div>
    <footer id="footer">
     <div class="bmenu">
      <ul>
       <li>
        <a href="http://www.makeuseof.com/about">
         About
        </a>
       </li>
       <li>
        <a href="http://www.makeuseof.com/advertise">
         Advertise
        </a>
       </li>
       <li>
        <a href="http://www.makeuseof.com/disclaimer/">
         Privacy
        </a>
       </li>
       <li>
        <a href="http://www.makeuseof.com/contact-team/">
         Contact
        </a>
       </li>
      </ul>
     </div>
    </footer>
   </div>
  </div>
  <!-- /site -->
  <div class="splash">
  </div>
  <form action="http://www.makeuseof.com/wp-admin/admin-ajax.php?action=redirect_helper" id="redirectHelper" method="POST">
   <input name="url" type="hidden" value="www.makeuseof.com/tag/getting-started-with-arduino-a-beginners-guide/"/>
   <textarea style="display: none;">
   </textarea>
  </form>
  <div id="fb-root">
  </div>
  <!--[if lt IE 10]&gt;
    &lt;script src="http://cdn.makeuseof.com/wp-content/themes/makeuseof2015/vendor/placeholder/jquery.placeholder.js?f35dd4"&gt;&lt;/script&gt;
    &lt;script&gt;
        $(document).ready(function(){
            $('input, textarea').placeholder();
        });
    &lt;/script&gt;
&lt;![endif]-->
  <!--[if lt IE 9]&gt;
    &lt;script src="http://cdn.makeuseof.com/wp-content/themes/makeuseof2015/vendor/others/js/html5shiv.js?f35dd4"&gt;&lt;/script&gt;
    &lt;script src="http://cdn.makeuseof.com/wp-content/themes/makeuseof2015/vendor/others/js/respond.min.js?f35dd4"&gt;&lt;/script&gt;
    &lt;link rel="stylesheet" href="http://cdn.makeuseof.com/wp-content/themes/makeuseof2015/css/ie8.css?f35dd4"&gt;
&lt;![endif]-->
  <!-- js globals -->
  <script type="text/javascript">
   var Makeuseof = {
        theme_url: "http://www.makeuseof.com/wp-content/themes/makeuseof2015",
        page_type: "single",
        timer_start: Date.now(),
        environment: "production",
        url: "http://www.makeuseof.com/tag/getting-started-with-arduino-a-beginners-guide/",
        current_page: "1",
        total_pages: "0",
        logged_in: false    };

    
    
    
    Makeuseof.category_slug = "";
    Makeuseof.category_tid = "";

    var admin_ajax_url = "http://www.makeuseof.com/wp-admin/admin-ajax.php";

            Makeuseof.post_id = "361662";
        Makeuseof.featured_image =  "http://cdn.makeuseof.com/wp-content/uploads/2014/07/f473e34fcc3f0182df96387cd6298717-150x150.jpg?f35dd4";
        Makeuseof.word_count = 5600;
  </script>
  <script id="hb_comments" type="text/x-handlebars-template">
   {{#each comments}}
    &lt;div class="item"&gt;
        &lt;div class="avatar"&gt;{{{../avatar}}}&lt;/div&gt;
        &lt;div class="date"&gt;{{date}}&lt;/div&gt;
        &lt;div class="comment_body"&gt;
            &lt;p&gt;{{{body}}}&lt;/p&gt;
        &lt;/div&gt;
        &lt;div class="to_post"&gt;&lt;a href="{{post.link}}"&gt;{{{post.title}}}&lt;/a&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    {{/each}}
  </script>
  <script id="hb_questions" type="text/x-handlebars-template">
   {{#each questions}}
    &lt;div class="item"&gt;
        &lt;div class="avatar"&gt;{{{../avatar}}}&lt;/div&gt;
        &lt;div class="date"&gt;{{date}}&lt;/div&gt;
        &lt;div class="comment_body"&gt;
            &lt;p&gt;{{{body}}}&lt;/p&gt;
        &lt;/div&gt;
        &lt;div class="to_post"&gt;&lt;a href="{{link}}"&gt;{{{title}}}&lt;/a&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    {{/each}}
  </script>
  <script id="hb_comment_form" type="text/x-handlebars-template">
   &lt;section class="comment-form-container"&gt;
        &lt;div class="blc_addanswer"&gt;
            &lt;form&gt;
                &lt;textarea name="comment" cols="30" rows="10"&gt;&lt;/textarea&gt;
                &lt;div class="controls"&gt;
                    &lt;input type="hidden" class="comment_post_ID" name="comment_post_ID" value="{{ post_id }}"&gt;
                    &lt;input type="hidden" class="comment_parent" name="comment_parent" value="{{ comment_parent_id }}"&gt;
                    &lt;button type="submit"
                        class="submit ladda-button"
                        data-style="expand-left"
                        data-size="medium"
                        data-spinner-size="30"
                        disabled=""
                        data-spinner-color="#fff"&gt;Post comment&lt;/button&gt;
                &lt;/div&gt;
            &lt;/form&gt;
        &lt;/div&gt;
    &lt;/section&gt;
  </script>
  <script id="hb_comment_item" type="text/x-handlebars-template">
   &lt;div itemprop="comment" itemscope itemtype="http://schema.org/UserComments" data-comment-id="{{ comment_id }}" id="comment-{{ comment_id }}" class="comment"&gt;
      &lt;div class="avatar"&gt;{{{ avatar }}}&lt;/div&gt;
      &lt;div itemscope itemprop="creator" itemtype="http://schema.org/Person" class="author"&gt;&lt;span itemprop="name"&gt;{{ author_name }}&lt;/span&gt;&lt;/div&gt;
      &lt;div class="date"&gt;&lt;a href="#"&gt;&lt;time itemprop="commentTime" datetime="{{ date }}"&gt;{{ date }}&lt;/time&gt;&lt;/a&gt;&lt;/div&gt;
      &lt;div class="comment_body" itemprop="commentText"&gt;
          &lt;p&gt;{{{ comment_content }}}&lt;/p&gt;
      &lt;/div&gt;
  &lt;/div&gt;
  </script>
  <script defer="" src="http://cdn.makeuseof.com/wp-content/themes/makeuseof2015/js/script.js?f35dd4">
  </script>
  <iframe id="loginFrame" src="https://www.makeuseof.com/wp-content/iframe.php">
  </iframe>
  <div aria-hidden="true" aria-labelledby="myModalLabel" class="modal fade login" id="modalSignin" role="dialog" tabindex="-1">
   <div class="modal-dialog">
    <div class="modal-content">
     <button class="close" data-dismiss="modal" type="button">
      <span aria-hidden="true">
       
      </span>
      <span class="sr-only">
       Close
      </span>
     </button>
     <div class="header">
      Login instanly using your social accounts or email
     </div>
     <div class="body">
      <div class="node" id="signin">
       <div class="alerts">
       </div>
       <div class="social">
        <ul>
         <li>
          <a class="i_facebook" data-provider="facebook" data-undistract="true" href="#">
          </a>
         </li>
         <li>
          <a class="i_gplus" data-provider="gplus" data-undistract="true" href="#">
          </a>
         </li>
         <li>
          <a class="i_email" data-provider="email" href="#">
          </a>
         </li>
        </ul>
       </div>
       <div class="seperate">
        or
       </div>
       <div class="forms">
        <form action="http://www.makeuseof.com/wp-login.php?redirect_to=http%3A%2F%2Fwww.makeuseof.com" id="signinForm" method="POST">
         <div class="items">
          <div class="item">
           <input name="log" placeholder="E-mail Address" type="text"/>
          </div>
          <div class="item">
           <input name="pwd" placeholder="Password" type="password"/>
          </div>
         </div>
         <div class="controls">
          <div class="remember">
           Don't have an account?
           <a class="register" href="#">
            Register
           </a>
          </div>
          <button class="ladda-button" data-size="medium" data-spinner-color="#fff" data-spinner-size="30" data-style="expand-left" type="submit">
           <span class="ladda-label">
            Log In
           </span>
          </button>
         </div>
        </form>
       </div>
       <div class="footer">
        <div class="lost">
         <a data-target="#modalResetPassword" data-toggle="modal" href="#">
          Lost your password?
         </a>
        </div>
        <div class="back">
         <a data-dismiss="modal" href="#">
           Back to MakeUseOf
         </a>
        </div>
       </div>
      </div>
      <div class="node" id="registration">
       <div class="forms">
        <form action="http://www.makeuseof.com/wp-login.php?action=register" id="registrationForm" method="POST">
         <div class="items">
          <div class="item">
           <input name="email" placeholder="E-mail Address" type="email"/>
          </div>
         </div>
         <div class="controls">
          <button class="ladda-button" data-size="medium" data-spinner-color="#fff" data-spinner-size="30" data-style="expand-left" type="submit">
           <span class="ladda-label">
            Register
           </span>
          </button>
         </div>
        </form>
       </div>
       <div class="footer">
        <div class="lost">
         <a data-target="#modalResendConfirmation" data-toggle="modal" href="#">
          Resend Confirmation Link
         </a>
        </div>
        <div class="back">
         <a data-dismiss="modal" href="#">
           Back to MakeUseOf
         </a>
        </div>
       </div>
      </div>
     </div>
    </div>
   </div>
  </div>
  <div aria-hidden="true" aria-labelledby="myModalLabel" class="modal fade login" id="modalResetPassword" role="dialog" tabindex="-1">
   <div class="modal-dialog">
    <div class="modal-content">
     <div class="body">
      <div class="description">
       <p>
        Please enter your email address.
       </p>
       <p>
        You will receive a link to create a new password via email.
       </p>
      </div>
      <div class="forms">
       <form action="http://www.makeuseof.com/wp-login.php?action=lostpassword" id="resetForm" method="POST">
        <div class="items">
         <div class="item">
          <input name="email" placeholder="E-mail Address" type="email"/>
         </div>
        </div>
        <div class="controls">
         <button class="ladda-button" data-size="medium" data-spinner-color="#fff" data-spinner-size="30" data-style="expand-left" type="submit">
          <span class="ladda-label">
           Get new password
          </span>
         </button>
        </div>
       </form>
      </div>
     </div>
    </div>
   </div>
  </div>
  <div aria-hidden="true" aria-labelledby="myModalLabel" class="modal fade login" id="modalResendConfirmation" role="dialog" tabindex="-1">
   <div class="modal-dialog">
    <div class="modal-content">
     <div class="body">
      <div class="description">
       <p>
        Please enter your email address.
       </p>
       <p>
        You will receive a confirmation link.
       </p>
      </div>
      <div class="forms">
       <form id="resendConfirmationForm">
        <div class="items">
         <div class="item">
          <input name="email" placeholder="E-mail Address" type="email"/>
         </div>
        </div>
        <div class="controls">
         <button class="ladda-button" data-size="medium" data-spinner-color="#fff" data-spinner-size="30" data-style="expand-left" type="submit">
          <span class="ladda-label">
           Resend Confirmation Link
          </span>
         </button>
        </div>
       </form>
      </div>
     </div>
    </div>
   </div>
  </div>
  <div aria-hidden="true" aria-labelledby="askSitewideModalLabel" class="modal fade" id="askSitewideModal" role="dialog" tabindex="-1">
   <div class="modal-dialog" role="document">
    <div class="modal-content">
     <button class="close" data-dismiss="modal" type="button">
      <span aria-hidden="true">
       
      </span>
      <span class="sr-only">
       Close
      </span>
     </button>
     <div class="blc_askquestion">
     </div>
     <!-- /blc_askquestion -->
    </div>
   </div>
  </div>
  <script async="" src="//cdn.goroost.com/roostjs/4a2bf2e010e04be8b1dd8e2845a0593c">
  </script>
  <script>
   var _roost = _roost || [];
                _roost.push( [ 'autoprompt', false ] );
                                    _roost.push( [ 'minvisits', 3 ] );
  </script>
 </body>
 <script type="text/javascript">
  var vglnk = { api_url: '//api.viglink.com/api',
  key: '0d8d9af05d1abe663696ac39935d3f6b' };

  (function(d, t) {
  var s = d.createElement(t); s.type = 'text/javascript'; s.async = true;
  s.src = ('https:' == document.location.protocol ? vglnk.api_url :
  '//cdn.viglink.com/api') + '/vglnk.js';
  var r = d.getElementsByTagName(t)[0]; r.parentNode.insertBefore(s, r);
  }(document, 'script'));
 </script>
 <!-- /1065821/Premium_1x1 -->
 <div id="div-gpt-ad-1434132493076-0" style="height:1px; width:1px;">
  <script type="text/javascript">
   googletag.cmd.push(function() { googletag.display('div-gpt-ad-1434132493076-0'); });
  </script>
 </div>
 <!-- USER FEEDBACK FORM -->
 <script type="text/javascript">
  (function(d, t){
if(window.location.hash!='#gleam'&amp;&amp;(''+document.cookie).match(/(^|;)s*GleamZemOQ=X($|;)/)){return;}
var g = d.createElement(t), s = d.getElementsByTagName(t)[0];
g.src = "https://js.gleam.io/ZemOQ/ol.js"; s.parentNode.insertBefore(g, s);
}(document, "script"));
 </script>
</html>
<!-- Performance optimized by W3 Total Cache. Learn more: http://www.w3-edge.com/wordpress-plugins/

Minified using memcached
Page Caching using memcached
Database Caching 23/72 queries in 0.064 seconds using memcached
Object Caching 1305/1424 objects using memcached
Content Delivery Network via cdn.makeuseof.com

 Served from: www.makeuseof.com @ 2015-07-14 19:55:34 by W3 Total Cache -->
