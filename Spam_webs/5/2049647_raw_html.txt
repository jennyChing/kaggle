<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html dir="ltr" id="vbulletin_html" lang="en" xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <base href="http://www.progamercity.net/"/>
  <!--[if IE]&gt;&lt;/base&gt;&lt;![endif]-->
  <link href="http://www.progamercity.net/code-tut/366-asm-iat-hooking.html" rel="canonical"/>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <meta content="http://www.progamercity.net" id="e_vb_meta_bburl" name="vb_meta_bburl"/>
  <meta content="index,follow" name="robots"/>
  <meta content="ProGamerCity.net" name="copyright"/>
  <meta content="ProGamerCity" name="author"/>
  <meta content="en-gb" http-equiv="content-language"/>
  <meta content="745e6299263a2c38" name="yandex-verification"/>
  <meta content="TRUE" name="MSSmartTagsPreventParsing"/>
  <link href="http://www.progamercity.net/favicon.ico" rel="Shortcut Icon" type="image/x-icon"/>
  <link href="http://www.progamercity.net/favicon.ico" rel="icon" type="image/vnd.microsoft.icon"/>
  <script src="http://ajax.googleapis.com/ajax/libs/yui/2.9.0/build/yuiloader-dom-event/yuiloader-dom-event.js?v=415" type="text/javascript">
  </script>
  <script src="http://ajax.googleapis.com/ajax/libs/yui/2.9.0/build/connection/connection-min.js?v=415" type="text/javascript">
  </script>
  <script type="text/javascript">
   &lt;!--
		var SESSIONURL = "s=a734aa158acc6c26dd36bd1bf6d1ec8b&amp;";
		var SECURITYTOKEN = "guest";
		var IMGDIR_MISC = "images/styles/pgcsilver/misc";
		var IMGDIR_BUTTON = "images/styles/pgcsilver/buttons";
		var vb_disable_ajax = parseInt("0", 10);
		var SIMPLEVERSION = "415";
		var BBURL = "http://www.progamercity.net";
		var LOGGEDIN = 0 &gt; 0 ? true : false;
		var THIS_SCRIPT = "showthread";
		var RELPATH = "showthread.php?t=366";
		var PATHS = {forum : ""}
	// --&gt;
  </script>
  <script src="http://www.progamercity.net/clientscript/vbulletin-core.js?v=415" type="text/javascript">
  </script>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js" type="text/javascript">
  </script>
  <script type="text/javascript">
   &lt;!--
$(document).ready(function() {
    $(".forumtitle a").hover(function() {
        //tip2 = $(this).parent().parent().parent().find(".forumtip");
		tip2 = $(this).parent().attr("id");
		var posX =  $(this).outerWidth(true) + 20;
        $("#s"+tip2).css("margin-left", posX).stop(true, true).fadeIn(100);
		
        }, function() {
        $("#s"+tip2).stop(true, true).fadeOut(100);
        });
}); 
// --&gt;
  </script>
  <link href="http://www.progamercity.net/external.php?type=RSS2" rel="alternate" title="Games Research Community RSS Feed" type="application/rss+xml"/>
  <link href="http://www.progamercity.net/external.php?type=RSS2&amp;forumids=20" rel="alternate" title="Games Research Community - Programming Tutorials - RSS Feed" type="application/rss+xml"/>
  <link href="http://www.progamercity.net/clientscript/vbulletin_css/style00005l/main-rollup.css?d=1371263427" rel="stylesheet" type="text/css"/>
  <!--[if lt IE 8]&gt; &lt;link rel="stylesheet" type="text/css" href="http://www.progamercity.net/clientscript/vbulletin_css/style00005l/popupmenu-ie.css?d=1371263427" /&gt; &lt;link rel="stylesheet" type="text/css" href="http://www.progamercity.net/clientscript/vbulletin_css/style00005l/vbulletin-ie.css?d=1371263427" /&gt; &lt;link rel="stylesheet" type="text/css" href="http://www.progamercity.net/clientscript/vbulletin_css/style00005l/vbulletin-chrome-ie.css?d=1371263427" /&gt; &lt;link rel="stylesheet" type="text/css" href="http://www.progamercity.net/clientscript/vbulletin_css/style00005l/vbulletin-formcontrols-ie.css?d=1371263427" /&gt; &lt;link rel="stylesheet" type="text/css" href="http://www.progamercity.net/clientscript/vbulletin_css/style00005l/editor-ie.css?d=1371263427" /&gt; &lt;![endif]-->
  <!-- Additional js -->
  <script type="text/javascript">
   var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-17306087-1']);
  _gaq.push(['_trackPageview']);
  _gaq.push(['_trackPageLoadTime']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
  </script>
  <script src="http://yui.yahooapis.com/combo?2.8.0r4/build/selector/selector-min.js&amp;2.8.0r4/build/event-delegate/event-delegate-min.js&amp;2.8.0r4/build/animation/animation-min.js" type="text/javascript">
  </script>
  <script src="http://www.progamercity.net/clientscript/vsqspoiler.js" type="text/javascript">
  </script>
  <link href="http://www.progamercity.net/clientscript/vbulletin_css/style00005l/vsq_spoiler.css" rel="stylesheet" type="text/css"/>
  <script src="http://www.progamercity.net/clientscript/post_thanks.js" type="text/javascript">
  </script>
  <style type="text/css">
   .postbitlegacy .postfoot .textcontrols a.post_thanks_button, .postbit .postfoot .textcontrols a.post_thanks_button  {
	background: url(images/styles/pgcsilver/buttons/post_thanks.png) no-repeat transparent left;
	padding-left: 20px;
}
.postbitlegacy .postfoot .textcontrols a.post_thanks_button:hover, .postbit .postfoot .textcontrols a.post_thanks_button:hover  {
	background: url(images/styles/pgcsilver/buttons/post_thanks-hover.png) no-repeat transparent left;
  </style>
  <meta content="Asm,IAT,Hooking,dword, address, function, push, call, fxn_addr, table, bytes, invoke, option, myfunc, code, exitprocess, include, text, entry, caption, stack, import, addr, eax,[eax], start, thunk, includelib, arguments, .data, format, offset, executable, messagebox, instruction, proc, endp, iat_entry_addr, hook, proc_addr, pointer, my_proc, dynamic, frame, jump, virtual, trampoline, virtualprotect, linker, [eax], module, prologuenone, hooking, eax,5" name="keywords"/>
  <meta content="IAT Hooking This tutorial teaches you how to do IAT hooking on your own module. Each module in a portable executable has its own IAT. Originally" name="description"/>
  <title>
   [Asm] IAT Hooking - Programming Tutorials - Games Research Community
  </title>
  <link href="http://www.progamercity.net/code-tut/366-asm-iat-hooking.html" rel="canonical"/>
  <link href="http://www.progamercity.net/clientscript/vbulletin_css/style00005l/showthread-rollup.css?d=1371263427" rel="stylesheet" type="text/css"/>
  <!--[if lt IE 8]&gt;&lt;link rel="stylesheet" type="text/css" href="http://www.progamercity.net/clientscript/vbulletin_css/style00005l/toolsmenu-ie.css?d=1371263427" /&gt; &lt;link rel="stylesheet" type="text/css" href="http://www.progamercity.net/clientscript/vbulletin_css/style00005l/postlist-ie.css?d=1371263427" /&gt; &lt;link rel="stylesheet" type="text/css" href="http://www.progamercity.net/clientscript/vbulletin_css/style00005l/showthread-ie.css?d=1371263427" /&gt; &lt;link rel="stylesheet" type="text/css" href="http://www.progamercity.net/clientscript/vbulletin_css/style00005l/postbit-ie.css?d=1371263427" /&gt; &lt;link rel="stylesheet" type="text/css" href="http://www.progamercity.net/clientscript/vbulletin_css/style00005l/poll-ie.css?d=1371263427" /&gt;&lt;![endif]-->
  <link href="http://www.progamercity.net/clientscript/vbulletin_css/style00005l/additional.css?d=1371263427" rel="stylesheet" type="text/css"/>
  <script src="http://www.progamercity.net/clientscript/ncode_imageresizer_v1.5.js" type="text/javascript">
  </script>
  <script type="text/javascript">
   &lt;!--
NcodeImageResizer.MODE = 'newwindow';
NcodeImageResizer.MAXWIDTH = '800';
NcodeImageResizer.MAXHEIGHT = '0';
NcodeImageResizer.BBURL = 'http://www.progamercity.net';

vbphrase['ncode_imageresizer_warning_small'] = 'Click here to view the full image.';
vbphrase['ncode_imageresizer_warning_filesize'] = 'Click here to view the original image of %1$sx%2$spx and %3$sKB.';
vbphrase['ncode_imageresizer_warning_no_filesize'] = 'Click here to view the original image of %1$sx%2$spx.';
vbphrase['ncode_imageresizer_warning_fullsize'] = 'Click here to view the small image.';
// --&gt;
  </script>
  <style type="text/css">
   .brTag1 {
  height: 0px;
  font-size: 0px;}

textarea.ncode_imageresizer_warning {
  font-size: 11px;
  font-family: Verdana, Arial, Helvetica, sans-serif;
  background: #FFFACD url(images/misc/nCode.png) 6px 6px no-repeat;
  color: #4F4300;
  border: 1px solid #FFEC7D;
  padding: 6px 0px 6px 30px;
  margin-top: 12px;
  height:27px !important;
  cursor: pointer;
  resize: none;
  overflow:hidden;
  -moz-border-radius: 6px 6px 0px 0px;
  -webkit-border-radius: 6px 6px 0px 0px;
  border-radius: 6px 6px 0px 0px;}
  </style>
 </head>
 <body>
  <div id="wrapper">
   <div id="wrapper-a">
    <div class="above_body">
     <div class="floatcontainer doc_header" id="header">
      <!-- Header logo -->
      <div id="header-logo">
       <a class="logo-image" href="http://www.progamercity.net" name="top">
        <img alt="Mmo,cheats,bugs.Writing bots,trainers.Perfect World, WoW, Requiem, DragonNest,Aika, Forsaken World,BOI, Aion,Lineage.Professional coder,programming,debugging. Game Guides, tutorials" src="http://www.progamercity.net/images/styles/pgcsilver/elements/logo.png"/>
       </a>
      </div>
      <!-- end Header logo -->
      <!-- Main header links  -->
      <div id="header-links">
       <div class="toplinks" id="toplinks">
        <!-- 
			&lt;div id="soc-top" &gt;&lt;span id="soc-top-title"&gt;&lt;/span&gt;&lt;g:plusone href="http://www.progamercity.net" size="medium"&gt;&lt;/g:plusone&gt; &lt;script language="javascript" type="text/javascript"&gt;//&lt;![CDATA[
					document.write('&lt;fb:fan connections="0" css="http://www.eli.com/css/facebookfanbutton.css?8" height="26" name="platform" profile_id="148087628597681" stream="0" width="90"&gt;&lt;/fb:fan&gt;');
				//]]&gt;&lt;/script&gt; &lt;/div&gt;-->
        <script type="text/javascript">
         &lt;!--
				$(document).ready(function() {
					$('#login-link').click(function(e) {
						//Cancel the link behavior
						e.preventDefault();
					
						//Get the screen height and width
						var maskHeight = $(document).height();
						var maskWidth = $(window).width();
					
						//Set heigth and width to mask to fill up the whole screen
						$('#popup-mask').css({'width':maskWidth,'height':maskHeight});
						
						//transition effect		
						$('#popup-mask').fadeIn(200);	
						$('#popup-mask').fadeTo("slow",0.8);	

						//transition effect
						$('#login-popup').fadeIn(100); 

					});
					
					//if close button is clicked
					$('#login-topbut').click(function (e) {
						//Cancel the link behavior
						e.preventDefault();
						
						$('#popup-mask').fadeOut(200);
						$('#login-popup').fadeOut(200); 
					});		
					
					//if mask is clicked
					$('#popup-mask').click(function () {
						$(this).fadeOut(200);
						/* $('#login-popup').hide(); */
						$('#login-popup').fadeOut(200); 
					});				
				}); 
// --&gt;
        </script>
        <ul class="nouser">
         <li id="loginli">
          <a href="http://www.progamercity.net/register.php" id="login-link" rel="nofollow">
           Register
          </a>
          <div id="login-popup">
           <div id="login-topbut">
           </div>
           <div id="login-main">
            <div id="login-sidebar">
             <div class="login-sidebar-l" style="border-top: 1px solid #DDD;border-bottom: 1px solid #DDD">
              <div class="ls-btn">
               !
              </div>
              <a href="http://www.progamercity.net/register.php" rel="nofollow" title="Register">
               <span class="ls-title">
                Register
               </span>
               <span class="ls-inf">
                I dont have an account
               </span>
              </a>
             </div>
             <div class="login-sidebar-l">
              <div class="ls-btn">
               ?
              </div>
              <a href="/login.php?do=lostpw" rel="nofollow" title="Register">
               <span class="ls-title">
                Forgot
               </span>
               <span class="ls-inf">
                I dont have an account
               </span>
              </a>
             </div>
            </div>
            <form action="http://www.progamercity.net/login.php?do=login" id="navbar_loginform" method="post" onsubmit="md5hash(vb_login_password, vb_login_md5password, vb_login_md5password_utf, 0)">
             <span id="navbar_loginform-t1">
             </span>
             <div class="logindetails" id="logindetails">
              <div class="ctrlUnit">
               <input accesskey="u" class="textbox default-value input-login" id="navbar_username" name="vb_login_username" size="10" tabindex="101" type="text" value="User Name"/>
              </div>
              <div class="ctrlUnit">
               <input class="textbox default-value input-password" id="navbar_password_hint" name="vb_login_password_hint" size="10" style="display:none;" tabindex="102" type="text" value="Password"/>
               <input class="textbox input-password" id="navbar_password" name="vb_login_password" size="10" tabindex="102" type="password"/>
              </div>
              <div>
               <label for="cb_cookieuser_navbar">
                <input accesskey="c" class="cb_cookieuser_navbar" id="cb_cookieuser_navbar" name="cookieuser" tabindex="103" type="checkbox" value="1"/>
                Remember Me?
               </label>
               <input accesskey="s" class="button large green" tabindex="104" title="Enter your username and password in the boxes provided to login, or click the 'register' button to create a profile for yourself." type="submit" value="Log in"/>
              </div>
              <div class="remember" id="remember">
              </div>
             </div>
             <input name="s" type="hidden" value="a734aa158acc6c26dd36bd1bf6d1ec8b"/>
             <input name="securitytoken" type="hidden" value="guest"/>
             <input name="do" type="hidden" value="login"/>
             <input name="vb_login_md5password" type="hidden"/>
             <input name="vb_login_md5password_utf" type="hidden"/>
            </form>
           </div>
          </div>
         </li>
         <li>
          <script src="http://www.progamercity.net/clientscript/vbulletin_md5.js?v=415" type="text/javascript">
          </script>
          <script type="text/javascript">
           YAHOO.util.Dom.setStyle('navbar_password_hint', "display", "inline");
				YAHOO.util.Dom.setStyle('navbar_password', "display", "none");
				vB_XHTML_Ready.subscribe(function()
				{
				//
					YAHOO.util.Event.on('navbar_username', "focus", navbar_username_focus);
					YAHOO.util.Event.on('navbar_username', "blur", navbar_username_blur);
					YAHOO.util.Event.on('navbar_password_hint', "focus", navbar_password_hint);
					YAHOO.util.Event.on('navbar_password', "blur", navbar_password);
				});
				
				function navbar_username_focus(e)
				{
				//
					var textbox = YAHOO.util.Event.getTarget(e);
					if (textbox.value == 'User Name')
					{
					//
						textbox.value='';
						textbox.style.color='#303030';
					}
				}

				function navbar_username_blur(e)
				{
				//
					var textbox = YAHOO.util.Event.getTarget(e);
					if (textbox.value == '')
					{
					//
						textbox.value='User Name';
						textbox.style.color='#828282';
					}
				}
				
				function navbar_password_hint(e)
				{
				//
					var textbox = YAHOO.util.Event.getTarget(e);
					
					YAHOO.util.Dom.setStyle('navbar_password_hint', "display", "none");
					YAHOO.util.Dom.setStyle('navbar_password', "display", "inline");
					YAHOO.util.Dom.get('navbar_password').focus();
				}

				function navbar_password(e)
				{
					var textbox = YAHOO.util.Event.getTarget(e);
					
					if (textbox.value == '')
					{
						YAHOO.util.Dom.setStyle('navbar_password_hint', "display", "inline");
						YAHOO.util.Dom.setStyle('navbar_password', "display", "none");
					}
				}
          </script>
         </li>
        </ul>
       </div>
       <div class="navbar" id="navbar">
        <ul class="navtabs floatcontainer" id="navtabs">
         <li class="selected">
          <a class="navtab" href="http://www.progamercity.net/forum.php">
           Forum
          </a>
         </li>
         <li>
          <a accesskey="2" class="navtab" href="http://www.progamercity.net/search.php?do=getdaily&amp;contenttype=vBForum_Post">
           What's New?
          </a>
         </li>
        </ul>
        <div class="ad_global_header">
        </div>
       </div>
      </div>
      <!-- end main header links  -->
     </div>
     <!-- div for header -->
     <div id="navsub">
      <!-- div for nav sub -->
      <ul class="floatcontainer">
       <li>
        <a accesskey="5" href="http://www.progamercity.net/faq.php" rel="help">
         FAQ
        </a>
       </li>
       <li>
        <a href="http://www.progamercity.net/calendar.php">
         Calendar
        </a>
       </li>
       <li class="popupmenu">
        <a class="popupctrl" href="javascript://">
         Forum Actions
        </a>
        <ul class="popupbody popuphover">
         <li>
          <a href="http://www.progamercity.net/forumdisplay.php?do=markread&amp;markreadhash=guest" onclick="return confirm('Are you sure you want to mark all forums as being read? This cannot be undone.')" rel="nofollow">
           Mark Forums Read
          </a>
         </li>
        </ul>
       </li>
       <li class="popupmenu">
        <a accesskey="3" class="popupctrl" href="javascript://">
         Quick Links
        </a>
        <ul class="popupbody popuphover">
         <li>
          <a href="http://www.progamercity.net/showgroups.php" rel="nofollow">
           View Forum Leaders
          </a>
         </li>
        </ul>
       </li>
       <li>
        <a href="http://www.progamercity.net/misc.php?do=vsarules" rel="nofollow" style="color:#884444">
         Forum Rules
        </a>
       </li>
      </ul>
      <div class="globalsearch" id="globalsearch">
       <form action="http://www.progamercity.net/search.php?do=process" class="navbar_search" id="navbar_search" method="post">
        <input name="securitytoken" type="hidden" value="guest"/>
        <input name="do" type="hidden" value="process"/>
        <div class="textboxcontainer">
         <input class="textbox" name="query" tabindex="99" type="text" value=""/>
        </div>
        <div class="buttoncontainer">
         <input class="searchbutton" name="submit" src="images/styles/pgcsilver/buttons/search.png" tabindex="100" type="submit"/>
        </div>
        <div class="buttoncontainer">
         <a accesskey="4" class="adv-search" href="http://www.progamercity.net/search.php">
          Advanced Search
         </a>
        </div>
       </form>
      </div>
     </div>
     <!-- div for nav sub -->
    </div>
    <!-- closing div for above_body -->
    <div class="body_wrapper">
     <div class="breadcrumb" id="breadcrumb">
      <ul class="floatcontainer">
       <li class="navbithome">
        <a accesskey="1" href="http://www.progamercity.net/forum.php">
         <img alt="Home" src="http://www.progamercity.net/images/styles/pgcsilver/misc/navbit-home.png"/>
        </a>
       </li>
       <li class="navbit">
        <a href="http://www.progamercity.net/forum.php">
         Forum
        </a>
       </li>
       <li class="navbit">
        <a href="http://www.progamercity.net/forum.php#game-research-programming">
         Game Research and Programming
        </a>
       </li>
       <li class="navbit">
        <a href="http://www.progamercity.net/code-specific/">
         General Programming
        </a>
       </li>
       <li class="navbit">
        <a href="http://www.progamercity.net/code-tut/">
         Programming Tutorials
        </a>
       </li>
       <li class="navbit lastnavbit">
        <span>
         [Asm] IAT Hooking
        </span>
       </li>
      </ul>
      <hr/>
     </div>
     <div id="ad_global_below_navbar">
      <div style="padding:20px;text-align:center;">
       <script type="text/javascript">
        &lt;!--
google_ad_client = "ca-pub-1203900138634415";
/* header */
google_ad_slot = "1372144256";
google_ad_width = 728;
google_ad_height = 90;
//--&gt;
       </script>
       <script src="http://pagead2.googlesyndication.com/pagead/show_ads.js" type="text/javascript">
       </script>
      </div>
     </div>
     <script type="text/javascript">
      &lt;!--
// Paul M - Doublepost Modification //

function qr_do_ajax_post(ajax)
{if(ajax.responseXML)
{vB_Editor[QR_EditorID].initialize();document.body.style.cursor='auto';YAHOO.util.Dom.addClass("qr_posting_msg","hidden");
var i;if(fetch_tag_count(ajax.responseXML,'postbit'))
{qr_reset();vB_Editor[QR_EditorID].hide_autosave_button()
ajax_last_post=ajax.responseXML.getElementsByTagName('time')[0].firstChild.nodeValue;qr_disable_controls();qr_hide_errors();
if(fetch_tag_count(ajax.responseXML,'updatepost'))
{var postbit=ajax.responseXML.getElementsByTagName('postbit')[0].firstChild.nodeValue;var updated=ajax.responseXML.getElementsByTagName('updatepost')[0].firstChild.nodeValue;
var node=YAHOO.util.Dom.get("post_"+updated);node.parentNode.replaceChild(string_to_node(postbit),node);node.scrollIntoView(false);}
else
{var postbits=ajax.responseXML.getElementsByTagName('postbit');for(i=0;i&lt;postbits.length;i++)
{var newdiv=document.createElement('div');newdiv.innerHTML=postbits[i].firstChild.nodeValue;
var newpost=newdiv.getElementsByTagName('li')[0];var posts=YAHOO.util.Dom.get('posts');if(newpost)
{var postbit=posts.appendChild(newpost);PostBit_Init(postbit,postbits[i].getAttribute('postid'));newpost.scrollIntoView(false);}}}
if(typeof mq_unhighlight_all=='function')
{mq_unhighlight_all();}
if(fetch_object('qr_submit'))
{fetch_object('qr_submit').blur();}}
else
{if(!is_saf)
{var errors=ajax.responseXML.getElementsByTagName('error');if(errors.length)
{var error_html='&lt;ol&gt;';for(i=0;i&lt;errors.length;i++)
{error_html+='&lt;li&gt;'+errors[i].firstChild.nodeValue+'&lt;/li&gt;';}
error_html+='&lt;/ol&gt;';qr_show_errors(error_html);return false;}}
qr_resubmit();}}
else
{qr_resubmit();}}

//--&gt;
     </script>
     <div class="above_postlist" id="above_postlist">
      <a class="newcontent_textcontrol" href="http://www.progamercity.net/newreply.php?p=3119&amp;noquote=1" id="newreplylink_top" rel="nofollow">
       <span>
        +
       </span>
       Reply to Thread
      </a>
      <img alt="" id="progress_newreplylink_top" src="http://www.progamercity.net/images/styles/pgcsilver/misc/progress.gif" style="display:none"/>
      <div class="pagination_top" id="pagination_top">
       <div class="postpagestats" id="postpagestats_above">
        Results 1 to 2 of 2
       </div>
      </div>
     </div>
     <div class="pagetitle" id="pagetitle">
      <h1>
       Thread:
       <span class="threadtitle">
        <a href="http://www.progamercity.net/code-tut/366-asm-iat-hooking.html" title="Reload this Page">
         [Asm] IAT Hooking
        </a>
       </span>
      </h1>
      <span id="fb-root">
      </span>
      <script src="//connect.facebook.net/en_US/all.js#appId=227382284000811&amp;xfbml=1" type="text/javascript">
      </script>
      <fb:like action="like" colorscheme="light" font="tahoma" href="http://www.progamercity.net/showthread.php?t=366" layout="standard" show_faces="false" width="260">
      </fb:like>
     </div>
     <div class="thread_controls toolsmenu" id="thread_controls">
      <div>
       <ul class="postlist_popups popupgroup" id="postlist_popups">
        <li class="popupmenu" id="threadtools">
         <h6>
          <a class="popupctrl" href="javascript://">
           Thread Tools
          </a>
         </h6>
         <ul class="popupbody popuphover">
          <li>
           <a accesskey="3" href="http://www.progamercity.net/code-tut/366-asm-iat-hooking-print.html" rel="nofollow">
            Show Printable Version
           </a>
          </li>
          <li>
           <a href="http://www.progamercity.net/sendmessage.php?do=sendtofriend&amp;t=366" rel="nofollow">
            Email this Page
           </a>
          </li>
          <li>
           <a href="http://www.progamercity.net/subscription.php?do=addsubscription&amp;t=366" rel="nofollow">
            Subscribe to this Thread
           </a>
          </li>
         </ul>
        </li>
        <li class="popupmenu" id="displaymodes">
         <h6>
          <a class="popupctrl" href="javascript://">
           Display
          </a>
         </h6>
         <ul class="popupbody popuphover">
          <li>
           <label>
            Linear Mode
           </label>
          </li>
          <li>
           <a href="http://www.progamercity.net/code-tut/366-asm-iat-hooking.html?mode=hybrid" rel="nofollow">
            Switch to Hybrid Mode
           </a>
          </li>
          <li>
           <a href="http://www.progamercity.net/code-tut/366-asm-iat-hooking.html?mode=threaded#post3005" rel="nofollow">
            Switch to Threaded Mode
           </a>
          </li>
         </ul>
        </li>
       </ul>
      </div>
     </div>
     <div class="postlist restrain" id="postlist">
      <ol class="posts" id="posts" start="1">
       <li class="postbitlegacy postbitim postcontainer" id="post_3005">
        <!-- see bottom of postbit.css for .userinfo .popupmenu styles -->
        <div class="posthead">
         <span class="postdate old">
          <span class="date">
           2010-09-10
           <span class="time">
            12:50 PM
           </span>
          </span>
         </span>
         <span class="nodecontrols">
          <a class="postcounter" href="http://www.progamercity.net/code-tut/366-asm-iat-hooking.html#post3005" name="post3005">
           #1
          </a>
          <a id="postcount3005" name="1">
          </a>
         </span>
        </div>
        <div class="postdetails">
         <div class="userinfo">
          <div class="username_container">
           <a class="username offline popupctrl" href="http://www.progamercity.net/members/dwar-3.html" rel="nofollow" title="Dwar">
            <strong>
             <span style="color:#c10000">
              Dwar
             </span>
            </strong>
           </a>
           <img alt="Dwar is offline" border="0" class="inlineimg onlinestatus" src="http://www.progamercity.net/images/styles/pgcsilver/statusicon/user-offline.png"/>
          </div>
          <span class="usertitle">
           Veteran
          </span>
          <span class="rank">
           <img alt="" border="" src="http://www.progamercity.net/images/ranks/administrator.png"/>
          </span>
          <span class="postbit_reputation" id="repdisplay_3005_3">
           <img alt="Dwar is on a distinguished road" class="repimg" src="http://www.progamercity.net/images/reputation/reputation_pos.png"/>
          </span>
          <a class="postuseravatar" href="http://www.progamercity.net/members/dwar-3.html" rel="nofollow" title="Dwar is offline">
           <img alt="Dwar's Avatar" src="http://www.progamercity.net/addons/c_avatars/avatar3_10.gif" title="Dwar's Avatar"/>
          </a>
          <hr/>
          <dl class="userinfo_extra">
           <dt>
            Join Date
           </dt>
           <dd>
            2010 Mar
           </dd>
           <dt>
            Posts
           </dt>
           <dd>
            2,214
           </dd>
           <dt>
            Thanks
           </dt>
           <dd>
            210
           </dd>
           <dd style="white-space:nowrap; display:inline; float: right;">
            Thanked 2,220 Times in 286 Posts
           </dd>
          </dl>
          <dl class="user_rep">
           <dt>
            Rep Power
           </dt>
           <dd id="reppower_3005_3">
            10
           </dd>
          </dl>
          <div class="imlinks">
          </div>
         </div>
         <div class="postbody">
          <div class="postrow has_after_content">
           <h2 class="title icon">
            [Asm] IAT Hooking
           </h2>
           <div class="content">
            <div id="post_message_3005">
             <blockquote class="postcontent restore ">
              <font size="4">
               <b>
                <font color="chocolate">
                 <div style="text-align: center;">
                  IAT Hooking
                 </div>
                </font>
               </b>
              </font>
              <br/>
              This tutorial teaches you how to do IAT hooking on your own module. Each module in a portable executable has its own IAT.
              <br/>
              <div class="bbcode_container">
               <div class="bbcode_quote">
                <div class="quote_container">
                 <div class="bbcode_quote_container">
                 </div>
                 <div class="bbcode_postedby">
                  <img alt="Quote" src="http://www.progamercity.net/images/styles/pgcsilver/misc/quote_icon.png"/>
                  Originally Posted by
                  <strong>
                   wiki
                  </strong>
                 </div>
                 <div class="message">
                  <b>
                   Import Table
                  </b>
                  <br/>
                  One section of note is the import address table (IAT), which is used as a lookup table when the application is calling a function in a different module. It can be in form of both import by ordinal and import by name. Because a compiled program cannot know the memory location of the libraries it depends upon, an indirect jump is required whenever an API call is made. As the dynamic linker loads modules and joins them together, it writes jump instructions into the IAT slots, so that they point to the memory locations of the corresponding library functions. Though this adds an extra jump over the cost of an intra-module call resulting in a performance penalty, it provides a key benefit: dynamic libraries are much more flexible and reduce code redundancy (which would occur if common libraries had to be linked statically to each program). If the compiler knows ahead of time that a call will be inter-module (via a dllimport attribute) it can produce more optimized code that simply results in an indirect call opcode.
                  <br/>
                  <br/>
                  Texe and LordPE are tools that can be used to view the Import and Export tables of PE Files.
                 </div>
                </div>
               </div>
              </div>
              In fact, it is not that hard to hook the IAT of another module if you have a good knowledge of the PE format.
              <div class="bbcode_container">
               <div class="bbcode_quote">
                <div class="quote_container">
                 <div class="bbcode_quote_container">
                 </div>
                 <div class="bbcode_postedby">
                  <img alt="Quote" src="http://www.progamercity.net/images/styles/pgcsilver/misc/quote_icon.png"/>
                  Originally Posted by
                  <strong>
                   wiki
                  </strong>
                 </div>
                 <div class="message">
                  The Portable Executable (PE) format is a file format for executables, object code and DLLs, used in 32-bit and 64-bit versions of Windows operating systems. The term "portable" refers to the format's versatility in numerous environments of operating system software architecture. The PE format is a data structure that encapsulates the information necessary for the Windows OS loader to manage the wrapped executable code. This includes dynamic library references for linking, API export and import tables, resource management data and thread-local storage (TLS) data. On NT operating systems, the PE format is used for EXE, DLL, OBJ, SYS (device driver), and other file types. The Extensible Firmware Interface (EFI) specification states that PE is the standard executable format in EFI environments.
                 </div>
                </div>
               </div>
              </div>
              Straight into it :
              <br/>
              <div class="divcode">
               <pre class="brush: asm">
                .486
                <br/>
                .model flat,stdcall
                <br/>
                option casemap:none
                <br/>
                option epilogue:none
                <br/>
                option prologue:none
                <br/>
                include masm32includewindows.inc
                <br/>
                include masm32includeuser32.inc
                <br/>
                include masm32includekernel32.inc
                <br/>
                includelib masm32libuser32.lib
                <br/>
                includelib masm32libkernel32.lib
                <br/>
                <br/>
                myfunc proto :DWORD, :DWORD, :DWORD, :DWORD
                <br/>
                <br/>
                .DATA
                <br/>
                <br/>
                Caption         db "Success !",0
                <br/>
                Text             db "Called successfully via trampoline",0
                <br/>
                <br/>
                .DATA?
                <br/>
                <br/>
                fxn_addr    dword   ?
                <br/>
                <br/>
                .CODE
                <br/>
                <br/>
                start:
                <br/>
                <br/>
                xor ebx,ebx
                <br/>
                mov eax,[MessageBox]
                <br/>
                add eax,2
                <br/>
                mov eax,[eax]
                <br/>
                mov eax,[eax]
                <br/>
                add eax,5
                <br/>
                mov fxn_addr, eax
                <br/>
                <br/>
                invoke myfunc, ebx, addr Text, addr Caption, ebx
                <br/>
                invoke ExitProcess, ebx
                <br/>
                <br/>
                myfunc proc w:DWORD,x:DWORD,y:DWORD,z:DWORD
                <br/>
                <br/>
                push ebp
                <br/>
                mov ebp,esp
                <br/>
                jmp fxn_addr
                <br/>
                <br/>
                myfunc endp
                <br/>
                <br/>
                end start
               </pre>
              </div>
              <br/>
              Here I show you a way to trampoline over first 5 bytes of MessageBox without ever calling GetModuleHandle/LoadLibrary and GetProcAddress
              <br/>
              Instead I use my understanding of the MASM32 linker to read the current address of the IAT via the thunk table  Read on !
              <br/>
              <div class="divcode">
               <pre class="brush: asm">
                .486
                <br/>
                .model flat,stdcall
                <br/>
                option casemap:none
                <br/>
                option epilogue:none
                <br/>
                option prologue:none
                <br/>
                include masm32includewindows.inc
                <br/>
                include masm32includeuser32.inc
                <br/>
                include masm32includekernel32.inc
                <br/>
                includelib masm32libuser32.lib
                <br/>
                includelib masm32libkernel32.lib
               </pre>
              </div>
              <br/>
              Making declarations, etc. etc. Important things to note are these two lines:
              <br/>
              <br/>
              <i>
               option epilogue:none
               <br/>
               option prologue:none
              </i>
              <br/>
              <br/>
              Usually when you are making a call to your own defined function, it will add some code at the start that sets up stack frame and some code that pops EBP back off. That is, your function will automatically set up its own stack frame:
              <br/>
              <br/>
              <i>
               push ebp
               <br/>
               mov ebp, esp
              </i>
              <br/>
              <br/>
              Saving stack base then changing new stack base as old top of stack.
              <br/>
              So we want to turn this function off and you will see why later.
              <br/>
              <div class="divcode">
               <pre class="brush: asm">
                myfunc proto :DWORD, :DWORD, :DWORD, :DWORD
                <br/>
                <br/>
                .DATA
                <br/>
                <br/>
                Caption         db "Success !",0
                <br/>
                Text             db "Called successfully via trampoline",0
                <br/>
                <br/>
                .DATA?
                <br/>
                <br/>
                fxn_addr    dword   ?
               </pre>
              </div>
              <br/>
              Declaring my own function prototype that takes 4 dwords as arguments. Defining 2 null terminated strings for later. Defining an uninitialised dword that will hold the function address that we want to trampoline.
              <br/>
              <div class="divcode">
               <pre class="brush: asm">
                .CODE
                <br/>
                <br/>
                start:
                <br/>
                <br/>
                xor ebx,ebx
                <br/>
                mov eax,[MessageBox]
                <br/>
                add eax,2
                <br/>
                mov eax,[eax]
                <br/>
                mov eax,[eax]
                <br/>
                add eax,5
                <br/>
                mov fxn_addr, eax
               </pre>
              </div>
              <br/>
              Some note about the MASM linker. It tells the PE loader where addresses are via its own thunk table which is usually located at the end of the executable. It is a pointer to the import address table (which updates off the corresponding dynamic link library's export address table I believe).
              <br/>
              <br/>
              So first off, I set ebx to 0 as above. This means later when I am going to use "push 0" instructions, I can "push ebx" instead which results in a smaller, faster executing program. ebx is chosen because it is a register that stdcall convention does not fiddle around with, unlike eax, ecx and edx.
              <br/>
              <br/>
              Let me just show you a screenshot of the thunk table generated by MASM's linker:
              <br/>
              <br/>
              <div style="text-align: center;">
               <img alt="" border="0" onload="NcodeImageResizer.createOn(this);" src="http://www.progamercity.net/addons/img/2010/09/3005-1.png"/>
              </div>
              You can see several things here.
              <br/>
              <br/>
              - The "CALL 0040102D" is the call to my function. It directly calls the address of my function.
              <br/>
              - There is a little table at the end with 3 entries
              <br/>
              <br/>
              The table is the JMP thunk table. If you look at what code is the call to ExitProcess:
              <br/>
              <br/>
              <div style="text-align: center;">
               <img alt="" border="0" onload="NcodeImageResizer.createOn(this);" src="http://www.progamercity.net/addons/img/2010/09/3005-2.png"/>
              </div>
              It does not call the virtual address of ExitProcess. This is because the address changes and so you can not just hardcode an address, unlike for my own function. What it calls instead is the entry of ExitProcess in the thunk table which is:
              <br/>
              <br/>
              <i>
               JMP DWORD PTR DS:[&lt;&amp;kernel32.ExitProcess&gt;]
              </i>
              <br/>
              <br/>
              If you try to see what instruction that actually is, it is:
              <br/>
              <br/>
              <i>
               JMP DWORD PTR DS:[402000]
              </i>
              <br/>
              <br/>
              <div style="text-align: center;">
               <img alt="" border="0" onload="NcodeImageResizer.createOn(this);" src="http://www.progamercity.net/addons/img/2010/09/3005-3.png"/>
              </div>
              0x402000 is the entry in the import address table for the ExitProcess function. So if you look in the hex dump..
              <br/>
              <br/>
              <div style="text-align: center;">
               <img alt="" border="0" onload="NcodeImageResizer.createOn(this);" src="http://www.progamercity.net/addons/img/2010/09/3005-4.png"/>
              </div>
              Bearing in mind the little endianness that the 80x86 uses, this means the current address of ExitProcess on my system is 0x76793B54. Sure enough, if I go there:
              <br/>
              <br/>
              <div style="text-align: center;">
               <img alt="" border="0" onload="NcodeImageResizer.createOn(this);" src="http://www.progamercity.net/addons/img/2010/09/3005-5.png"/>
              </div>
              You can already recognise that procedure as ExitProcess because of the native API it calls : RtlExitUserProcess.
              <br/>
              <br/>
              So now we know how to manually find the address of a function, look at how I have done it in MASM:
              <br/>
              <div class="divcode">
               <pre class="brush: asm">
                mov eax,[MessageBox]
                <br/>
                add eax,2
                <br/>
                mov eax,[eax]
                <br/>
                mov eax,[eax]
                <br/>
                add eax,5
                <br/>
                mov fxn_addr, eax
               </pre>
              </div>
              <br/>
              The first instruction will move the virtual address of the entry in the thunk table of MessageBox into eax. Then we add 2 to that address. Maybe you are thinking "wtf is this kid smoking ?". Look at this:
              <br/>
              <br/>
              <div style="text-align: center;">
               <img alt="" border="0" onload="NcodeImageResizer.createOn(this);" src="http://img251.imageshack.us/img251/5462/iathooking06.png"/>
              </div>
              The bytes for "JMP DWORD PTR DS:[402008]" is "FF25 08204000". So the first 2 bytes "FF 25" must be for the opcode saying JMP DWORD PTR DS:[]. Then the pointer itself are the next 4 bytes (note the little endianness), 08204000 &gt;&gt; 402008
              <br/>
              <br/>
              So "mov eax, [MessageBox]" would lead us to the virtual address that the above instruction is on. So to get to the actual pointer to the IAT entry for this API, we need to add 2 bytes. Next we have:
              <br/>
              <br/>
              <i>
               mov eax,[eax]
               <br/>
               mov eax,[eax]
              </i>
              <br/>
              <br/>
              We move the dword that is pointed to by eax into eax. So before this instruction executes, eax is the address of the thunk entry for that address + 2 which is the pointer to the IAT entry. So the first "mov eax, [eax]" moves the address of the IAT entry into eax. Then we do it again and this time the dword held at the IAT entry is moved into eax. You already saw from before that IAT holds a pointer to the function address.
              <br/>
              Now we set up our address ready for trampolining:
              <br/>
              <br/>
              <i>
               add eax,5
               <br/>
               mov fxn_addr, eax
              </i>
              <br/>
              <br/>
              We add 5 to eax and then move that into our buffer named fxn_addr. All will be explained later if you have not come across this 5 byte trampoline method before !
              <br/>
              <div class="divcode">
               <pre class="brush: asm">
                invoke myfunc, ebx, addr Text, addr Caption, ebx
                <br/>
                invoke ExitProcess, ebx
                <br/>
                <br/>
                myfunc proc w:DWORD,x:DWORD,y:DWORD,z:DWORD
                <br/>
                <br/>
                push ebp
                <br/>
                mov ebp,esp
                <br/>
                jmp fxn_addr
                <br/>
                <br/>
                myfunc endp
                <br/>
                end start
               </pre>
              </div>
              <br/>
              So directly after this, I invoke my prototype function. The 4 dword parameters it is taking is ebx, address of text, address of caption and ebx again. These are the arguments for a normal call to MessageBox:
              <br/>
              <br/>
              <div style="text-align: center;">
               <img alt="" border="0" onload="NcodeImageResizer.createOn(this);" src="http://www.progamercity.net/addons/img/2010/09/3005-6.png"/>
              </div>
              So the hWnd and type is null, which is fine if you look at the exact description of those arguments. Then address of text and caption as defined earlier, fine also. Now let's look at what my function is comprised of:
              <br/>
              <div class="divcode">
               <pre class="brush: asm">
                myfunc proc w:DWORD,x:DWORD,y:DWORD,z:DWORD
                <br/>
                push ebp
                <br/>
                mov ebp,esp
                <br/>
                jmp fxn_addr
                <br/>
                <br/>
                myfunc endp
               </pre>
              </div>
              <br/>
              address of MessageBoxA + 5. So when I call my procedure, what happens is:
              <br/>
              - Return address is pushed onto stack (virtual address of instruction directly after the call)
              <br/>
              <br/>
              - Execution goes to the address that is called
              <br/>
              - My procedure sets up stack frame (which is what the first 5 bytes of MessageBoxA does)
              <br/>
              - We jmp to MessageBoxA + 5
              <br/>
              <br/>
              What this has achieved is that it means we can now execute any function without ever touching its first 5 bytes. This is where GameGuard places its usermode hooks, as a far jump at the first 5 bytes of the function. So we can use this method to trampoline over
              <acronym title="rootkit GameGuard">
               GG
              </acronym>
              's hook.
              <br/>
              <br/>
              There are a few tricks that you will have to learn before you are able to do this to bypass a usermode hook but I'll let you figure that out yourself, it'd be no fun if I told you everything !
              <br/>
              <br/>
              Later to come if I get bored enough.. How to do IAT hooking and intercept arguments of a function call and replace it with your own
              <br/>
              <br/>
              (Now is later..)
              <br/>
              <br/>
              MOAR CODE !!!
              <br/>
              <br/>
              This code shows how to dynamically fetch the first 5 bytes (before I hardcoded bytes to set up stack frame). It also shows how to hook your own program's IAT and notice I have intercepted and modified the arguments of a call to MessageBox. If you need anything explained, please shout
              <br/>
              <div class="divcode">
               <pre class="brush: asm">
                .486
                <br/>
                .model flat, stdcall
                <br/>
                option casemap:none
                <br/>
                option epilogue:none
                <br/>
                option prologue:none
                <br/>
                include masm32includewindows.inc
                <br/>
                include masm32includeuser32.inc
                <br/>
                include masm32includekernel32.inc
                <br/>
                includelib masm32libuser32.lib
                <br/>
                includelib masm32libkernel32.lib
                <br/>
                <br/>
                WriteMem proto
                <br/>
                My_Proc  proto
                <br/>
                <br/>
                .DATA
                <br/>
                <br/>
                Caption             db      "Title",0
                <br/>
                Text                db      "Text",0
                <br/>
                API_Fxn             dd      MessageBox
                <br/>
                Mod_Caption   db  "Modified Title",0
                <br/>
                Mod_Text   db  "Modified Text",0
                <br/>
                <br/>
                .DATA?
                <br/>
                <br/>
                IAT_Entry_Addr      dword   ?
                <br/>
                Fxn_Addr            dword   ?
                <br/>
                Proc_Addr           dword   ?
                <br/>
                Ret_Addr   dword ?
                <br/>
                <br/>
                Arg1    dword ?
                <br/>
                Arg2    dword ?
                <br/>
                Arg3    dword ?
                <br/>
                Arg4    dword ?
                <br/>
                <br/>
                StackFrameCheck  dword ?
                <br/>
                <br/>
                .CODE
                <br/>
                <br/>
                start:
                <br/>
                <br/>
                xor ebx, ebx
                <br/>
                mov eax, [API_Fxn]
                <br/>
                add eax, 2
                <br/>
                mov eax, [eax]
                <br/>
                mov IAT_Entry_Addr, eax
                <br/>
                mov eax, [eax]
                <br/>
                mov Fxn_Addr, eax
                <br/>
                mov eax, offset My_Proc
                <br/>
                mov Proc_Addr, eax
                <br/>
                <br/>
                invoke WriteMem
                <br/>
                <br/>
                push ebx
                <br/>
                push offset Caption
                <br/>
                push offset Text
                <br/>
                push ebx
                <br/>
                call API_Fxn
                <br/>
                <br/>
                invoke ExitProcess, ebx
                <br/>
                <br/>
                WriteMem proc
                <br/>
                <br/>
                LOCAL OldProt:DWORD
                <br/>
                LOCAL OldProcProt:DWORD
                <br/>
                <br/>
                invoke VirtualProtect, IAT_Entry_Addr, 4, PAGE_EXECUTE_READWRITE, addr OldProt
                <br/>
                <br/>
                mov ecx, Proc_Addr
                <br/>
                mov edx, IAT_Entry_Addr
                <br/>
                mov [edx], ecx
                <br/>
                <br/>
                invoke VirtualProtect, IAT_Entry_Addr, 4, OldProt, addr OldProt
                <br/>
                invoke VirtualProtect, Proc_Addr, 5, PAGE_EXECUTE_READWRITE, addr OldProcProt
                <br/>
                <br/>
                mov eax, Fxn_Addr
                <br/>
                mov eax, [eax]
                <br/>
                mov ecx, [Proc_Addr]
                <br/>
                mov [ecx], eax
                <br/>
                mov eax, Fxn_Addr
                <br/>
                add eax, 4
                <br/>
                mov al, byte ptr ds:[eax]
                <br/>
                mov ecx, [Proc_Addr]
                <br/>
                add ecx, 4
                <br/>
                mov byte ptr ds:[ecx], al
                <br/>
                <br/>
                invoke VirtualProtect, Proc_Addr, 5, OldProcProt, addr OldProcProt
                <br/>
                ret
                <br/>
                <br/>
                WriteMem endp
                <br/>
                <br/>
                My_Proc proc
                <br/>
                nop
                <br/>
                nop
                <br/>
                nop
                <br/>
                nop
                <br/>
                nop
                <br/>
                pop StackFrameCheck
                <br/>
                pop Ret_Addr
                <br/>
                pop Arg4
                <br/>
                pop Arg3
                <br/>
                pop Arg2
                <br/>
                pop Arg1
                <br/>
                push ebx
                <br/>
                push offset Mod_Caption
                <br/>
                push offset Mod_Text
                <br/>
                push ebx
                <br/>
                push Ret_Addr
                <br/>
                push StackFrameCheck
                <br/>
                mov eax, [Fxn_Addr]
                <br/>
                add eax, 5
                <br/>
                jmp eax
                <br/>
                My_Proc endp
                <br/>
                <br/>
                end start
               </pre>
              </div>
              <br/>
              Dynamically reads first 5 bytes of a given function and writes it to our own function prototype which then executes those 5 bytes, intercepts the arguments, modifies them and then trampolines over the real first 5 bytes (possible place where hook would go) to execute the rest of the real function
              <br/>
              <font size="2">
               <div style="text-align: right;">
                Author: c0lo
               </div>
              </font>
             </blockquote>
             <div id="ad_thread_first_post_content">
              <div style="padding:20px 0 20px 20px;float:right;">
               <script type="text/javascript">
                &lt;!--
google_ad_client = "ca-pub-1203900138634415";
/* 336x280 */
google_ad_slot = "7909549165";
google_ad_width = 336;
google_ad_height = 280;
//--&gt;
               </script>
               <script src="http://pagead2.googlesyndication.com/pagead/show_ads.js" type="text/javascript">
               </script>
              </div>
             </div>
            </div>
           </div>
          </div>
          <div class="after_content">
           <blockquote class="signature restore">
            <div class="signaturecontainer">
             Please, post your questions on forum, not by PM or mail
             <br/>
             <br/>
             I spend my time, so please pay a little bit of your time to keep world in equilibrium
            </div>
           </blockquote>
          </div>
          <div class="cleardiv">
          </div>
         </div>
        </div>
        <div class="postfoot">
         <!-- &lt;div class="postfoot_container"&gt; -->
         <div class="textcontrols floatcontainer">
          <span class="postcontrols">
           <img alt="" id="progress_3005" src="http://www.progamercity.net/images/styles/pgcsilver/misc/progress.gif" style="display:none"/>
           <a class="newreply" href="http://www.progamercity.net/newreply.php?do=newreply&amp;p=3005" id="qrwq_3005" rel="nofollow">
            <img alt="Reply With Quote" id="quoteimg_3005" src="http://www.progamercity.net/clear.gif"/>
            Reply With Quote
           </a>
          </span>
          <span class="postlinking">
          </span>
          <!-- &lt;/div&gt; -->
         </div>
        </div>
        <hr/>
       </li>
       <li class="postbitlegacy postbitim" id="post_thanks_box_3005">
        <div class="postbody" style="margin-left: 0">
         <div class="postrow">
          <h2 class="title">
           The Following User Says Thank You to Dwar For This Useful Post:
          </h2>
          <div class="content">
           <div id="post_thanks_bit_3005">
            <blockquote class="postcontent restore">
             <a href="http://www.progamercity.net/members/d3m0tol-900.html" rel="nofollow">
              <span style="color:#ddd">
               D3m0tol
              </span>
             </a>
            </blockquote>
           </div>
          </div>
         </div>
        </div>
        <hr/>
       </li>
       <li class="postbitlegacy postcontainer">
        <div class="postdetails">
         <div>
          <div class="postrow">
           <div class="content">
            <div id="post_message_3005">
             <blockquote class="postcontent restore ">
              <div align="center">
               <div style="padding:20px 0">
                <script type="text/javascript">
                 &lt;!--
google_ad_client = "ca-pub-1203900138634415";
/* header */
google_ad_slot = "1372144256";
google_ad_width = 728;
google_ad_height = 90;
//--&gt;
                </script>
                <script src="http://pagead2.googlesyndication.com/pagead/show_ads.js" type="text/javascript">
                </script>
               </div>
              </div>
             </blockquote>
            </div>
           </div>
          </div>
          <div class="cleardiv">
          </div>
         </div>
        </div>
       </li>
       <li class="postbitlegacy postbitim postcontainer" id="post_3119">
        <!-- see bottom of postbit.css for .userinfo .popupmenu styles -->
        <div class="posthead">
         <span class="postdate old">
          <span class="date">
           2010-11-29
           <span class="time">
            03:12 PM
           </span>
          </span>
         </span>
         <span class="nodecontrols">
          <a class="postcounter" href="http://www.progamercity.net/code-tut/366-asm-iat-hooking.html#post3119" name="post3119">
           #2
          </a>
          <a id="postcount3119" name="2">
          </a>
         </span>
        </div>
        <div class="postdetails">
         <div class="userinfo">
          <div class="username_container">
           <a class="username offline popupctrl" href="http://www.progamercity.net/members/d3m0tol-900.html" rel="nofollow" title="D3m0tol">
            <strong>
             <span style="color:#ddd">
              D3m0tol
             </span>
            </strong>
           </a>
           <img alt="D3m0tol is offline" border="0" class="inlineimg onlinestatus" src="http://www.progamercity.net/images/styles/pgcsilver/statusicon/user-offline.png"/>
          </div>
          <span class="usertitle">
           Inactive
          </span>
          <span class="postbit_reputation" id="repdisplay_3119_900">
           <img alt="D3m0tol is on a distinguished road" class="repimg" src="http://www.progamercity.net/images/reputation/reputation_pos.png"/>
          </span>
          <hr/>
          <dl class="userinfo_extra">
           <dt>
            Join Date
           </dt>
           <dd>
            2010 Sep
           </dd>
           <dt>
            Posts
           </dt>
           <dd>
            13
           </dd>
           <dt>
            Thanks
           </dt>
           <dd>
            6
           </dd>
           <dd style="white-space:nowrap; display:inline; float: right;">
            Thanked 3 Times in 1 Post
           </dd>
          </dl>
          <dl class="user_rep">
           <dt>
            Rep Power
           </dt>
           <dd id="reppower_3119_900">
            0
           </dd>
          </dl>
          <div class="imlinks">
          </div>
         </div>
         <div class="postbody">
          <div class="postrow">
           <h2 class="title icon">
            Re: [Asm] IAT Hooking
           </h2>
           <div class="content">
            <div id="post_message_3119">
             <blockquote class="postcontent restore ">
              thnx for this tutorial i wanted to know more about IAT hooking
             </blockquote>
            </div>
           </div>
          </div>
          <div class="cleardiv">
          </div>
         </div>
        </div>
        <div class="postfoot">
         <!-- &lt;div class="postfoot_container"&gt; -->
         <div class="textcontrols floatcontainer">
          <span class="postcontrols">
           <img alt="" id="progress_3119" src="http://www.progamercity.net/images/styles/pgcsilver/misc/progress.gif" style="display:none"/>
           <a class="newreply" href="http://www.progamercity.net/newreply.php?do=newreply&amp;p=3119" id="qrwq_3119" rel="nofollow">
            <img alt="Reply With Quote" id="quoteimg_3119" src="http://www.progamercity.net/clear.gif"/>
            Reply With Quote
           </a>
          </span>
          <span class="postlinking">
          </span>
          <!-- &lt;/div&gt; -->
         </div>
        </div>
        <hr/>
       </li>
       <li class="postbitlegacy postbitim" id="post_thanks_box_3119" style="display:none">
       </li>
      </ol>
      <div class="separator">
      </div>
      <div class="postlistfoot">
      </div>
     </div>
     <div class="noinlinemod below_postlist" id="below_postlist">
      <a class="newcontent_textcontrol" href="http://www.progamercity.net/newreply.php?p=3119&amp;noquote=1" id="newreplylink_bottom" rel="nofollow">
       <span>
        +
       </span>
       Reply to Thread
      </a>
      <div class="pagination_bottom" id="pagination_bottom">
      </div>
     </div>
     <!-- next / previous links -->
     <div class="navlinks">
      <strong>
       
      </strong>
      <a href="http://www.progamercity.net/code-tut/366-asm-iat-hooking-prev-thread.html" rel="nofollow">
       Previous Thread
      </a>
      |
      <a href="http://www.progamercity.net/code-tut/366-asm-iat-hooking-next-thread.html" rel="nofollow">
       Next Thread
      </a>
      <strong>
       
      </strong>
     </div>
     <!-- / next / previous links -->
     <div class="thread_info block" id="thread_info">
      <div class="threadinfohead blockhead">
       Visitors found this page by searching for:
      </div>
      <div class="thread_info_block blockbody" id="seof_queries_list">
       <div class="inner_block">
        <div id="seofq_list_cell">
         <h2>
          iat hooking tutorial
         </h2>
         ,
         <h3>
          IAT indirect jmp thunk
         </h3>
         ,
         <h4>
          iat asm
         </h4>
         ,
         <h4>
          asm hook
         </h4>
         ,
         <h4>
          iat hook
         </h4>
         ,
         <h4>
          rtlexituserprocess
         </h4>
         ,
         <h4>
          hooking iat
         </h4>
         ,
         <h4>
          asm hooking
         </h4>
         ,
         <h4>
          x64 iat hook
         </h4>
         ,
         <h4>
          iat hook x64
         </h4>
         ,
         <strong>
          iat hooking x64
         </strong>
         ,
         <strong>
          jmp thunk table
         </strong>
         ,
         <strong>
          masm iat hook
         </strong>
         ,
         <strong>
          asm IAT hook
         </strong>
         ,
         <strong>
          x64 jmp hook
         </strong>
         ,
         <strong>
          iat hook tutorial
         </strong>
         ,
         <strong>
          iat program
         </strong>
         ,
         <strong>
          iat hooking asm
         </strong>
         ,
         <strong>
          masm export address table
         </strong>
         ,
         <strong>
          iat patching 64 bit
         </strong>
         ,
         <strong>
          program iat
         </strong>
         ,
         <strong>
          iat programming
         </strong>
         ,
         <strong>
          IAT slots
         </strong>
         ,
         <strong>
          Portable Executable prologue
         </strong>
         ,
         <strong>
          HOOK ASM
         </strong>
        </div>
       </div>
      </div>
      <div class="options_block_container">
       <div class="options_block2">
        <h4 class="blockhead">
         Bookmarks
        </h4>
        <div class="thread_info_block blockbody formcontrols floatcontainer" id="social_bookmarks_list">
         <h5 class="blocksubhead">
          Bookmarks
         </h5>
         <ul class="icon_list">
          <li class="smallfont">
           <a href="http://digg.com/submit?phase=2&amp;url=http%3A%2F%2Fwww.progamercity.net%2Fcode-tut%2F366-asm-iat-hooking.html&amp;title=%5BAsm%5D+IAT+Hooking" rel="nofollow" target="socialbookmark">
            <img alt="" src="http://www.progamercity.net/images/styles/pgcsilver/misc/bookmarksite_digg.gif"/>
           </a>
           <a href="http://digg.com/submit?phase=2&amp;url=http%3A%2F%2Fwww.progamercity.net%2Fcode-tut%2F366-asm-iat-hooking.html&amp;title=%5BAsm%5D+IAT+Hooking" rel="nofollow" target="socialbookmark">
            Digg
           </a>
          </li>
          <li class="smallfont">
           <a href="http://del.icio.us/post?url=http%3A%2F%2Fwww.progamercity.net%2Fcode-tut%2F366-asm-iat-hooking.html&amp;title=%5BAsm%5D+IAT+Hooking" rel="nofollow" target="socialbookmark">
            <img alt="" src="http://www.progamercity.net/images/styles/pgcsilver/misc/bookmarksite_delicious.gif"/>
           </a>
           <a href="http://del.icio.us/post?url=http%3A%2F%2Fwww.progamercity.net%2Fcode-tut%2F366-asm-iat-hooking.html&amp;title=%5BAsm%5D+IAT+Hooking" rel="nofollow" target="socialbookmark">
            del.icio.us
           </a>
          </li>
          <li class="smallfont">
           <a href="http://www.stumbleupon.com/submit?url=http%3A%2F%2Fwww.progamercity.net%2Fcode-tut%2F366-asm-iat-hooking.html&amp;title=%5BAsm%5D+IAT+Hooking" rel="nofollow" target="socialbookmark">
            <img alt="" src="http://www.progamercity.net/images/styles/pgcsilver/misc/bookmarksite_stumbleupon.gif"/>
           </a>
           <a href="http://www.stumbleupon.com/submit?url=http%3A%2F%2Fwww.progamercity.net%2Fcode-tut%2F366-asm-iat-hooking.html&amp;title=%5BAsm%5D+IAT+Hooking" rel="nofollow" target="socialbookmark">
            StumbleUpon
           </a>
          </li>
          <li class="smallfont">
           <a href="http://www.google.com/bookmarks/mark?op=edit&amp;output=popup&amp;bkmk=http%3A%2F%2Fwww.progamercity.net%2Fcode-tut%2F366-asm-iat-hooking.html&amp;title=%5BAsm%5D+IAT+Hooking" rel="nofollow" target="socialbookmark">
            <img alt="" src="http://www.progamercity.net/images/styles/pgcsilver/misc/bookmarksite_google.gif"/>
           </a>
           <a href="http://www.google.com/bookmarks/mark?op=edit&amp;output=popup&amp;bkmk=http%3A%2F%2Fwww.progamercity.net%2Fcode-tut%2F366-asm-iat-hooking.html&amp;title=%5BAsm%5D+IAT+Hooking" rel="nofollow" target="socialbookmark">
            Google
           </a>
          </li>
         </ul>
        </div>
       </div>
       <div class="options_block">
        <h4 class="collapse blockhead">
         <a class="collapse" href="http://www.progamercity.net/code-tut/366-asm-iat-hooking.html#top" id="collapse_posting_rules">
          <img alt="" src="http://www.progamercity.net/images/styles/pgcsilver/buttons/collapse_40b.png"/>
         </a>
         Posting Permissions
        </h4>
        <div class="thread_info_block blockbody formcontrols floatcontainer" id="posting_rules">
         <div class="info_subblock" id="forumrules">
          <ul class="youcandoblock">
           <li>
            You
            <strong>
             may not
            </strong>
            post new threads
           </li>
           <li>
            You
            <strong>
             may not
            </strong>
            post replies
           </li>
           <li>
            You
            <strong>
             may not
            </strong>
            post attachments
           </li>
           <li>
            You
            <strong>
             may not
            </strong>
            edit your posts
           </li>
          </ul>
          <div class="bbcodeblock">
           <ul>
            <li>
             <a href="http://www.progamercity.net/misc.php?do=bbcode" rel="nofollow" target="_blank">
              BB code
             </a>
             is
             <strong>
              On
             </strong>
            </li>
            <li>
             <a href="http://www.progamercity.net/misc.php?do=showsmilies" rel="nofollow" target="_blank">
              Smilies
             </a>
             are
             <strong>
              On
             </strong>
            </li>
            <li>
             <a href="http://www.progamercity.net/misc.php?do=bbcode#imgcode" rel="nofollow" target="_blank">
              [IMG]
             </a>
             code is
             <strong>
              On
             </strong>
            </li>
            <li>
             HTML code is
             <strong>
              Off
             </strong>
            </li>
            <li>
             <a href="http://www.progamercity.net/misc.php?do=linkbacks#trackbacks" rel="nofollow" target="_blank">
              Trackbacks
             </a>
             are
             <strong>
              Off
             </strong>
            </li>
            <li>
             <a href="http://www.progamercity.net/misc.php?do=linkbacks#pingbacks" rel="nofollow" target="_blank">
              Pingbacks
             </a>
             are
             <strong>
              Off
             </strong>
            </li>
            <li>
             <a href="http://www.progamercity.net/misc.php?do=linkbacks#refbacks" rel="nofollow" target="_blank">
              Refbacks
             </a>
             are
             <strong>
              On
             </strong>
            </li>
           </ul>
          </div>
          <p class="rules_link">
           <a href="http://www.progamercity.net/misc.php?do=vsarules&amp;cfrset=1" rel="nofollow" target="_blank">
            Forum Rules
           </a>
          </p>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div style="clear: left">
     </div>
     <div id="footer-wrapper">
      <div class="floatcontainer footer" id="footer">
       <div id="footer-l1">
        <div class="shade footer_time" id="footer_time">
         All times are GMT. The time now is
         <span class="time">
          09:52 PM
         </span>
         .
        </div>
        <ul class="footer_links" id="footer_links">
         <li>
          <a accesskey="9" href="http://www.progamercity.net/sendmessage.php" rel="nofollow">
           Contact Us
          </a>
         </li>
         <li>
          <a href="http://www.progamercity.net">
           ProGamerCity
          </a>
         </li>
         <li>
          <a href="http://www.progamercity.net/code-tut/366-asm-iat-hooking.html#top" onclick="document.location.hash='top'; return false;">
           Top
          </a>
         </li>
        </ul>
        <script type="text/javascript">
         &lt;!--
		// Main vBulletin Javascript Initialization
		vBulletin_init();
	//--&gt;
        </script>
       </div>
       <!-- end footer-l1 -->
       <div id="footer-l2">
        <form action="http://www.progamercity.net/forum.php" class="footer_select" id="footer_select" method="get">
        </form>
       </div>
       <!-- end footer-l2 -->
      </div>
      <div class="below_body">
       <div class="shade footer_copyright" id="footer_copyright">
        Powered by
        <a href="http://www.vbulletin.com" id="vbulletinlink" rel="nofollow">
         vBulletin
        </a>
        <br/>
        Copyright  vBulletin Solutions, Inc. All rights reserved.
       </div>
       <div class="shade footer_morecopyright" id="footer_morecopyright">
        Copyright  2012 ProGamerCity, All Rights Reserved.FuzzySEO by
        <a href="http://seoforums.org" rel="nofollow" target="_blank" title="SEO Forum">
         SEO Forum
        </a>
        .org
        <br/>
       </div>
       <!-- Yandex.Metrika counter -->
       <div style="display:none;">
        <script type="text/javascript">
         (function(w, c) { (w[c] = w[c] || []).push(function() { try { w.yaCounter1020812 = new Ya.Metrika({id:1020812}); } catch(e) { } }); })(window, "yandex_metrika_callbacks");
        </script>
       </div>
       <script defer="defer" src="//mc.yandex.ru/metrika/watch.js" type="text/javascript">
       </script>
       <noscript>
        <div>
         <img alt="" src="//mc.yandex.ru/watch/1020812" style="position:absolute; left:-9999px;"/>
        </div>
       </noscript>
       <!-- /Yandex.Metrika counter -->
       <div id="footer-end">
       </div>
      </div>
     </div>
     <!-- end footer_wrapper -->
    </div>
    <!-- end body_wrapper -->
   </div>
   <!-- end wrapper-a -->
  </div>
  <!-- end wrapper -->
  <div id="popup-mask">
  </div>
  <script type="text/javascript">
   //&lt;![CDATA[

window.orig_onload = window.onload;
window.onload = function() {
var cpost=document.location.hash.substring(1);var cpost2='';if(cpost){ var ispost=cpost.substring(0,4)=='post';if(ispost)cpost2='post_'+cpost.substring(4);if((cobj = fetch_object(cpost))||(cobj = fetch_object(cpost2))){cobj.scrollIntoView(true);}else if(ispost){cpostno = cpost.substring(4,cpost.length);if(parseInt(cpostno)&gt;0){location.replace('http://www.progamercity.net/showthread.php?p='+cpostno);};} }

if(typeof window.orig_onload == "function") window.orig_onload();
}

//]]&gt;
  </script>
 </body>
</html>