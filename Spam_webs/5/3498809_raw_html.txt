<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta content="index,follow" name="robots"/>
  <meta content="Catch up on the latest news, events, and technical insights from the Microsoft Visual C++ product team. Learn about new compiler and IDE features, dive into some code with language and feature samples, see how to build modern Windows 8 apps, meet the product team and engage!" name="description"/>
  <meta content="c++, visual c++, visual studio, vs2010, visualstudio, windows, windows 7, .net, dotnet, c++ 11, windows 8, modern app" name="keywords"/>
  <meta content="Telligent Evolution Platform Developer Build (Build: 5.6.50428.7875)" name="GENERATOR"/>
  <link href="http://blogs.msdn.com/b/vcblog/pingback.aspx" rel="pingback"/>
  <link href="http://i1.blogs.msdn.com/rrcontent/e8ef9a0f5baf04c5b72689852bedf1f8-3cca145f259b38265dcb26477a5f3c2c-RequestReducedStyle.css" rel="Stylesheet" type="text/css"/>
  <link href="http://blogs.msdn.com/rss.aspx" rel="alternate" title="Site Home (RSS 2.0)" type="application/rss+xml"/>
  <link href="/members/rasharm_5F00_msft/comments/rss.aspx" rel="alternate" title="Raman Sharma's Comments (RSS 2.0)" type="application/rss+xml"/>
  <link href="/members/rasharm_5F00_msft/activities/rss.aspx" rel="alternate" title="Raman Sharma's Activities (RSS 2.0)" type="application/rss+xml"/>
  <link href="/members/rasharm_5F00_msft/activities/followersrss.aspx" rel="alternate" title="Activities of People Raman Sharma Follows (RSS 2.0)" type="application/rss+xml"/>
  <link href="/members/rasharm_5F00_msft/activities/groupsrss.aspx" rel="alternate" title="Raman Sharma's Groups Activities (RSS 2.0)" type="application/rss+xml"/>
  <link href="http://blogs.msdn.com/b/vcblog/rss.aspx" rel="alternate" title="Visual C++ Team Blog (RSS 2.0)" type="application/rss+xml"/>
  <link href="http://blogs.msdn.com/b/vcblog/atom.aspx" rel="alternate" title="Visual C++ Team Blog (Atom 1.0)" type="application/atom+xml"/>
  <link href="http://blogs.msdn.com/b/vcblog/rsscomments.aspx" rel="alternate" title="Visual C++ Team Blog - All Comments (RSS 2.0)" type="application/rss+xml"/>
  <link href="http://blogs.msdn.com/b/vcblog/rsscomments.aspx?WeblogPostID=10571054" rel="alternate" title="Resumable functions in C++ - Comments for this post (RSS 2.0)" type="application/rss+xml"/>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <link href="/themes/wireframe/favicon.ico" rel="shortcut icon" type="image/ico"/>
  <!--
            Third party scripts and code linked to or referenced from this website are licensed to you by the parties that own such code, not by Microsoft.  See ASP.NET Ajax CDN Terms of Use  http://www.asp.net/ajaxlibrary/CDN.ashx.
          -->
  <link href="http://i1.blogs.msdn.com/rrcontent/1eae160ea2c1e5cb3196f8c18470cca1-9728b852b1bb5db880b4edfc37d5eac6-RequestReducedStyle.css" rel="Stylesheet" type="text/css"/>
  <script language="javascript" src="http://ajax.aspnetcdn.com/ajax/jquery/jquery-1.5.2.min.js" type="text/javascript">
  </script>
  <link href="/themes/wireframe/css/DynamicStyle.aspx?PreviewKey=0" media="screen,print" rel="stylesheet" type="text/css"/>
  <link href="/themes/blogs/wireframe/css/DynamicStyle.aspx?WeblogID=6569&amp;PreviewKey=0" media="screen,print" rel="stylesheet" type="text/css"/>
  <!--[if lte IE 6]&gt;
              &lt;link type="text/css" rel="stylesheet" href="/themes/wireframe/css/ie6.css" media="screen,print" /&gt;
          &lt;![endif]-->
  <meta content="B717AD6FC29D3A844832AF011B5F9E4C" name="msvalidate.01"/>
  <link href="http://blogs.msdn.com/b/vcblog/rsd.ashx" rel="EditURI" title="RSD" type="application/rsd+xml"/>
  <link href="http://blogs.msdn.com/b/vcblog/wlwmanifest.ashx" rel="wlwmanifest" title="WLWManifest" type="application/wlwmanifest+xml"/>
  <!--
            Third party scripts and code linked to or referenced from this website are licensed to you by the parties that own such code, not by Microsoft.  See ASP.NET Ajax CDN Terms of Use  http://www.asp.net/ajaxlibrary/CDN.ashx.
          -->
  <script language="javascript" src="http://ajax.aspnetcdn.com/ajax/jquery/jquery-1.5.2.min.js" type="text/javascript">
  </script>
  <title>
   Resumable functions in C++ - Visual C++ Team Blog - Site Home - MSDN Blogs
  </title>
 </head>
 <body spellcheck="true">
  <form action="/b/vcblog/archive/2014/11/12/resumable-functions-in-c.aspx" id="aspnetForm" method="post" name="aspnetForm">
   <div>
    <input id="ctl00_content_ctl00_w_203840__aec51d_ctl00_ctl00_PlaceHolder1_ctl04_bpCommentForm_ctl04_invisibleCaptcha_answer" name="ctl00_content_ctl00_w_203840__aec51d_ctl00_ctl00_PlaceHolder1_ctl04_bpCommentForm_ctl04_invisibleCaptcha_answer" type="hidden" value=""/>
    <input id="__VIEWSTATE" name="__VIEWSTATE" type="hidden" value="/wEPDwUKMTM5OTAxNDYyNWRkvI787cXLvh9XHlDReEjVejxzcZ4="/>
   </div>
   <script src="http://i1.blogs.msdn.com/rrcontent/abddf804c8f315af40eee8d8da485958-8c03242d9f25d14c9b5ba40b6474391e-RequestReducedScript.js" type="text/javascript">
   </script>
   <div>
    <input id="__VIEWSTATEGENERATOR" name="__VIEWSTATEGENERATOR" type="hidden" value="84C00179"/>
   </div>
   <div class="header-fragments-header">
   </div>
   <div class="header-fragments">
    <div class="header-fragment-outer top-bar wireframe-header-fragment-outer wireframe-top-bar">
     <div class="header-fragment-inner top-bar wireframe-header-fragment-inner wireframe-top-bar">
      <div class="header-fragment welcome-message" id="header-fragment-247403536">
       <!-- always render -->
      </div>
      <div class="header-fragment login-logout" id="header-fragment-247403537">
       <div class="navigation-list-header">
       </div>
       <ul class="navigation-list">
        <li class="navigation-item">
         <span class="internal-link live-id-button" id="ctl00_header_fragment_247403537__aec51d_ctl00_ctl02_ctl05_WLIDLoginButton1">
          <a href="https://login.live.com/login.srf?wa=wsignin1.0&amp;rpsnv=12&amp;ct=1436672507&amp;rver=6.0.5286.0&amp;wp=MBI&amp;wreply=http:%2F%2Fblogs.msdn.com%2Fb%2Fvcblog%2Farchive%2F2014%2F11%2F12%2Fresumable-functions-in-c.aspx&amp;lc=1033&amp;id=271611">
           Sign in
          </a>
         </span>
        </li>
       </ul>
       <div class="navigation-list-footer">
       </div>
      </div>
      <div class="header-fragment user-welcome-without-login" id="header-fragment-247403538">
       <!-- always render -->
      </div>
     </div>
    </div>
    <div class="header-fragment-outer wireframe-header-fragment-outer site-banner">
     <div class="header-fragment-inner wireframe-header-fragment-inner site-banner">
      <div class="header-fragment site-banner" id="header-fragment-247403539">
       <div class="site-banner-header">
       </div>
       <div class="site-banner">
        <div class="site-logo">
         <a href="/">
          <img alt="" src="/themes/MSDN2/images/MSDN/logo_msdn.png" style="border-width:0px;"/>
         </a>
        </div>
       </div>
       <div class="site-banner-footer">
       </div>
      </div>
     </div>
    </div>
    <div class="header-fragment-outer wireframe-header-fragment-outer search">
     <div class="header-fragment-inner wireframe-header-fragment-inner search">
      <div class="header-fragment search" id="header-fragment-247403540">
       <div class="field-list-header">
       </div>
       <fieldset class="field-list">
        <ul class="field-list">
         <li class="field-item">
          <span class="field-item-input">
           <input autocomplete="off" class="search empty" id="SearchTextBox_Header" name="SearchTextBox_Header" type="text"/>
           <input class="search-button" id="SearchButton_Header" name="SearchButton_Header" src="/Utility/images/MSDNTechnet/trans.gif" type="image"/>
          </span>
         </li>
         <li class="field-item" id="ctl00_header_fragment_247403540__aec51d_ctl00_SearchOptionsButtonWrapper">
          <span class="field-item-input">
           <a class="internal-link search-options" title="Change Search Scope">
           </a>
          </span>
         </li>
        </ul>
       </fieldset>
       <div class="field-list-footer">
       </div>
       <script language="javascript" src="http://i4.services.social.microsoft.com/Search/Widgets/SearchBox.jss?boxid=SearchTextBox_Header&amp;btnid=SearchButton_Header&amp;brand=MSDN&amp;refinement=109&amp;resref=&amp;addEnglish=&amp;rn=&amp;rq=&amp;watermark=&amp;focusOnInit=false&amp;beta=0&amp;iroot=&amp;overrideWatermark=false" type="text/javascript">
       </script>
       <script language="javascript" type="text/javascript">
        if ($.browser &amp;&amp; $.browser.mozilla) {
        $('#SearchButton_Header').parent().append('&lt;span style="background: white url(/Utility/images/MSDNTechnet/common.png) 0 -20px no-repeat;display:block;height:22px;overflow:hidden;width:47px;position:absolute;right:22px"&gt;&lt;/span&gt;');
    } else {
        $('#SearchButton_Header').parent().append('&lt;span style="background: white url(/Utility/images/MSDNTechnet/common.png) 0 -20px no-repeat;display:block;height:22px;overflow:hidden;width:47px;position:absolute;right:-17px"&gt;&lt;/span&gt;');
    }
       </script>
      </div>
     </div>
    </div>
    <div class="header-fragment-outer wireframe-header-fragment-outer group-navigation">
     <div class="header-fragment-inner wireframe-header-fragment-inner group-navigation">
      <div class="header-fragment group-navigation" id="header-fragment-247403541">
       <script src="http://i1.blogs.msdn.com/rrcontent/44a500773671f30bd4ba3b0c7bba2359-14e0c332a84e56b6d37629b4d8cac65a-RequestReducedScript.js" type="text/javascript">
       </script>
       <div class="parent-container" id="ctl00_header_fragment_247403541__aec51d_ctl00_ctl00_ParentGroupListContainer" style="width: 100%">
        <div class="parent-sub-container">
         <div class="navigation-list-header">
         </div>
         <ul class="navigation-list parent">
          <li class="navigation-item" style="display: none;">
           <a href="/">
            MSDN Blogs
           </a>
          </li>
          <li class="navigation-item entry" style="display: none;">
           <a class="internal-link view-group" href="/Microsoft_Blog_Images/">
            <span>
            </span>
            Microsoft Blog Images
           </a>
          </li>
          <li class="navigation-item last">
           <a href="#" id="MoreLink" onmouseout="Core_GroupNavigation_MoreMouseOutPopup(ctl00_header_fragment_247403541, true, this)" onmouseover="Core_GroupNavigation_MoreShowNav(ctl00_header_fragment_247403541, true, this)" style="display:none;">
            More ...
           </a>
          </li>
         </ul>
         <div class="navigation-list-footer">
         </div>
        </div>
       </div>
       <div id="ctl00_header_fragment_247403541__aec51d_ctl00_ctl00_GroupNavigationPopup" style="position:absolute;visibility:hidden;left:-5000px;">
       </div>
       <div id="ctl00_header_fragment_247403541__aec51d_ctl00_ctl00_ParentMore" style="display: none;">
        <div class="content-list-header">
        </div>
        <ul class="content-list" id="ParentMoreListheader-fragment-247403541">
        </ul>
        <div class="content-list-footer">
        </div>
       </div>
       <div id="ctl00_header_fragment_247403541__aec51d_ctl00_ctl00_ChildMore" style="display: none;">
        <div class="content-list-header">
        </div>
        <ul class="content-list" id="ChildMoreListheader-fragment-247403541">
        </ul>
        <div class="content-list-footer">
        </div>
       </div>
       <script type="text/javascript">
        // &lt;![CDATA[
    
    var Core_GroupNavigation_AjaxEndpoint = '/Utility/HeaderFragments/Core/GroupNavigationAjax.asmx';
        
    var ctl00_header_fragment_247403541={"wrapperId":"header-fragment-247403541","variableName":"ctl00_header_fragment_247403541","parameter":{"currentGroupId":0,"popupMenuId":"ctl00_header_fragment_247403541__aec51d_ctl00_ctl00_GroupNavigationPopup","popupParentMoreId":"ctl00_header_fragment_247403541__aec51d_ctl00_ctl00_ParentMore","popupChildMoreId":"ctl00_header_fragment_247403541__aec51d_ctl00_ctl00_ChildMore","popupWrapperID":"popup-ctl00_header_fragment_247403541__aec51d_ctl00_ctl00_GroupNavigationPopup","mouseInPopup":false,"popupPopulated":false,"errorHtml":"&lt;div class=\"message error\"&gt;An error occured while attempting to load groups.&lt;/div&gt;","loadingHtml":"&lt;div class=\"message loading\"&gt;Loading...&lt;/div&gt;","groupNavigationContentWrapperHtmlBlock":"&lt;div id=\"popup-ctl00_header_fragment_247403541__aec51d_ctl00_ctl00_GroupNavigationPopup\"&gt;{GroupNavigationContent}&lt;/div&gt;","groupNavigationListHtmlBlock":"&lt;div class=\"multiple-column-list-header\"&gt;&lt;/div&gt;\n&lt;div class=\"multiple-column-list columns-{ColumnsCount}\"&gt;{Columns}&lt;/div&gt;\n&lt;div class=\"multiple-column-list-footer\"&gt;&lt;/div&gt;","columnWrapperHtmlBlock":"&lt;div class=\"multiple-column-item column-{ColumnId}\"&gt;{T1GroupsData}&lt;/div&gt;","t1GroupHtmlBlock":"\r\n\t\t&lt;div class=\"content-list-header\"&gt;&lt;/div&gt;\r\n\t\t&lt;div class=\"content-list-name{NameClass}\"&gt;{Name}&lt;/div&gt;\r\n\t\t&lt;ul class=\"content-list\"&gt;\r\n\t\t\t{Groups}\r\n\t\t&lt;/ul&gt;\r\n\t\t&lt;div class=\"content-list-footer\"&gt;&lt;/div&gt;\r\n\t","t2GroupHtmlBlock":"&lt;li class=\"content-item{ItemClass}\"&gt;{Item}&lt;/li&gt;","viewAllHtmlBlock":"&lt;a href=\"{Url}\" class=\"internal-link view-all\"&gt;{Text}&lt;/a&gt;","linkHtmlBlock":"&lt;a href=\"{Url}\" class=\"{MoreClass}\"&gt;{Name}&lt;/a&gt;","searchResultItemHtmlBlock":"&lt;li class=\"content-item\"&gt;&lt;a href=\"{Url}\"&gt;{Name}&lt;/a&gt;&lt;/li&gt;","viewMoreText":"and {MoreText} more..."}};

	$(document).ready(function() {
		Core_GroupNavigation_SetMenuItems("#ctl00_header_fragment_247403541__aec51d_ctl00_ctl00_ParentGroupListContainer", true, "ParentMoreListheader-fragment-247403541");
		Core_GroupNavigation_SetMenuItems("#ctl00_header_fragment_247403541__aec51d_ctl00_ctl00_ChildGroupListContainer", false, "ChildMoreListheader-fragment-247403541");
	});

	$(window).resize(function() {
		Core_GroupNavigation_SetMenuItems("#ctl00_header_fragment_247403541__aec51d_ctl00_ctl00_ParentGroupListContainer", true, "ParentMoreListheader-fragment-247403541");
		Core_GroupNavigation_SetMenuItems("#ctl00_header_fragment_247403541__aec51d_ctl00_ctl00_ChildGroupListContainer", false, "ChildMoreListheader-fragment-247403541");
	});
    // ]]&gt;
       </script>
      </div>
     </div>
    </div>
   </div>
   <div class="header-fragments-footer">
   </div>
   <div class="content-fragment-page post" id="ctl00_content_ctl00_page">
    <div class="layout">
     <div class="layout-header">
     </div>
     <div class="layout-content header-top-content-left-sidebar-right" id="ctl00_content_ctl00_layout">
      <div class="layout-region header" id="ctl00_content_ctl00_header">
       <div class="layout-region-inner header">
        <div class="content-fragment blog-title full-border" id="fragment-203831">
         <div class="content-fragment-inner wireframe-content-fragment-inner">
          <div class="content-fragment-top wireframe-content-fragment-top">
           <div class="r1 wireframe-r1">
           </div>
           <div class="r2 wireframe-r2">
           </div>
           <div class="r3 wireframe-r3">
           </div>
           <div class="r4 wireframe-r4">
           </div>
          </div>
          <div class="content-fragment-content">
           <h1 class="title">
            Resumable functions in C++
           </h1>
          </div>
          <div class="content-fragment-footer">
          </div>
          <div class="content-fragment-bottom wireframe-content-fragment-bottom">
           <div class="r1 wireframe-r1">
           </div>
           <div class="r2 wireframe-r2">
           </div>
           <div class="r3 wireframe-r3">
           </div>
           <div class="r4 wireframe-r4">
           </div>
          </div>
         </div>
        </div>
        <div class="content-fragment blog-bread-crumbs no-wrapper-with-spacing" id="fragment-203832">
         <div class="content-fragment-inner wireframe-content-fragment-inner">
          <div class="content-fragment-top wireframe-content-fragment-top">
           <div class="r1 wireframe-r1">
           </div>
           <div class="r2 wireframe-r2">
           </div>
           <div class="r3 wireframe-r3">
           </div>
           <div class="r4 wireframe-r4">
           </div>
          </div>
          <div class="content-fragment-content">
           <div class="breadcrumb-list-header">
           </div>
           <div class="breadcrumb-list">
            <span class="breadcrumb-item">
             <a class="internal-link view-home" href="/">
              MSDN Blogs
             </a>
            </span>
            <span class="separator">
             &gt;
            </span>
            <span class="breadcrumb-item">
             <a href="/b/vcblog/">
              Visual C++ Team Blog
             </a>
            </span>
            <span class="separator">
             &gt;
            </span>
            <span class="breadcrumb-item">
             <a href="/b/vcblog/archive/2014/11/12/resumable-functions-in-c.aspx">
              Resumable functions in C++
             </a>
            </span>
           </div>
           <div class="breadcrumb-list-footer">
           </div>
          </div>
          <div class="content-fragment-footer">
          </div>
          <div class="content-fragment-bottom wireframe-content-fragment-bottom">
           <div class="r1 wireframe-r1">
           </div>
           <div class="r2 wireframe-r2">
           </div>
           <div class="r3 wireframe-r3">
           </div>
           <div class="r4 wireframe-r4">
           </div>
          </div>
         </div>
        </div>
        <div class="content-fragment raw-html no-wrapper" id="fragment-203833">
         <div class="content-fragment-inner wireframe-content-fragment-inner">
          <div class="content-fragment-top wireframe-content-fragment-top">
           <div class="r1 wireframe-r1">
           </div>
           <div class="r2 wireframe-r2">
           </div>
           <div class="r3 wireframe-r3">
           </div>
           <div class="r4 wireframe-r4">
           </div>
          </div>
          <div class="content-fragment-content">
           <div class="user-defined-markup">
            <div id="stb-breadcrumbs">
             <div class="breadcrumb-list">
              <span class="breadcrumb-item">
               <a href="http://blogs.technet.com/b/serverandtools/">
                Server &amp; Tools Blogs
               </a>
              </span>
              <span class="separator">
               &gt;
              </span>
              <span class="breadcrumb-item">
               <a href="http://blogs.msdn.com/b/developer-tools/">
                Developer Tools Blogs
               </a>
              </span>
              <span class="separator">
               &gt;
              </span>
              <span class="breadcrumb-item2">
               Visual C++ Team Blog
              </span>
             </div>
            </div>
            <div id="stb-header">
             <ul class="stb-nav developer">
              <li>
               <a class="menu-title" href="#">
                Executive Bloggers
                <b>
                 <!--style element: drop-down arrow-->
                </b>
               </a>
               <ul class="stb-nav-drop">
                <b>
                 <!--style element: partial white border atop the drop-down menu-->
                </b>
                <li>
                 <a href="http://weblogs.asp.net/scottgu/" target="_blank">
                  Scott Guthrie
                 </a>
                </li>
                <li>
                 <a href="http://blogs.msdn.com/b/somasegar/" target="_blank">
                  S. Somasegar
                 </a>
                </li>
                <li>
                 <a href="http://blogs.msdn.com/b/bharry/" target="_blank">
                  Brian Harry
                 </a>
                </li>
                <li>
                 <a href="http://blogs.msdn.com/b/stevengu/" target="_blank">
                  Steve Guggenheimer
                 </a>
                </li>
               </ul>
              </li>
              <li>
               <a class="menu-title" href="#">
                Visual Studio
                <b>
                 <!--style element: drop-down arrow-->
                </b>
               </a>
               <ul class="stb-nav-drop">
                <b>
                 <!--style element: partial white border atop the drop-down menu-->
                </b>
                <li>
                 <a href="http://blogs.msdn.com/b/visualstudio" target="_blank">
                  Visual Studio
                 </a>
                </li>
                <li>
                 <a href="http://blogs.msdn.com/b/vscode/" target="_blank">
                  Visual Studio Code
                 </a>
                </li>
                <li>
                 <a href="http://blogs.msdn.com/b/visualstudioalm/archive/tags/diagnostics/" target="_blank">
                  Diagnostics
                 </a>
                </li>
                <li>
                 <a href="http://blogs.msdn.com/b/lightswitch/" target="_blank">
                  LightSwitch
                 </a>
                </li>
                <li>
                 <a href="http://blogs.msdn.com/b/bethmassi/archive/tags/devcenter/" target="_blank">
                  Line of Business Apps by Beth Massi
                 </a>
                </li>
                <li>
                 <a href="http://blogs.msdn.com/b/heaths/" target="_blank">
                  Setup &amp; Install by Heath Stewart
                 </a>
                </li>
               </ul>
              </li>
              <li>
               <a class="menu-title" href="#">
                Application Lifecycle Management
                <b>
                 <!--style element: drop-down arrow-->
                </b>
               </a>
               <ul class="stb-nav-drop">
                <b>
                 <!--style element: partial white border atop the drop-down menu-->
                </b>
                <li>
                 <a href="http://blogs.msdn.com/b/visualstudioalm/archive/tags/insights/" target="_blank">
                  Application Insights
                 </a>
                </li>
                <li>
                 <a href="http://blogs.msdn.com/b/visualstudioalm/archive/tags/release+management/" target="_blank">
                  Release Management
                 </a>
                </li>
                <li>
                 <a href="http://blogs.msdn.com/b/visualstudioalm/archive/tags/team+foundation+server/" target="_blank">
                  Team Foundation Server
                 </a>
                </li>
                <li>
                 <a href="http://blogs.msdn.com/b/visualstudioalm/archive/tags/testing/" target="_blank">
                  Testing
                 </a>
                </li>
                <li>
                 <a href="http://www.visualstudio.com/news/release-archive-vso" target="_blank">
                  Visual Studio Online
                 </a>
                </li>
                <li>
                 <a href="http://blogs.msdn.com/b/visualstudioalm/" target="_blank">
                  All
                 </a>
                </li>
               </ul>
              </li>
              <li>
               <a class="menu-title" href="#">
                Languages
                <b>
                 <!--style element: drop-down arrow-->
                </b>
               </a>
               <ul class="stb-nav-drop">
                <b>
                 <!--style element: partial white border atop the drop-down menu-->
                </b>
                <li>
                 <a href="http://blogs.msdn.com/b/vbteam/" target="_blank">
                  Visual Basic
                 </a>
                </li>
                <li>
                 <a href="http://blogs.msdn.com/b/csharpfaq/" target="_blank">
                  Visual C#
                 </a>
                </li>
                <li>
                 <a href="http://blogs.msdn.com/b/vcblog/" target="_blank">
                  Visual C++
                 </a>
                </li>
                <li>
                 <a href="http://blogs.msdn.com/b/fsharpteam/" target="_blank">
                  Visual F#
                 </a>
                </li>
                <li>
                 <a href="http://blogs.msdn.com/b/visualstudio/archive/tags/javascript" target="_blank">
                  JavaScript
                 </a>
                </li>
                <li>
                 <a href="http://blogs.msdn.com/b/typescript/" target="_blank">
                  TypeScript
                 </a>
                </li>
               </ul>
              </li>
              <li>
               <a class="menu-title" href="#">
                .NET
                <b>
                 <!--style element: drop-down arrow-->
                </b>
               </a>
               <ul class="stb-nav-drop">
                <b>
                 <!--style element: partial white border atop the drop-down menu-->
                </b>
                <li>
                 <a href="http://blogs.msdn.com/b/dotnet/" target="_blank">
                  .NET
                 </a>
                </li>
                <li>
                 <a href="http://blogs.msdn.com/b/pfxteam/" target="_blank">
                  .NET Parallel Programming
                 </a>
                </li>
                <li>
                 <a href="http://blogs.msdn.com/b/adonet/" target="_blank">
                  ADO.NET (Managed Providers, DataSet &amp; EF)
                 </a>
                </li>
                <li>
                 <a href="http://www.hanselman.com/blog/CategoryView.aspx?category=ASP.NET" target="_blank">
                  ASP.NET by Scott Hanselman
                 </a>
                </li>
                <li>
                 <a href="http://blogs.msdn.com/b/odatateam/" target="_blank">
                  OData Team
                 </a>
                </li>
                <li>
                 <a href="http://blogs.msdn.com/b/wpf/" target="_blank">
                  WPF
                 </a>
                </li>
               </ul>
              </li>
              <li>
               <a class="menu-title" href="#">
                Platform Development
                <b>
                 <!--style element: drop-down arrow-->
                </b>
               </a>
               <ul class="stb-nav-drop">
                <b>
                 <!--style element: partial white border atop the drop-down menu-->
                </b>
                <li>
                 <a href="http://blogs.windows.com/buildingapps/" target="_blank">
                  Apps for Windows
                 </a>
                </li>
                <li>
                 <a href="http://blogs.msdn.com/b/bingdevcenter/" target="_blank">
                  Bing
                 </a>
                </li>
                <li>
                 <a href="http://blogs.msdn.com/b/ie/archive/tags/developers/" target="_blank">
                  Internet Explorer
                 </a>
                </li>
                <li>
                 <a href="http://azure.microsoft.com/blog/" target="_blank">
                  Microsoft Azure
                 </a>
                </li>
                <li>
                 <a href="http://blogs.msdn.com/b/vsto/" target="_blank">
                  Office
                 </a>
                </li>
                <li>
                 <a href="http://blogs.office.com/dev?filter=true&amp;filter-product=sharepoint" target="_blank">
                  Office 365 Development
                 </a>
                </li>
                <li>
                 <a href="http://blogs.msdn.com/b/webdevtools/" target="_blank">
                  Web
                 </a>
                </li>
               </ul>
              </li>
             </ul>
             <div class="description-container">
              <div class="description">
               <a href="/b/vcblog/">
                <h2>
                 Visual C++ Team Blog
                </h2>
               </a>
              </div>
              <a class="logo" href="http://www.microsoft.com/visualstudio/">
              </a>
             </div>
            </div>
            <script type="text/javascript">
             $(document).ready(function() {

&lt;!-- Begin drop-down menu --&gt;
  $("#stb-header &gt; .stb-nav")
    .mouseleave(function () {
      $(this)
        .find("a.menu-title")
          .removeClass("expanded")
        .end()
        .find(".stb-nav-drop")
          .removeClass("expanded");
    })
	.find("a.menu-title")
	.click(function(e) {
		  e.preventDefault();
		  e.stopImmediatePropagation();
		  
		  $(this).parents('li:first').find(".stb-nav-drop")
            .toggleClass("expanded")
          .end()
          .find("a.menu-title")
            .toggleClass("expanded")
          .end()
          .siblings()
            .find("a.menu-title")
              .removeClass("expanded")
            .end()
            .find(".stb-nav-drop")
              .removeClass("expanded");
	  });
});
            </script>
           </div>
          </div>
          <div class="content-fragment-footer">
          </div>
          <div class="content-fragment-bottom wireframe-content-fragment-bottom">
           <div class="r1 wireframe-r1">
           </div>
           <div class="r2 wireframe-r2">
           </div>
           <div class="r3 wireframe-r3">
           </div>
           <div class="r4 wireframe-r4">
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
      <div class="layout-region right-sidebar" id="ctl00_content_ctl00_right-sidebar">
       <div class="layout-region-inner right-sidebar">
        <div class="content-fragment blog-links no-wrapper-with-spacing with-header" id="fragment-203834">
         <div class="content-fragment-inner wireframe-content-fragment-inner">
          <div class="content-fragment-top wireframe-content-fragment-top">
           <div class="r1 wireframe-r1">
           </div>
           <div class="r2 wireframe-r2">
           </div>
           <div class="r3 wireframe-r3">
           </div>
           <div class="r4 wireframe-r4">
           </div>
          </div>
          <div class="content-fragment-header">
           <div>
            Common Tasks
           </div>
          </div>
          <div class="content-fragment-content">
           <div class="navigation-list-header">
           </div>
           <ul class="navigation-list">
            <li class="navigation-item">
             <a class="internal-link view-application" href="/b/vcblog/">
              <span>
              </span>
              Blog Home
             </a>
            </li>
            <li class="navigation-item">
             <a class="internal-link view-contact" href="/b/vcblog/contact.aspx">
              <span>
              </span>
              Email Blog Author
             </a>
            </li>
            <li class="navigation-item" id="" rsscomments="">
             <a class="internal-link rss" href="/b/vcblog/rsscomments.aspx">
              <span>
              </span>
              RSS for comments
             </a>
            </li>
            <li class="navigation-item">
             <a class="internal-link rss" href="/b/vcblog/rss.aspx">
              <span>
              </span>
              RSS for posts
             </a>
            </li>
           </ul>
           <div class="navigation-list-footer">
           </div>
          </div>
          <div class="content-fragment-footer">
          </div>
          <div class="content-fragment-bottom wireframe-content-fragment-bottom">
           <div class="r1 wireframe-r1">
           </div>
           <div class="r2 wireframe-r2">
           </div>
           <div class="r3 wireframe-r3">
           </div>
           <div class="r4 wireframe-r4">
           </div>
          </div>
         </div>
        </div>
        <div class="content-fragment search-form no-wrapper-with-spacing with-header" id="fragment-203835">
         <div class="content-fragment-inner wireframe-content-fragment-inner">
          <div class="content-fragment-top wireframe-content-fragment-top">
           <div class="r1 wireframe-r1">
           </div>
           <div class="r2 wireframe-r2">
           </div>
           <div class="r3 wireframe-r3">
           </div>
           <div class="r4 wireframe-r4">
           </div>
          </div>
          <div class="content-fragment-header">
           <div>
            Search
           </div>
          </div>
          <div class="content-fragment-content">
           <div class="field-list-header">
           </div>
           <fieldset class="field-list">
            <ul class="field-list">
             <li class="field-item search">
              <div id="search-allblogs-container">
               <span class="field-item-input">
                <input autocomplete="off" class="searchField" id="SearchTextBox_AllBlogs" maxlength="64" name="SearchTextBox_AllBlogs" size="45" type="text"/>
                <input class="search-button" id="SearchButton_AllBlogs" name="SearchButton_AllBlogs" type="button"/>
               </span>
              </div>
              <div id="search-thisblog-container">
               <span class="field-item-input">
                <input autocomplete="off" class="searchField" id="SearchTextBox_ThisBlog" maxlength="64" name="SearchTextBox_ThisBlog" size="45" type="text"/>
                <input class="search-button" id="SearchButton_ThisBlog" name="SearchButton_ThisBlog" type="button"/>
               </span>
              </div>
             </li>
            </ul>
           </fieldset>
           <div class="field-list-footer">
            <div id="search-switch-container">
             <span style="display: inline-block">
              <input checked="checked" id="ThisBlog" name="SearchTypeRadio" type="radio" value="ThisBlog"/>
              <label for="ThisBlog" id="ThisBlogText">
               Search this blog
              </label>
             </span>
             <span style="display: inline-block">
              <input id="AllBlogs" name="SearchTypeRadio" type="radio" value="AllBlogs"/>
              <label for="AllBlogs" id="AllBlogsText">
               Search all blogs
              </label>
             </span>
            </div>
           </div>
           <script type="text/javascript">
            var elmSearchAll = $('#search-allblogs-container').hide();
var elmSearchThis = $('#search-thisblog-container');

// try to get the blog id, if we fail, then we aren't on a blog and just use the regular search approach       
(6569 === -1) &amp;&amp; $('#search-switch-container').hide();

$(document).ready(function() {
    $('#ThisBlog').click(function () {
        var self = $(this);
        if (self.is(':checked')) {
            elmSearchAll.hide();
            elmSearchThis.show();
        }
    });
    
    $('#AllBlogs').click(function () {
        var self = $(this);
        if (self.is(':checked')) {
            elmSearchThis.hide();
            elmSearchAll.show();
        }
    });
});
           </script>
           <script language="javascript" src="http://i4.services.social.microsoft.com/Search/Widgets/SearchBox.jss?boxid=SearchTextBox_AllBlogs&amp;btnid=SearchButton_AllBlogs&amp;brand=MSDN&amp;refinement=109&amp;resref=&amp;addEnglish=&amp;rn=&amp;rq=&amp;watermark=&amp;focusOnInit=false&amp;beta=0&amp;iroot=&amp;overrideWatermark=false" type="text/javascript">
           </script>
           <script language="javascript" src="http://i4.services.social.microsoft.com/Search/Widgets/SearchBox.jss?boxid=SearchTextBox_ThisBlog&amp;btnid=SearchButton_ThisBlog&amp;brand=MSDN&amp;refinement=&amp;resref=&amp;addEnglish=&amp;watermark=&amp;focusOnInit=false&amp;beta=0&amp;iroot=&amp;overrideWatermark=false&amp;rn=Visual%2bC%252b%252b%2bTeam%2bBlog&amp;rq=site:blogs.msdn.com/b/vcblog/" type="text/javascript">
           </script>
          </div>
          <div class="content-fragment-footer">
          </div>
          <div class="content-fragment-bottom wireframe-content-fragment-bottom">
           <div class="r1 wireframe-r1">
           </div>
           <div class="r2 wireframe-r2">
           </div>
           <div class="r3 wireframe-r3">
           </div>
           <div class="r4 wireframe-r4">
           </div>
          </div>
         </div>
        </div>
        <div class="content-fragment tag-cloud no-wrapper-with-spacing with-header" id="fragment-203836">
         <div class="content-fragment-inner wireframe-content-fragment-inner">
          <div class="content-fragment-top wireframe-content-fragment-top">
           <div class="r1 wireframe-r1">
           </div>
           <div class="r2 wireframe-r2">
           </div>
           <div class="r3 wireframe-r3">
           </div>
           <div class="r4 wireframe-r4">
           </div>
          </div>
          <div class="content-fragment-header">
           <div>
            Tags
           </div>
          </div>
          <div class="content-fragment-content">
           <div class="tag-list-header">
           </div>
           <ul class="tag-list">
            <li class="tag-item level-1">
             <a href="http://blogs.msdn.com/b/vcblog/archive/tags/Announcement/" rel="tag">
              Announcement
             </a>
            </li>
            <li class="tag-item level-2">
             <a href="http://blogs.msdn.com/b/vcblog/archive/tags/Announcements/" rel="tag">
              Announcements
             </a>
            </li>
            <li class="tag-item level-1">
             <a href="http://blogs.msdn.com/b/vcblog/archive/tags/C_2B002B00_/" rel="tag">
              C++
             </a>
            </li>
            <li class="tag-item level-3">
             <a href="http://blogs.msdn.com/b/vcblog/archive/tags/C_2B002B00_+language/" rel="tag">
              C++ language
             </a>
            </li>
            <li class="tag-item level-4">
             <a href="http://blogs.msdn.com/b/vcblog/archive/tags/C_2B002B00_0x/" rel="tag">
              C++0x
             </a>
            </li>
            <li class="tag-item level-1">
             <a href="http://blogs.msdn.com/b/vcblog/archive/tags/Channel+9/" rel="tag">
              Channel 9
             </a>
            </li>
            <li class="tag-item level-6">
             <a href="http://blogs.msdn.com/b/vcblog/archive/tags/Community/" rel="tag">
              Community
             </a>
            </li>
            <li class="tag-item level-5">
             <a href="http://blogs.msdn.com/b/vcblog/archive/tags/compiler/" rel="tag">
              compiler
             </a>
            </li>
            <li class="tag-item level-5">
             <a href="http://blogs.msdn.com/b/vcblog/archive/tags/debugging/" rel="tag">
              debugging
             </a>
            </li>
            <li class="tag-item level-6">
             <a href="http://blogs.msdn.com/b/vcblog/archive/tags/design/" rel="tag">
              design
             </a>
            </li>
            <li class="tag-item level-2">
             <a href="http://blogs.msdn.com/b/vcblog/archive/tags/Dev/" rel="tag">
              Dev
             </a>
            </li>
            <li class="tag-item level-3">
             <a href="http://blogs.msdn.com/b/vcblog/archive/tags/DirectX/" rel="tag">
              DirectX
             </a>
            </li>
            <li class="tag-item level-4">
             <a href="http://blogs.msdn.com/b/vcblog/archive/tags/IDE/" rel="tag">
              IDE
             </a>
            </li>
            <li class="tag-item level-6">
             <a href="http://blogs.msdn.com/b/vcblog/archive/tags/Intellisense/" rel="tag">
              Intellisense
             </a>
            </li>
            <li class="tag-item level-2">
             <a href="http://blogs.msdn.com/b/vcblog/archive/tags/MFC/" rel="tag">
              MFC
             </a>
            </li>
            <li class="tag-item level-1">
             <a href="http://blogs.msdn.com/b/vcblog/archive/tags/Parallelism/" rel="tag">
              Parallelism
             </a>
            </li>
            <li class="tag-item level-5">
             <a href="http://blogs.msdn.com/b/vcblog/archive/tags/performance/" rel="tag">
              performance
             </a>
            </li>
            <li class="tag-item level-2">
             <a href="http://blogs.msdn.com/b/vcblog/archive/tags/STL/" rel="tag">
              STL
             </a>
            </li>
            <li class="tag-item level-3">
             <a href="http://blogs.msdn.com/b/vcblog/archive/tags/Survey/" rel="tag">
              Survey
             </a>
            </li>
            <li class="tag-item level-3">
             <a href="http://blogs.msdn.com/b/vcblog/archive/tags/VC_2B002B00_/" rel="tag">
              VC++
             </a>
            </li>
            <li class="tag-item level-4">
             <a href="http://blogs.msdn.com/b/vcblog/archive/tags/VS2010/" rel="tag">
              VS2010
             </a>
            </li>
            <li class="tag-item level-6">
             <a href="http://blogs.msdn.com/b/vcblog/archive/tags/weekly+roundup/" rel="tag">
              weekly roundup
             </a>
            </li>
            <li class="tag-item level-6">
             <a href="http://blogs.msdn.com/b/vcblog/archive/tags/Windows+7/" rel="tag">
              Windows 7
             </a>
            </li>
            <li class="tag-item level-5">
             <a href="http://blogs.msdn.com/b/vcblog/archive/tags/windows+8/" rel="tag">
              windows 8
             </a>
            </li>
            <li class="tag-item level-5">
             <a href="http://blogs.msdn.com/b/vcblog/archive/tags/Windows+Store+Apps/" rel="tag">
              Windows Store Apps
             </a>
            </li>
           </ul>
           <div class="tag-list-footer">
           </div>
          </div>
          <div class="content-fragment-footer">
          </div>
          <div class="content-fragment-bottom wireframe-content-fragment-bottom">
           <div class="r1 wireframe-r1">
           </div>
           <div class="r2 wireframe-r2">
           </div>
           <div class="r3 wireframe-r3">
           </div>
           <div class="r4 wireframe-r4">
           </div>
          </div>
         </div>
        </div>
        <div class="content-fragment blog-archive-list no-wrapper-with-spacing with-header" id="fragment-203837">
         <div class="content-fragment-inner wireframe-content-fragment-inner">
          <div class="content-fragment-top wireframe-content-fragment-top">
           <div class="r1 wireframe-r1">
           </div>
           <div class="r2 wireframe-r2">
           </div>
           <div class="r3 wireframe-r3">
           </div>
           <div class="r4 wireframe-r4">
           </div>
          </div>
          <div class="content-fragment-header">
           <div>
            Archives
           </div>
          </div>
          <div class="content-fragment-content">
           <div class="content-list-header">
           </div>
           <div class="content-list-name">
            Archives
           </div>
           <ul class="content-list">
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2015/07.aspx">
              July 2015
             </a>
             (1)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2015/06.aspx">
              June 2015
             </a>
             (5)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2015/05.aspx">
              May 2015
             </a>
             (3)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2015/04.aspx">
              April 2015
             </a>
             (12)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2015/03.aspx">
              March 2015
             </a>
             (5)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2015/02.aspx">
              February 2015
             </a>
             (3)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2015/01.aspx">
              January 2015
             </a>
             (4)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2014/12.aspx">
              December 2014
             </a>
             (4)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2014/11.aspx">
              November 2014
             </a>
             (12)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2014/10.aspx">
              October 2014
             </a>
             (5)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2014/09.aspx">
              September 2014
             </a>
             (6)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2014/08.aspx">
              August 2014
             </a>
             (7)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2014/07.aspx">
              July 2014
             </a>
             (6)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2014/06.aspx">
              June 2014
             </a>
             (11)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2014/05.aspx">
              May 2014
             </a>
             (3)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2014/04.aspx">
              April 2014
             </a>
             (8)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2014/03.aspx">
              March 2014
             </a>
             (5)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2014/02.aspx">
              February 2014
             </a>
             (8)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2014/01.aspx">
              January 2014
             </a>
             (10)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2013/12.aspx">
              December 2013
             </a>
             (5)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2013/11.aspx">
              November 2013
             </a>
             (6)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2013/10.aspx">
              October 2013
             </a>
             (4)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2013/09.aspx">
              September 2013
             </a>
             (9)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2013/08.aspx">
              August 2013
             </a>
             (7)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2013/07.aspx">
              July 2013
             </a>
             (8)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2013/06.aspx">
              June 2013
             </a>
             (9)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2013/05.aspx">
              May 2013
             </a>
             (7)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2013/04.aspx">
              April 2013
             </a>
             (7)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2013/03.aspx">
              March 2013
             </a>
             (6)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2013/02.aspx">
              February 2013
             </a>
             (9)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2013/01.aspx">
              January 2013
             </a>
             (8)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2012/12.aspx">
              December 2012
             </a>
             (4)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2012/11.aspx">
              November 2012
             </a>
             (11)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2012/10.aspx">
              October 2012
             </a>
             (12)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2012/09.aspx">
              September 2012
             </a>
             (9)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2012/08.aspx">
              August 2012
             </a>
             (5)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2012/07.aspx">
              July 2012
             </a>
             (3)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2012/06.aspx">
              June 2012
             </a>
             (6)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2012/05.aspx">
              May 2012
             </a>
             (5)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2012/04.aspx">
              April 2012
             </a>
             (6)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2012/03.aspx">
              March 2012
             </a>
             (6)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2012/02.aspx">
              February 2012
             </a>
             (8)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2012/01.aspx">
              January 2012
             </a>
             (2)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2011/12.aspx">
              December 2011
             </a>
             (1)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2011/11.aspx">
              November 2011
             </a>
             (3)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2011/10.aspx">
              October 2011
             </a>
             (6)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2011/09.aspx">
              September 2011
             </a>
             (4)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2011/08.aspx">
              August 2011
             </a>
             (2)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2011/07.aspx">
              July 2011
             </a>
             (3)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2011/06.aspx">
              June 2011
             </a>
             (14)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2011/05.aspx">
              May 2011
             </a>
             (11)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2011/04.aspx">
              April 2011
             </a>
             (11)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2011/03.aspx">
              March 2011
             </a>
             (16)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2011/02.aspx">
              February 2011
             </a>
             (12)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2011/01.aspx">
              January 2011
             </a>
             (15)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2010/12.aspx">
              December 2010
             </a>
             (7)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2010/11.aspx">
              November 2010
             </a>
             (1)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2010/10.aspx">
              October 2010
             </a>
             (1)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2010/09.aspx">
              September 2010
             </a>
             (3)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2010/08.aspx">
              August 2010
             </a>
             (3)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2010/07.aspx">
              July 2010
             </a>
             (3)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2010/06.aspx">
              June 2010
             </a>
             (5)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2010/05.aspx">
              May 2010
             </a>
             (2)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2010/04.aspx">
              April 2010
             </a>
             (6)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2010/03.aspx">
              March 2010
             </a>
             (9)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2010/02.aspx">
              February 2010
             </a>
             (5)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2010/01.aspx">
              January 2010
             </a>
             (5)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2009/12.aspx">
              December 2009
             </a>
             (2)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2009/11.aspx">
              November 2009
             </a>
             (5)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2009/10.aspx">
              October 2009
             </a>
             (5)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2009/09.aspx">
              September 2009
             </a>
             (3)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2009/08.aspx">
              August 2009
             </a>
             (3)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2009/07.aspx">
              July 2009
             </a>
             (4)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2009/06.aspx">
              June 2009
             </a>
             (8)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2009/05.aspx">
              May 2009
             </a>
             (7)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2009/04.aspx">
              April 2009
             </a>
             (3)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2009/03.aspx">
              March 2009
             </a>
             (7)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2009/02.aspx">
              February 2009
             </a>
             (3)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2009/01.aspx">
              January 2009
             </a>
             (2)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2008/12.aspx">
              December 2008
             </a>
             (6)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2008/11.aspx">
              November 2008
             </a>
             (6)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2008/10.aspx">
              October 2008
             </a>
             (5)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2008/09.aspx">
              September 2008
             </a>
             (1)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2008/08.aspx">
              August 2008
             </a>
             (5)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2008/07.aspx">
              July 2008
             </a>
             (1)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2008/06.aspx">
              June 2008
             </a>
             (5)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2008/05.aspx">
              May 2008
             </a>
             (5)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2008/04.aspx">
              April 2008
             </a>
             (8)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2008/03.aspx">
              March 2008
             </a>
             (3)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2008/02.aspx">
              February 2008
             </a>
             (5)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2008/01.aspx">
              January 2008
             </a>
             (5)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2007/12.aspx">
              December 2007
             </a>
             (5)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2007/11.aspx">
              November 2007
             </a>
             (10)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2007/10.aspx">
              October 2007
             </a>
             (8)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2007/09.aspx">
              September 2007
             </a>
             (6)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2007/08.aspx">
              August 2007
             </a>
             (5)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2007/07.aspx">
              July 2007
             </a>
             (6)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2007/06.aspx">
              June 2007
             </a>
             (5)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2007/05.aspx">
              May 2007
             </a>
             (5)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2007/04.aspx">
              April 2007
             </a>
             (7)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2007/03.aspx">
              March 2007
             </a>
             (9)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2007/02.aspx">
              February 2007
             </a>
             (5)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2007/01.aspx">
              January 2007
             </a>
             (4)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2006/12.aspx">
              December 2006
             </a>
             (6)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2006/11.aspx">
              November 2006
             </a>
             (2)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2006/10.aspx">
              October 2006
             </a>
             (5)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2006/09.aspx">
              September 2006
             </a>
             (5)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2006/08.aspx">
              August 2006
             </a>
             (6)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2006/07.aspx">
              July 2006
             </a>
             (5)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2006/06.aspx">
              June 2006
             </a>
             (10)
            </li>
            <li class="content-item">
             <a class="internal-link view-post-archive-list" href="/b/vcblog/archive/2006/05.aspx">
              May 2006
             </a>
             (3)
            </li>
           </ul>
           <div class="content-list-footer">
           </div>
          </div>
          <div class="content-fragment-footer">
          </div>
          <div class="content-fragment-bottom wireframe-content-fragment-bottom">
           <div class="r1 wireframe-r1">
           </div>
           <div class="r2 wireframe-r2">
           </div>
           <div class="r3 wireframe-r3">
           </div>
           <div class="r4 wireframe-r4">
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
      <div class="layout-region content" id="ctl00_content_ctl00_content">
       <div class="layout-region-inner content">
        <div class="content-fragment blog-post no-wrapper-with-spacing" id="fragment-203838">
         <div class="content-fragment-inner wireframe-content-fragment-inner">
          <div class="content-fragment-top wireframe-content-fragment-top">
           <div class="r1 wireframe-r1">
           </div>
           <div class="r2 wireframe-r2">
           </div>
           <div class="r3 wireframe-r3">
           </div>
           <div class="r4 wireframe-r4">
           </div>
          </div>
          <div class="content-fragment-content">
           <div class="full-post-header">
           </div>
           <div class="full-post">
            <h3 class="post-name">
             Resumable functions in C++
            </h3>
            <div class="post-rating">
             Rate This
             <br/>
             <span id="ctl00_content_ctl00_w_203838__aec51d_ctl00_ctl01" title="Rated Excellent [4.67 out of 5].">
             </span>
             <input id="ctl00_content_ctl00_w_203838__aec51d_ctl00_ctl01_Value" type="hidden" value="4.67"/>
            </div>
            <div class="post-author">
             <span class="avatar">
              <a href="/280206/ProfileUrlRedirect.ashx">
               <img alt="" src="http://i1.social.s-msft.com/profile/u/avatar.jpg?displayname=raman+sharma&amp;size=large" style="border-width:0px;max-height:32px;max-width:32px;"/>
              </a>
             </span>
             <span class="profile-usercard-hover" data-profile-userid="437ed440-a957-40d0-aa04-df29dd762f4f">
              <span class="user-name">
               <a class="internal-link view-user-profile" href="/280206/ProfileUrlRedirect.ashx">
                <span>
                </span>
                Raman Sharma
               </a>
              </span>
             </span>
            </div>
            <div class="post-date">
             <span class="value">
              12 Nov 2014 7:35 AM
             </span>
            </div>
            <div class="post-attributes">
             <div class="attribute-list-header">
             </div>
             <ul class="attribute-list">
              <li class="attribute-item post-reply-count">
               <span class="attribute-name">
                Comments
               </span>
               <span class="attribute-value">
                <a class="internal-link view-replies" href="#comments">
                 <span>
                 </span>
                 25
                </a>
               </span>
              </li>
             </ul>
             <div class="attribute-list-footer">
             </div>
            </div>
            <div class="post-content user-defined-markup">
             <p>
              Last year, in a CTP release, we had provided
              <a href="http://blogs.msdn.com/b/vcblog/archive/2013/12/20/asynchronous-programming-in-c-using-resumable-functions-and-await.aspx">
               a glimpse
              </a>
              into resumable functions and await support in the Visual C++ compiler. In Visual Studio 2015 Preview we have gotten further along that journey and provided a more general purpose solution. This Preview release provides experimental implementation for a proposal called "
              <a href="http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4134.pdf">
               Resumable functions
              </a>
              " for the ISO C++ Standard. This is still work in progress but we believe this is the right time to open up the discussion and seek design feedback. An excellent overview of the topic is already available through
              <a href="https://www.youtube.com/watch?v=KUhSjfSbINE">
               this CppCon video
              </a>
              . The slides from that presentation are also available
              <a href="https://github.com/CppCon/CppCon2014/tree/master/Presentations/await%202.0%20-%20Stackless%20Resumable%20Functions">
               here
              </a>
              .
             </p>
             <p>
              As of this preview, this feature only works for x64 targets. In order to use this experimental feature you will need to include some new headers (e.g. "
              <span style="color: #a31515; font-family: Consolas; font-size: 9pt; background-color: white;">
               &lt;experimental/resumable&gt;
              </span>
              ") in your source files as well as specify the switch "/await" on the compiler command-line.
             </p>
             <p>
              This feature is built upon the concept of a coroutine which you might have encountered in other languages such as Python, Ruby etc. It is a generalized routine entity which supports operations like suspend and resume in addition to the traditional invoke and return operations. Very simply, it can be thought of as a method which, instead of returning to the caller, stops dead in the middle of processing and yields a value to the caller. The next time the coroutine is called, it resumes where it left off until it yields another value.
             </p>
             <p>
              Here are a few code examples to get you started with the key aspects of this feature:
             </p>
             <p>
              <span style="text-decoration: underline;">
               <strong>
                Asynchronous operations
               </strong>
              </span>
             </p>
             <p>
              The below code snippet shows how the code would look like for a function that waits for a long running operation like a computation or I/O. Note the usage of the proposed '__await' keyword meant to signify waiting for the result of an asynchronous operation.
             </p>
             <p>
              <span style="color: blue; font-family: Consolas; font-size: 9pt; background-color: white;">
               #include
               <span style="color: black;">
                <span style="color: #a31515;">
                 &lt;future&gt;
                </span>
               </span>
              </span>
             </p>
             <p>
              <span style="color: blue; font-family: Consolas; font-size: 9pt; background-color: white;">
               using
               <span style="color: black;">
                <span style="color: blue;">
                 namespace
                 <span style="color: black;">
                  std;
                 </span>
                </span>
               </span>
              </span>
              <br/>
              <span style="color: blue; font-family: Consolas; font-size: 9pt; background-color: white;">
               using
               <span style="color: black;">
                <span style="color: blue;">
                 namespace
                 <span style="color: black;">
                  std::chrono;
                 </span>
                </span>
               </span>
              </span>
              <br/>
              <br/>
              <span style="color: green; font-family: Consolas; font-size: 9pt; background-color: white;">
               // this could be some long running computation or I/O
              </span>
              <br/>
              <span style="color: #2b91af; font-family: Consolas; font-size: 9pt; background-color: white;">
               future
               <span style="color: black;">
                &lt;
                <span style="color: blue;">
                 int
                 <span style="color: black;">
                  &gt; calculate_the_answer()
                 </span>
                </span>
               </span>
              </span>
              <br/>
              <span style="color: black; font-family: Consolas; font-size: 9pt; background-color: white;">
               {
              </span>
              <br/>
              <span style="color: black; font-family: Consolas; font-size: 9pt; background-color: white;">
               <span style="color: blue;">
                return
                <span style="color: black;">
                 async([] {
                </span>
               </span>
              </span>
              <br/>
              <span style="color: black; font-family: Consolas; font-size: 9pt; background-color: white;">
               this_thread::sleep_for(1s);
               <span style="color: blue;">
                return
                <span style="color: black;">
                 42;
                </span>
               </span>
              </span>
              <br/>
              <span style="color: black; font-family: Consolas; font-size: 9pt; background-color: white;">
               });
              </span>
              <br/>
              <span style="color: black; font-family: Consolas; font-size: 9pt; background-color: white;">
               }
              </span>
              <br/>
              <br/>
              <span style="color: green; font-family: Consolas; font-size: 9pt; background-color: white;">
               // Here is a resumable function
              </span>
              <br/>
              <span style="color: #2b91af; font-family: Consolas; font-size: 9pt; background-color: white;">
               future
               <span style="color: black;">
                &lt;
                <span style="color: blue;">
                 void
                 <span style="color: black;">
                  &gt; coro() {
                 </span>
                </span>
               </span>
              </span>
              <br/>
              <span style="color: black; font-family: Consolas; font-size: 9pt; background-color: white;">
               printf(
               <span style="color: #a31515;">
                "Started waiting... \n"
                <span style="color: black;">
                 );
                </span>
               </span>
              </span>
              <br/>
              <span style="color: black; font-family: Consolas; font-size: 9pt; background-color: white;">
               <span style="color: blue;">
                auto
                <span style="color: black;">
                 result =
                 <span style="color: blue;">
                  __await
                  <span style="color: black;">
                   calculate_the_answer();
                  </span>
                 </span>
                </span>
               </span>
              </span>
              <br/>
              <span style="color: black; font-family: Consolas; font-size: 9pt; background-color: white;">
               printf(
               <span style="color: #a31515;">
                "got %d. \n"
                <span style="color: black;">
                 , result);
                </span>
               </span>
              </span>
              <br/>
              <span style="color: black; font-family: Consolas; font-size: 9pt; background-color: white;">
               }
              </span>
              <br/>
              <br/>
              <span style="color: blue; font-family: Consolas; font-size: 9pt; background-color: white;">
               int
               <span style="color: black;">
                <span style="color: #6f008a;">
                 _tmain
                 <span style="color: black;">
                  (
                  <span style="color: blue;">
                   int
                   <span style="color: black;">
                    <span style="color: gray;">
                     argc
                     <span style="color: black;">
                      ,
                      <span style="color: #2b91af;">
                       _TCHAR
                       <span style="color: black;">
                        *
                        <span style="color: gray;">
                         argv
                         <span style="color: black;">
                          [])
                         </span>
                        </span>
                       </span>
                      </span>
                     </span>
                    </span>
                   </span>
                  </span>
                 </span>
                </span>
               </span>
              </span>
              <br/>
              <span style="color: black; font-family: Consolas; font-size: 9pt; background-color: white;">
               {
              </span>
              <br/>
              <span style="color: black; font-family: Consolas; font-size: 9pt; background-color: white;">
               coro().get();
              </span>
              <br/>
              <span style="color: black; font-family: Consolas; font-size: 9pt; background-color: white;">
               }
              </span>
             </p>
             <p>
              <span style="text-decoration: underline;">
               <strong>
                Generator pattern
               </strong>
              </span>
             </p>
             <p>
              The below code snippet demonstrates the usage of the proposed '__yield_value' keyword in the generator pattern where the generator coroutine is able to "yield" the values back to the calling function and can also be cancelled on demand.
             </p>
             <p>
              <span style="color: blue; font-family: Consolas; font-size: 9pt; background-color: white;">
               #include
               <span style="color: black;">
                <span style="color: #a31515;">
                 &lt;iostream&gt;
                </span>
               </span>
              </span>
              <br/>
              <span style="color: blue; font-family: Consolas; font-size: 9pt; background-color: white;">
               #include
               <span style="color: black;">
                <span style="color: #a31515;">
                 &lt;experimental/generator&gt;
                </span>
               </span>
              </span>
              <br/>
              <br/>
              <span style="color: blue; font-family: Consolas; font-size: 9pt; background-color: white;">
               using
               <span style="color: black;">
                <span style="color: blue;">
                 namespace
                 <span style="color: black;">
                  std::experimental;
                 </span>
                </span>
               </span>
              </span>
              <br/>
              <span style="color: blue; font-family: Consolas; font-size: 9pt; background-color: white;">
               using
               <span style="color: black;">
                <span style="color: blue;">
                 namespace
                 <span style="color: black;">
                  std;
                 </span>
                </span>
               </span>
              </span>
              <br/>
              <br/>
              <span style="color: #2b91af; font-family: Consolas; font-size: 9pt; background-color: white;">
               generator
               <span style="color: black;">
                &lt;
                <span style="color: blue;">
                 int
                 <span style="color: black;">
                  &gt; fib()
                 </span>
                </span>
               </span>
              </span>
              <br/>
              <span style="color: black; font-family: Consolas; font-size: 9pt; background-color: white;">
               {
              </span>
              <br/>
              <span style="color: black; font-family: Consolas; font-size: 9pt; background-color: white;">
               <span style="color: blue;">
                int
                <span style="color: black;">
                 a = 0;
                </span>
               </span>
              </span>
              <br/>
              <span style="color: black; font-family: Consolas; font-size: 9pt; background-color: white;">
               <span style="color: blue;">
                int
                <span style="color: black;">
                 b = 1;
                </span>
               </span>
              </span>
              <br/>
              <span style="color: black; font-family: Consolas; font-size: 9pt; background-color: white;">
               <span style="color: blue;">
                for
                <span style="color: black;">
                 (;;) {
                </span>
               </span>
              </span>
              <br/>
              <span style="color: black; font-family: Consolas; font-size: 9pt; background-color: white;">
               <span style="color: blue;">
                __yield_value
                <span style="color: black;">
                 a;
                </span>
               </span>
              </span>
              <br/>
              <span style="color: black; font-family: Consolas; font-size: 9pt; background-color: white;">
               <span style="color: blue;">
                auto
                <span style="color: black;">
                 next = a + b;
                </span>
               </span>
              </span>
              <br/>
              <span style="color: black; font-family: Consolas; font-size: 9pt; background-color: white;">
               a = b;
              </span>
              <br/>
              <span style="color: black; font-family: Consolas; font-size: 9pt; background-color: white;">
               b = next;
              </span>
              <br/>
              <span style="color: black; font-family: Consolas; font-size: 9pt; background-color: white;">
               }
              </span>
              <br/>
              <span style="color: black; font-family: Consolas; font-size: 9pt; background-color: white;">
               }
              </span>
              <br/>
              <br/>
              <span style="color: blue; font-family: Consolas; font-size: 9pt; background-color: white;">
               int
               <span style="color: black;">
                <span style="color: #6f008a;">
                 _tmain
                 <span style="color: black;">
                  (
                  <span style="color: blue;">
                   int
                   <span style="color: black;">
                    <span style="color: gray;">
                     argc
                     <span style="color: black;">
                      ,
                      <span style="color: #2b91af;">
                       _TCHAR
                       <span style="color: black;">
                        *
                        <span style="color: gray;">
                         argv
                         <span style="color: black;">
                          [])
                         </span>
                        </span>
                       </span>
                      </span>
                     </span>
                    </span>
                   </span>
                  </span>
                 </span>
                </span>
               </span>
              </span>
              <br/>
              <span style="color: black; font-family: Consolas; font-size: 9pt; background-color: white;">
               {
              </span>
              <br/>
              <span style="color: black; font-family: Consolas; font-size: 9pt; background-color: white;">
               <span style="color: blue;">
                for
                <span style="color: black;">
                 (v : fib()) {
                </span>
               </span>
              </span>
              <br/>
              <span style="color: black; font-family: Consolas; font-size: 9pt; background-color: white;">
               <span style="color: blue;">
                if
                <span style="color: black;">
                 (v &gt; 50)
                </span>
               </span>
              </span>
              <br/>
              <span style="color: black; font-family: Consolas; font-size: 9pt; background-color: white;">
               <span style="color: blue;">
                break
                <span style="color: black;">
                 ;
                </span>
               </span>
              </span>
              <br/>
              <span style="color: black; font-family: Consolas; font-size: 9pt; background-color: white;">
               cout &lt;&lt; v &lt;&lt; endl;
              </span>
              <br/>
              <span style="color: black; font-family: Consolas; font-size: 9pt; background-color: white;">
               }
              </span>
              <br/>
              <span style="font-size: 9pt;">
               <span style="color: black; font-family: Consolas; background-color: white;">
                }
               </span>
              </span>
             </p>
             <p>
              <span style="text-decoration: underline;">
               <strong>
                Reactive Streams
               </strong>
              </span>
             </p>
             <p>
              The below code pattern demonstrates the usage of the proposed 'for __await' keyword in a scenario where a coroutine (Ticks) produces an asynchronous stream of values and a function (Sum) consumes those values. The coroutine TimeStamp demonstrates the scenario where a coroutine consumes an incoming stream, process it and outputs it to whoever is waiting for it.
             </p>
             <p>
              <span style="color: green; font-family: Consolas; font-size: 9pt; background-color: white;">
               //As a consumer
              </span>
              <br/>
              <span style="color: black; font-family: Consolas; font-size: 9pt; background-color: white;">
               future&lt;
               <span style="color: blue;">
                int
                <span style="color: black;">
                 &gt; Sum(async_read_stream&lt;
                 <span style="color: blue;">
                  int
                  <span style="color: black;">
                   &gt; &amp; input)
                  </span>
                 </span>
                </span>
               </span>
              </span>
              <br/>
              <span style="color: black; font-family: Consolas; font-size: 9pt; background-color: white;">
               {
              </span>
              <br/>
              <span style="color: black; font-family: Consolas; font-size: 9pt; background-color: white;">
               <span style="color: blue;">
                int
                <span style="color: black;">
                 result = 0;
                </span>
               </span>
              </span>
              <br/>
              <span style="color: black; font-family: Consolas; font-size: 9pt; background-color: white;">
               <span style="color: blue;">
                <strong>
                 for
                 <span style="color: black;">
                  __await
                 </span>
                </strong>
                (v : input)
               </span>
              </span>
              <br/>
              <span style="color: black; font-family: Consolas; font-size: 9pt; background-color: white;">
               {
              </span>
              <br/>
              <span style="color: black; font-family: Consolas; font-size: 9pt; background-color: white;">
               result += v;
              </span>
              <br/>
              <span style="color: black; font-family: Consolas; font-size: 9pt; background-color: white;">
               }
              </span>
              <br/>
              <span style="color: black; font-family: Consolas; font-size: 9pt; background-color: white;">
               <span style="color: blue;">
                return
                <span style="color: black;">
                 result;
                </span>
               </span>
              </span>
              <br/>
              <span style="color: black; font-family: Consolas; font-size: 9pt; background-color: white;">
               }
              </span>
              <br/>
              <br/>
              <span style="color: green; font-family: Consolas; font-size: 9pt; background-color: white;">
               //As a producer :
              </span>
              <br/>
              <span style="color: black; font-family: Consolas; font-size: 9pt; background-color: white;">
               async_generator&lt;
               <span style="color: blue;">
                int
                <span style="color: black;">
                 &gt; Ticks()
                </span>
               </span>
              </span>
              <br/>
              <span style="color: black; font-family: Consolas; font-size: 9pt; background-color: white;">
               {
              </span>
              <br/>
              <span style="color: black; font-family: Consolas; font-size: 9pt; background-color: white;">
               <span style="color: blue;">
                for
                <span style="color: black;">
                 (
                 <span style="color: blue;">
                  int
                  <span style="color: black;">
                   tick = 0;; ++tick)
                  </span>
                 </span>
                </span>
               </span>
              </span>
              <br/>
              <span style="color: black; font-family: Consolas; font-size: 9pt; background-color: white;">
               {
              </span>
              <br/>
              <span style="color: black; font-family: Consolas; font-size: 9pt; background-color: white;">
               <span style="color: blue;">
                __yield_value
                <span style="color: black;">
                 tick;
                </span>
               </span>
              </span>
              <br/>
              <span style="color: black; font-family: Consolas; font-size: 9pt; background-color: white;">
               __await sleep_for(1ms);
              </span>
              <br/>
              <span style="color: black; font-family: Consolas; font-size: 9pt; background-color: white;">
               }
              </span>
              <br/>
              <span style="color: black; font-family: Consolas; font-size: 9pt; background-color: white;">
               }
              </span>
              <br/>
              <br/>
              <span style="color: green; font-family: Consolas; font-size: 9pt; background-color: white;">
               //As a transformer : (adds a timestamp to every observed value)
              </span>
              <br/>
              <span style="color: blue; font-family: Consolas; font-size: 9pt; background-color: white;">
               template
               <span style="color: black;">
                &lt;
                <span style="color: blue;">
                 class
                 <span style="color: black;">
                  T&gt;
                 </span>
                </span>
               </span>
              </span>
              <br/>
              <span style="color: black; font-family: Consolas; font-size: 9pt; background-color: white;">
               async_generator&lt;pair&lt;T, system_clock::time_point&gt;&gt;
              </span>
              <br/>
              <span style="color: black; font-family: Consolas; font-size: 9pt; background-color: white;">
               Timestamp(async_read_stream&lt;T&gt; S)
              </span>
              <br/>
              <span style="color: black; font-family: Consolas; font-size: 9pt; background-color: white;">
               {
              </span>
              <br/>
              <span style="color: black; font-family: Consolas; font-size: 9pt; background-color: white;">
               <span style="color: blue;">
                for
                <span style="color: black;">
                 __await(v: S)
                </span>
               </span>
              </span>
             </p>
             <p style="margin-left: 36pt;">
              <span style="color: black; font-family: Consolas; font-size: 9pt; background-color: white;">
               __yield_value { v, system_clock::now() };
              </span>
             </p>
             <p>
              <span style="font-size: 9pt;">
               <span style="color: black; font-family: Consolas; background-color: white;">
                }
               </span>
              </span>
             </p>
             <p>
              These are just some of the examples of this feature. We will continue our work in this area beyond this Preview release and hope to add more coverage, better user experience and in-built support for more high-level scenarios in upcoming releases. However, we hope you will like what you have seen so far, play with this feature, find novel uses for the base concepts and functionality. We look forward to hearing all your feedback.
             </p>
             <div style="clear:both;">
             </div>
            </div>
            <div class="post-attachment-viewer">
            </div>
            <div class="post-actions">
             <div class="navigation-list-header">
             </div>
             <ul class="navigation-list">
              <!-- -->
              <li class="navigation-item">
               <a class="internal-link view-replies" href="/b/vcblog/archive/2014/11/12/resumable-functions-in-c.aspx#comments">
                <span>
                </span>
                25 Comments
               </a>
              </li>
             </ul>
             <div class="navigation-list-footer">
             </div>
            </div>
            <div class="post-tags">
             <div id="ctl00_content_ctl00_w_203838__aec51d_ctl00_ctl15_ctl01_Container" style="display: none;">
              <div class="tags-editor">
               <textarea cols="30" id="ctl00_content_ctl00_w_203838__aec51d_ctl00_ctl15_ctl01_Tags" rows="2" style="width: 97%; height: 100%;">
               </textarea>
               <div style="white-space: nowrap; padding-top: 4px;">
                <table border="0" cellpadding="0" cellspacing="0" width="100%">
                 <tr>
                  <td align="left">
                   <input onclick="Telligent_Modal.Open('\/utility\/TagSelector.aspx?TagEditor=ctl00_content_ctl00_w_203838__aec51d_ctl00_ctl15_ctl01_TagEditor',400,300,null);;return false;" type="button" value="Select Tags..."/>
                  </td>
                  <td align="right">
                   <input onclick="ctl00_content_ctl00_w_203838__aec51d_ctl00_ctl15_ctl01.Save(); return false;" type="button" value="Save"/>
                   <input onclick="ctl00_content_ctl00_w_203838__aec51d_ctl00_ctl15_ctl01.Close(); return false;" type="button" value="Cancel"/>
                  </td>
                 </tr>
                </table>
               </div>
              </div>
             </div>
             <span id="ctl00_content_ctl00_w_203838__aec51d_ctl00_ctl15_ctl02">
              <a href="http://blogs.msdn.com/b/vcblog/archive/tags/Announcement/" rel="tag">
               Announcement
              </a>
             </span>
             <input id="ctl00_content_ctl00_w_203838__aec51d_ctl00_ctl15_ctl02_State" name="ctl00$content$ctl00$w_203838$_aec51d$ctl00$ctl15$ctl02" type="hidden" value="nochange"/>
            </div>
           </div>
           <div class="full-post-footer">
           </div>
          </div>
          <div class="content-fragment-footer">
          </div>
          <div class="content-fragment-bottom wireframe-content-fragment-bottom">
           <div class="r1 wireframe-r1">
           </div>
           <div class="r2 wireframe-r2">
           </div>
           <div class="r3 wireframe-r3">
           </div>
           <div class="r4 wireframe-r4">
           </div>
          </div>
         </div>
        </div>
        <div class="content-fragment social-media-sharing no-wrapper-with-spacing" id="fragment-203839">
         <div class="content-fragment-inner wireframe-content-fragment-inner">
          <div class="content-fragment-top wireframe-content-fragment-top">
           <div class="r1 wireframe-r1">
           </div>
           <div class="r2 wireframe-r2">
           </div>
           <div class="r3 wireframe-r3">
           </div>
           <div class="r4 wireframe-r4">
           </div>
          </div>
          <div class="content-fragment-content">
           <script src="http://i1.blogs.msdn.com/rrcontent/47499858c4077d6e043f7add14000981-e99ec8f3b45f97b38095df2708dc5898-RequestReducedScript.js" type="text/javascript">
           </script>
           <div class="ShareThisMainPanel">
            <div class="ShareThis_ChildRootPanel" id="ctl00_content_ctl00_w_203839__aec51d_ctl00_36ee69b6_9eec_4efa_bb05_1060e5b0778d" onmouseout="ShareThisChildRootPanelOnmouseOut(this.id);" onmouseover="ShareThisChildRootPanelOnmouseOver(this.id);">
             <div class="tierOnePanel" id="ctl00_content_ctl00_w_203839__aec51d_ctl00_ShareThisBtnCollPanel_9c01686e86024fbca5299fcdcd2de491">
              <div class="buttonPanel">
               <a class="iconsOnPanel" href="http://www.facebook.com/sharer.php?u=http://blogs.msdn.com/b/vcblog/archive/2014/11/12/resumable-functions-in-c.aspx&amp;t=Resumable+functions+in+C%2b%2b" target="_blank" title="Share on Facebook">
                <img src="/CustomWidgets/SocialMediaSharingUC/Resources/facebook.gif" style="border-width:0px;" title="Share on Facebook"/>
               </a>
              </div>
              <div class="buttonPanel">
               <a class="iconsOnPanel" href="http://twitter.com/home?status=Resumable+functions+in+C%2b%2b : http://blogs.msdn.com/b/vcblog/archive/2014/11/12/resumable-functions-in-c.aspx" target="_blank" title="Share on Twitter">
                <img src="/CustomWidgets/SocialMediaSharingUC/Resources/twitter.gif" style="border-width:0px;" title="Share on Twitter"/>
               </a>
              </div>
              <div class="buttonPanel">
               <a class="iconsOnPanel" href="http://digg.com/submit?url=http://blogs.msdn.com/b/vcblog/archive/2014/11/12/resumable-functions-in-c.aspx&amp;title=Resumable+functions+in+C%2b%2b" target="_blank" title="Share on Digg">
                <img src="/CustomWidgets/SocialMediaSharingUC/Resources/digg.gif" style="border-width:0px;" title="Share on Digg"/>
               </a>
              </div>
              <div class="buttonPanel">
               <a class="iconsOnPanel" href="http://del.icio.us/post?url=http://blogs.msdn.com/b/vcblog/archive/2014/11/12/resumable-functions-in-c.aspx&amp;title=Resumable+functions+in+C%2b%2b" target="_blank" title="Share on del.icio.us">
                <img src="/CustomWidgets/SocialMediaSharingUC/Resources/delicious.gif" style="border-width:0px;" title="Share on del.icio.us"/>
               </a>
              </div>
             </div>
             <div class="tierTwoPanel" id="ctl00_content_ctl00_w_203839__aec51d_ctl00_ShareThisBtnCollPanel_5580a44df4ec45689f214343b01d9281" onclick="TierTwoPanelOnclick(this.id);" onkeypress="if (event.keyCode == 13) TierTwoPanelOnclick(this.id);" onmouseout="TierTwoPanelOnmouseOut(this.id);" onmouseover="TierTwoPanelOnmouseOver(this.id);">
              <div class="tierTwoRowPanel" id="ctl00_content_ctl00_w_203839__aec51d_ctl00_ShareThisBtnCollPanel_86ba70ba704a4f2a8c6443732f145179">
               <div class="buttonPanel">
                <a class="iconsOnPanel" href="http://www.reddit.com/submit?url=http://blogs.msdn.com/b/vcblog/archive/2014/11/12/resumable-functions-in-c.aspx&amp;title=Resumable+functions+in+C%2b%2b" target="_blank" title="Share on Reddit">
                 <img src="/CustomWidgets/SocialMediaSharingUC/Resources/reddit.gif" style="border-width:0px;" title="Share on Reddit"/>
                </a>
               </div>
               <div class="buttonPanel">
                <a class="iconsOnPanel" href="http://www.linkedin.com/shareArticle?mini=true&amp;ro=true&amp;url=http://blogs.msdn.com/b/vcblog/archive/2014/11/12/resumable-functions-in-c.aspx&amp;title=Resumable+functions+in+C%2b%2b&amp;summary=&amp;source=Microsoft&amp;armin=armin" target="_blank" title="Share on LinkedIn">
                 <img src="/CustomWidgets/SocialMediaSharingUC/Resources/linkedin.gif" style="border-width:0px;" title="Share on LinkedIn"/>
                </a>
               </div>
               <div class="buttonPanel">
                <a class="iconsOnPanel" href="http://slashdot.org/bookmark.pl?url=http://blogs.msdn.com/b/vcblog/archive/2014/11/12/resumable-functions-in-c.aspx&amp;title=Resumable+functions+in+C%2b%2b" target="_blank" title="Share on Slashdot">
                 <img src="/CustomWidgets/SocialMediaSharingUC/Resources/slashdot.gif" style="border-width:0px;" title="Share on Slashdot"/>
                </a>
               </div>
               <div class="buttonPanel">
                <a class="iconsOnPanel" href="http://www.myspace.com/Modules/PostTo/Pages/?u=http://blogs.msdn.com/b/vcblog/archive/2014/11/12/resumable-functions-in-c.aspx&amp;t=Resumable+functions+in+C%2b%2b" target="_blank" title="Share on MySpace">
                 <img src="/CustomWidgets/SocialMediaSharingUC/Resources/myspace.gif" style="border-width:0px;" title="Share on MySpace"/>
                </a>
               </div>
              </div>
              <div class="tierTwoRowPanel" id="ctl00_content_ctl00_w_203839__aec51d_ctl00_ShareThisBtnCollPanel_65da0e4769304312a5ca945f3572ce6f">
               <div class="buttonPanel">
                <a class="iconsOnPanel" href="http://technorati.com/faves/?add=http://blogs.msdn.com/b/vcblog/archive/2014/11/12/resumable-functions-in-c.aspx" target="_blank" title="Share on Technorati">
                 <img src="/CustomWidgets/SocialMediaSharingUC/Resources/technorati.gif" style="border-width:0px;" title="Share on Technorati"/>
                </a>
               </div>
               <div class="buttonPanel">
                <a class="iconsOnPanel" href="http://friendfeed.com/?url=http://blogs.msdn.com/b/vcblog/archive/2014/11/12/resumable-functions-in-c.aspx&amp;title=Resumable+functions+in+C%2b%2b" target="_blank" title="Share on FriendFeed">
                 <img src="/CustomWidgets/SocialMediaSharingUC/Resources/friendfeed.gif" style="border-width:0px;" title="Share on FriendFeed"/>
                </a>
               </div>
               <div class="buttonPanel">
                <a class="iconsOnPanel" href="http://profile.live.com/badge?url=http://blogs.msdn.com/b/vcblog/archive/2014/11/12/resumable-functions-in-c.aspx&amp;title=Resumable+functions+in+C%2b%2b" target="_blank" title="Share on Messenger">
                 <img src="/CustomWidgets/SocialMediaSharingUC/Resources/messenger.png" style="border-width:0px;" title="Share on Messenger"/>
                </a>
               </div>
               <div class="buttonPanel">
                <a class="iconsOnPanel" href="http://www.stumbleupon.com/submit?url=http://blogs.msdn.com/b/vcblog/archive/2014/11/12/resumable-functions-in-c.aspx&amp;title=Resumable+functions+in+C%2b%2b" target="_blank" title="Share on StumbleUpon">
                 <img src="/CustomWidgets/SocialMediaSharingUC/Resources/stumbleupon.gif" style="border-width:0px;" title="Share on StumbleUpon"/>
                </a>
               </div>
              </div>
             </div>
            </div>
            <div class="ShowMoreLessButtonsPanel" id="ctl00_content_ctl00_w_203839__aec51d_ctl00_ShowMoreLessButtonsPanel_768b2077_cb03_4915_9d05_ebeafd00213d" onclick="ShowMoreLessButtonsPanelOnClick(this.id);" onkeypress="if (event.keyCode == 13) ShowMoreLessButtonsPanelOnClick(this.id);" onmouseout="ShowMoreLessButtonsPanelOnmouseOut(this.id);" onmouseover="ShowMoreLessButtonsPanelOnmouseOver(this.id);" tabindex="1">
             <a class="buttonMoreLess" id="btn_more">
              <img border="0" src="/CustomWidgets/SocialMediaSharingUC/Resources/more.gif" title="More"/>
             </a>
             <a class="buttonMoreLess" id="btn_less">
              <img border="0" src="/CustomWidgets/SocialMediaSharingUC/Resources/less.gif" title="Less"/>
             </a>
            </div>
           </div>
           <div class="ShareClearFloatsPanel">
           </div>
          </div>
          <div class="content-fragment-footer">
          </div>
          <div class="content-fragment-bottom wireframe-content-fragment-bottom">
           <div class="r1 wireframe-r1">
           </div>
           <div class="r2 wireframe-r2">
           </div>
           <div class="r3 wireframe-r3">
           </div>
           <div class="r4 wireframe-r4">
           </div>
          </div>
         </div>
        </div>
        <div class="content-fragment captcha-blog-post-comment-form no-wrapper-with-spacing" id="fragment-203840">
         <div class="content-fragment-inner wireframe-content-fragment-inner">
          <div class="content-fragment-top wireframe-content-fragment-top">
           <div class="r1 wireframe-r1">
           </div>
           <div class="r2 wireframe-r2">
           </div>
           <div class="r3 wireframe-r3">
           </div>
           <div class="r4 wireframe-r4">
           </div>
          </div>
          <div class="content-fragment-content">
           <input id="ctl00_content_ctl00_w_203840__aec51d_ctl00_ctl00_postCommentUrl" name="ctl00$content$ctl00$w_203840$_aec51d$ctl00$ctl00$postCommentUrl" type="hidden"/>
          </div>
          <div class="content-fragment-footer">
          </div>
          <div class="content-fragment-bottom wireframe-content-fragment-bottom">
           <div class="r1 wireframe-r1">
           </div>
           <div class="r2 wireframe-r2">
           </div>
           <div class="r3 wireframe-r3">
           </div>
           <div class="r4 wireframe-r4">
           </div>
          </div>
         </div>
        </div>
        <div class="content-fragment blog-feedback-list no-wrapper-with-spacing" id="fragment-203841">
         <div class="content-fragment-inner wireframe-content-fragment-inner">
          <div class="content-fragment-top wireframe-content-fragment-top">
           <div class="r1 wireframe-r1">
           </div>
           <div class="r2 wireframe-r2">
           </div>
           <div class="r3 wireframe-r3">
           </div>
           <div class="r4 wireframe-r4">
           </div>
          </div>
          <div class="content-fragment-content">
           <script type="text/javascript">
            // &lt;![CDATA[
	$(document).ready(function() {
	$(document).bind('telligent_blogs_commentposted', function(e, message) { 
	            window.setTimeout(new Function(ctl00_content_ctl00_w_203841__aec51d_ctl00_ctl00_DelayedFeedbackList.Reload()), 100); 
	            return true; 
	    });
	    ctl00_content_ctl00_w_203841__aec51d_ctl00_ctl00_DelayedFeedbackList.Reload();
	});
// ]]&gt;
           </script>
           <div id="ctl00_content_ctl00_w_203841__aec51d_ctl00_ctl00_DelayedFeedbackList">
            <input name="ctl00$content$ctl00$w_203841$_aec51d$ctl00$ctl00$DelayedFeedbackList" type="hidden" value="true:"/>
            <a name="comments">
            </a>
            <div class="content-list-header">
            </div>
            <div class="content-list-name">
             <a class="internal-link rss" href="/b/vcblog/rsscomments.aspx?WeblogPostID=10571054">
              <span>
              </span>
              Comments
             </a>
            </div>
            <ul class="content-list">
             <li class="content-item">
              <div class="full-post-outer wireframe-full-post-outer">
               <div class="full-post-header">
                <div class="r wireframe-r">
                </div>
               </div>
               <div class="full-post">
                <div class="full-post-inner wireframe-full-post-inner">
                 <div class="post-author">
                  <span class="avatar">
                   <img alt="" border="0" src="/utility/anonymous.gif" style="max-height:32px;max-width:32px;"/>
                  </span>
                  <span class="profile-usercard-hover" data-profile-userid="00000000-0000-0000-0000-000000000000">
                   <span class="user-name">
                    JRB
                   </span>
                  </span>
                 </div>
                 <div class="post-date">
                  <span class="value">
                   12 Nov 2014 8:32 AM
                  </span>
                 </div>
                 <div class="post-content user-defined-markup">
                  <p>
                   Does this preview support all the customization features mention in Gor's talk such as specializing await_ready et al to support boost::future?
                  </p>
                  <div style="clear:both;">
                  </div>
                 </div>
                 <div class="post-actions">
                 </div>
                </div>
               </div>
               <div class="full-post-footer">
                <div class="r wireframe-r">
                </div>
               </div>
              </div>
             </li>
             <li class="content-item">
              <div class="full-post-outer wireframe-full-post-outer">
               <div class="full-post-header">
                <div class="r wireframe-r">
                </div>
               </div>
               <div class="full-post">
                <div class="full-post-inner wireframe-full-post-inner">
                 <div class="post-author">
                  <span class="avatar">
                   <a href="/643648/ProfileUrlRedirect.ashx">
                    <img alt="" src="http://i1.social.s-msft.com/profile/u/avatar.jpg?displayname=gor+nishanov+-+msft&amp;size=large" style="border-width:0px;max-height:32px;max-width:32px;"/>
                   </a>
                  </span>
                  <span class="profile-usercard-hover" data-profile-userid="ded5a164-2305-4fb9-95f7-3c4fde06bcd4">
                   <span class="user-name">
                    <a class="internal-link view-user-profile" href="/643648/ProfileUrlRedirect.ashx">
                     <span>
                     </span>
                     Gor Nishanov - MSFT
                    </a>
                   </span>
                  </span>
                 </div>
                 <div class="post-date">
                  <span class="value">
                   12 Nov 2014 9:26 AM
                  </span>
                 </div>
                 <div class="post-content user-defined-markup">
                  <p>
                   There a few differences compared to the slides and N4134:
                  </p>
                  <p>
                   Slide 10:
                  </p>
                  <p>
                   yield expr is a statement, not an expression. (use await when you need pull semantics)
                  </p>
                  <p>
                   await() is removed. (use explicit await on explicit channel to pull a value)
                  </p>
                  <p>
                   auto type deduction does not work yet. Thus coroutine return types such as generator&lt;int&gt; must be explicitly specified.
                  </p>
                  <p>
                   std::experimental::generator&lt;T&gt; does not support recursive invocations. This was intentional as recursive generators carry a little bit of overhead compared to non-recursive generators.
                  </p>
                  <p>
                   We consider adding std::experimental::recursive_generator for RTM that does support recursion.
                  </p>
                  <p>
                   N4134 describes a static member of resumable_traits get_return_object_on_allocation failure. We did not implement it yet.
                  </p>
                  <p>
                   Apart from the things mentioned above, it should support all customization machinery described in CppCon talk and in N4134.
                  </p>
                  <p>
                   The feedback we are very interested in is from library writers who experiment with customization machinery and tell us what other customization knobs they desire to implement their coroutine types or hook ups to their async libraries / primitives.
                  </p>
                  <div style="clear:both;">
                  </div>
                 </div>
                 <div class="post-actions">
                 </div>
                </div>
               </div>
               <div class="full-post-footer">
                <div class="r wireframe-r">
                </div>
               </div>
              </div>
             </li>
             <li class="content-item">
              <div class="full-post-outer wireframe-full-post-outer">
               <div class="full-post-header">
                <div class="r wireframe-r">
                </div>
               </div>
               <div class="full-post">
                <div class="full-post-inner wireframe-full-post-inner">
                 <div class="post-author">
                  <span class="avatar">
                   <a href="/117921/ProfileUrlRedirect.ashx">
                    <img alt="" src="http://i1.social.s-msft.com/profile/u/avatar.jpg?displayname=thebanjomatic&amp;size=large" style="border-width:0px;max-height:32px;max-width:32px;"/>
                   </a>
                  </span>
                  <span class="profile-usercard-hover" data-profile-userid="9b38a896-1b22-4a89-ab74-4f5410dc04cd">
                   <span class="user-name">
                    <a class="internal-link view-user-profile" href="/117921/ProfileUrlRedirect.ashx">
                     <span>
                     </span>
                     thebanjomatic
                    </a>
                   </span>
                  </span>
                 </div>
                 <div class="post-date">
                  <span class="value">
                   12 Nov 2014 1:10 PM
                  </span>
                 </div>
                 <div class="post-content user-defined-markup">
                  <p>
                   @GorNishanov
                  </p>
                  <p>
                   I've been playing around with generators a little bit and have encountered some difficulty with regard to ownership of parameters and move semantics. I would expect that when passed temporaries to a co-routine, those temporaries would be captured and persisted (by move construction) onto the heap allocated frame, but that doesn't seem to be the case.
                  </p>
                  <p>
                   Consider the following example, where the parameter is passed to the generator function by value. In this case, we copy the entire vector on the call to squares, and that value is stored in the frame of the generator. So far so good, it works, but its not very efficient.
                  </p>
                  <p>
                   generator&lt;int&gt; squares(std::vector&lt;int&gt; ints) {
                  </p>
                  <p>
                   for (int val : ints)
                  </p>
                  <p>
                   __yield_value val * val;
                  </p>
                  <p>
                   }
                  </p>
                  <p>
                   generator&lt;int&gt;lotsOfSquares() {
                  </p>
                  <p>
                   auto largeVector = std::vector&lt;int&gt;{ 1, 2, 3, 4, /*...*/ 10000 };
                  </p>
                  <p>
                   return squares(largeVector);
                  </p>
                  <p>
                   }
                  </p>
                  <p>
                   If we modify 'squares' to take an r-value reference and move largeVector, things break. From my understanding, this is because the compiler is just storing the reference, and at the time the function actually executes (when calling begin), the object being referenced is now garbage.
                  </p>
                  <p>
                   generator&lt;int&gt; squares(std::vector&lt;int&gt;&amp;&amp; ints) {
                  </p>
                  <p>
                   for (int val : ints)
                  </p>
                  <p>
                   __yield_value val * val;
                  </p>
                  <p>
                   }
                  </p>
                  <p>
                   generator&lt;int&gt;lotsOfSquares() {
                  </p>
                  <p>
                   auto largeVector = std::vector&lt;int&gt;{ 1, 2, 3, 4, /*...*/ 10000 };
                  </p>
                  <p>
                   return squares(std::move(largeVector));
                  </p>
                  <p>
                   }
                  </p>
                  <p>
                   In a lot of ways, this is similar to returning a lambda/closure which captures the vector by reference and has the same problem:
                  </p>
                  <p>
                   // closure captures reference to local, DNE when you call the returned functor.
                  </p>
                  <p>
                   auto bad_iterate() {
                  </p>
                  <p>
                   auto largeVector = std::vector&lt;int&gt;{ 1, 2, 3, 4, /*...*/ 10000 };
                  </p>
                  <p>
                   return [&amp;largeVector] {
                  </p>
                  <p>
                   for (int i : largeVector) {}
                  </p>
                  <p>
                   };
                  </p>
                  <p>
                   }
                  </p>
                  <p>
                   However, in the case of lambda generalized lambda capture provides the solution to this problem:
                  </p>
                  <p>
                   auto iterate() {
                  </p>
                  <p>
                   auto largeVector = std::vector&lt;int&gt;{ 1, 2, 3, 4, /*...*/ 10000 };
                  </p>
                  <p>
                   return [vec = std::move(largeVector)] {
                  </p>
                  <p>
                   for (int i : vec) {}
                  </p>
                  <p>
                   };
                  </p>
                  <p>
                   }
                  </p>
                  <p>
                   The best solution I could come up was to wrap the copying generator function like this, but it doesn't feel like this should be necessary:
                  </p>
                  <p>
                   generator&lt;int&gt; squares_impl(std::vector&lt;int&gt; ints) {
                  </p>
                  <p>
                   for (int val : ints)
                  </p>
                  <p>
                   __yield_value val * val;
                  </p>
                  <p>
                   }
                  </p>
                  <p>
                   generator&lt;int&gt; squares(std::vector&lt;int&gt;&amp;&amp; ints) { return squares_impl(std::move(ints)); }
                  </p>
                  <p>
                   generator&lt;int&gt; squares(const std::vector&lt;int&gt;&amp; ints) { return squares_impl(ints); }
                  </p>
                  <div style="clear:both;">
                  </div>
                 </div>
                 <div class="post-actions">
                 </div>
                </div>
               </div>
               <div class="full-post-footer">
                <div class="r wireframe-r">
                </div>
               </div>
              </div>
             </li>
             <li class="content-item">
              <div class="full-post-outer wireframe-full-post-outer">
               <div class="full-post-header">
                <div class="r wireframe-r">
                </div>
               </div>
               <div class="full-post">
                <div class="full-post-inner wireframe-full-post-inner">
                 <div class="post-author">
                  <span class="avatar">
                   <a href="/643648/ProfileUrlRedirect.ashx">
                    <img alt="" src="http://i1.social.s-msft.com/profile/u/avatar.jpg?displayname=gor+nishanov+-+msft&amp;size=large" style="border-width:0px;max-height:32px;max-width:32px;"/>
                   </a>
                  </span>
                  <span class="profile-usercard-hover" data-profile-userid="ded5a164-2305-4fb9-95f7-3c4fde06bcd4">
                   <span class="user-name">
                    <a class="internal-link view-user-profile" href="/643648/ProfileUrlRedirect.ashx">
                     <span>
                     </span>
                     Gor Nishanov - MSFT
                    </a>
                   </span>
                  </span>
                 </div>
                 <div class="post-date">
                  <span class="value">
                   12 Nov 2014 1:39 PM
                  </span>
                 </div>
                 <div class="post-content user-defined-markup">
                  <p>
                   <strong>
                    @thebanjomatic
                   </strong>
                  </p>
                  <p>
                   Please look at the following example:
                  </p>
                  <p>
                   <span style="font-family:courier new,courier;">
                    #include &lt;experimental/generator&gt;
                   </span>
                   <br/>
                   <span style="font-family:courier new,courier;">
                    #include "Noisy.h"
                   </span>
                  </p>
                  <p>
                   <span style="font-family:courier new,courier;">
                    std::experimental::generator&lt;Noisy&gt; test(Noisy val) {
                   </span>
                   <br/>
                   <span style="font-family:courier new,courier;">
                    __yield_value val;
                   </span>
                   <br/>
                   <span style="font-family:courier new,courier;">
                    }
                   </span>
                  </p>
                  <p>
                   <span style="font-family:courier new,courier;">
                    int main() {
                   </span>
                   <br/>
                   <span style="font-family:courier new,courier;">
                    for (x: test(Noisy{}))
                   </span>
                   <br/>
                   <span style="font-family:courier new,courier;">
                    x(5);
                   </span>
                   <br/>
                   <span style="font-family:courier new,courier;">
                    }
                   </span>
                  </p>
                  <p>
                   We invoke move automatically if possible. The output for the program above is:
                  </p>
                  <p>
                   default ctor
                   <br/>
                   move ctor
                   <br/>
                   dtor
                   <br/>
                   invoke(5)
                   <br/>
                   dtor
                  </p>
                  <p>
                   Where noisy.h looks like:
                  </p>
                  <p>
                   <span style="font-family:courier new,courier;">
                    #pragma once
                   </span>
                   <br/>
                   <span style="font-family:courier new,courier;">
                    #include &lt;iostream&gt;
                   </span>
                  </p>
                  <p>
                   <span style="font-family:courier new,courier;">
                    struct Noisy {
                   </span>
                   <br/>
                   <span style="font-family:courier new,courier;">
                    Noisy() { std::cout &lt;&lt; "default ctor\n"; }
                   </span>
                   <br/>
                   <span style="font-family:courier new,courier;">
                    Noisy(const Noisy&amp;) { std::cout &lt;&lt; "copy ctor\n"; }
                   </span>
                   <br/>
                   <span style="font-family:courier new,courier;">
                    Noisy&amp; operator=(const Noisy&amp;) { std::cout &lt;&lt; "copy assign\n"; return *this;}
                   </span>
                   <br/>
                   <span style="font-family:courier new,courier;">
                    Noisy(Noisy&amp;&amp;) { std::cout &lt;&lt; "move ctor\n";}
                   </span>
                   <br/>
                   <span style="font-family:courier new,courier;">
                    Noisy&amp; operator=(Noisy&amp;&amp;){ std::cout &lt;&lt; "move assign\n"; return *this; }
                   </span>
                   <br/>
                   <span style="font-family:courier new,courier;">
                    void operator()() const { std::cout &lt;&lt; "invoke\n";}
                   </span>
                   <br/>
                   <span style="font-family:courier new,courier;">
                    template &lt;class T&gt;
                   </span>
                   <br/>
                   <span style="font-family:courier new,courier;">
                    void operator()(T const&amp; val) const { std::cout &lt;&lt; "invoke(" &lt;&lt; val &lt;&lt; ")\n"; }
                   </span>
                   <br/>
                   <span style="font-family:courier new,courier;">
                    ~Noisy() { std::cout &lt;&lt; "dtor" &lt;&lt; std::endl;}
                   </span>
                   <br/>
                   <span style="font-family:courier new,courier;">
                    };
                   </span>
                  </p>
                  <div style="clear:both;">
                  </div>
                 </div>
                 <div class="post-actions">
                 </div>
                </div>
               </div>
               <div class="full-post-footer">
                <div class="r wireframe-r">
                </div>
               </div>
              </div>
             </li>
             <li class="content-item">
              <div class="full-post-outer wireframe-full-post-outer">
               <div class="full-post-header">
                <div class="r wireframe-r">
                </div>
               </div>
               <div class="full-post">
                <div class="full-post-inner wireframe-full-post-inner">
                 <div class="post-author">
                  <span class="avatar">
                   <a href="/117921/ProfileUrlRedirect.ashx">
                    <img alt="" src="http://i1.social.s-msft.com/profile/u/avatar.jpg?displayname=thebanjomatic&amp;size=large" style="border-width:0px;max-height:32px;max-width:32px;"/>
                   </a>
                  </span>
                  <span class="profile-usercard-hover" data-profile-userid="9b38a896-1b22-4a89-ab74-4f5410dc04cd">
                   <span class="user-name">
                    <a class="internal-link view-user-profile" href="/117921/ProfileUrlRedirect.ashx">
                     <span>
                     </span>
                     thebanjomatic
                    </a>
                   </span>
                  </span>
                 </div>
                 <div class="post-date">
                  <span class="value">
                   12 Nov 2014 3:13 PM
                  </span>
                 </div>
                 <div class="post-content user-defined-markup">
                  <p>
                   @GorNishanov
                  </p>
                  <p>
                   Yes, I noticed that as well, and that was ultimately the conclusion that I came to (capture parameters by value and rely on move semantics at the call-site). The wrapper functions that I came up with before are unnecessary. In retrospect, specifying the parameters as by-value is the typical way of specifying that the function requires ownership of the data, so that much should make sense.
                  </p>
                  <p>
                   I think where I was getting confused was that with a normal function, the lifetime of the temporary is extended to that of the full expression. In the case of functions, that lifetime includes the full execution of the function, but for generators the timelines don't intersect at all. You will (almost?) never call begin until after your temporary has already been destroyed. Consequently, there doesn't seem to be any valid use case for r-value reference parameters for resumable functions. If that is the case, perhaps it should be a compiler error / warning.
                  </p>
                  <p>
                   Alternatively, the lifetime of temporaries passed as r-value reference parameters could be extended to match the lifetime of the coroutine object, but I'm not sure I'd argue for that.
                  </p>
                  <p>
                   On an unrelated note, the following also gives me an access violation:
                  </p>
                  <p>
                   std::experimental::generator&lt;std::string&gt; foo() { __yield_value {"Hello"}; }
                  </p>
                  <p>
                   int _tmain(int argc, _TCHAR* argv[])
                  </p>
                  <p>
                   {
                  </p>
                  <p>
                   foo();
                  </p>
                  <p>
                   return 0;
                  </p>
                  <p>
                   }
                  </p>
                  <div style="clear:both;">
                  </div>
                 </div>
                 <div class="post-actions">
                 </div>
                </div>
               </div>
               <div class="full-post-footer">
                <div class="r wireframe-r">
                </div>
               </div>
              </div>
             </li>
             <li class="content-item">
              <div class="full-post-outer wireframe-full-post-outer">
               <div class="full-post-header">
                <div class="r wireframe-r">
                </div>
               </div>
               <div class="full-post">
                <div class="full-post-inner wireframe-full-post-inner">
                 <div class="post-author">
                  <span class="avatar">
                   <a href="/643648/ProfileUrlRedirect.ashx">
                    <img alt="" src="http://i1.social.s-msft.com/profile/u/avatar.jpg?displayname=gor+nishanov+-+msft&amp;size=large" style="border-width:0px;max-height:32px;max-width:32px;"/>
                   </a>
                  </span>
                  <span class="profile-usercard-hover" data-profile-userid="ded5a164-2305-4fb9-95f7-3c4fde06bcd4">
                   <span class="user-name">
                    <a class="internal-link view-user-profile" href="/643648/ProfileUrlRedirect.ashx">
                     <span>
                     </span>
                     Gor Nishanov - MSFT
                    </a>
                   </span>
                  </span>
                 </div>
                 <div class="post-date">
                  <span class="value">
                   12 Nov 2014 4:55 PM
                  </span>
                 </div>
                 <div class="post-content user-defined-markup">
                  <p>
                   @thebanjomatic
                  </p>
                  <p>
                   We look initially at providing fine grain control of how to transfer parameters that have to survive the suspend/resume to coroutine frame, but, later decide to go for the simpler rules described in: "Copying and moving class objects section of the working draft standard 3936/[class.copy]."
                  </p>
                  <p>
                   Thank you for the bug report. We were weighting being embarrassed by bugs like the one you discovered or not getting sufficient feedback for proposed customization machinery. We opt out for embarrassment :-) , with the understanding that this is an experimental feature that will get hardened by the RTM time and hopefully include tweaks of customization machinery if we discover that we missed an important customization scenario.
                  </p>
                  <div style="clear:both;">
                  </div>
                 </div>
                 <div class="post-actions">
                 </div>
                </div>
               </div>
               <div class="full-post-footer">
                <div class="r wireframe-r">
                </div>
               </div>
              </div>
             </li>
             <li class="content-item">
              <div class="full-post-outer wireframe-full-post-outer">
               <div class="full-post-header">
                <div class="r wireframe-r">
                </div>
               </div>
               <div class="full-post">
                <div class="full-post-inner wireframe-full-post-inner">
                 <div class="post-author">
                  <span class="avatar">
                   <a href="/643648/ProfileUrlRedirect.ashx">
                    <img alt="" src="http://i1.social.s-msft.com/profile/u/avatar.jpg?displayname=gor+nishanov+-+msft&amp;size=large" style="border-width:0px;max-height:32px;max-width:32px;"/>
                   </a>
                  </span>
                  <span class="profile-usercard-hover" data-profile-userid="ded5a164-2305-4fb9-95f7-3c4fde06bcd4">
                   <span class="user-name">
                    <a class="internal-link view-user-profile" href="/643648/ProfileUrlRedirect.ashx">
                     <span>
                     </span>
                     Gor Nishanov - MSFT
                    </a>
                   </span>
                  </span>
                 </div>
                 <div class="post-date">
                  <span class="value">
                   12 Nov 2014 5:03 PM
                  </span>
                 </div>
                 <div class="post-content user-defined-markup">
                  <p>
                   <strong>
                    @thebanjomatic
                   </strong>
                  </p>
                  <p>
                   Please compile the example with /GS- . Various stack overrun checking do not work (yet) with coroutines.
                  </p>
                  <p>
                   The following compiles and runs without a problem with /GS-.
                  </p>
                  <p>
                   <span style="font-family:courier new,courier;">
                    #include &lt;experimental/generator&gt;
                   </span>
                   <br/>
                   <span style="font-family:courier new,courier;">
                    #include &lt;string&gt;
                   </span>
                   <br/>
                   <span style="font-family:courier new,courier;">
                    #include &lt;iostream&gt;
                   </span>
                  </p>
                  <p>
                   <span style="font-family:courier new,courier;">
                    std::experimental::generator&lt;std::string&gt; foo() { __yield_value {"Hello"}; }
                   </span>
                  </p>
                  <p>
                   <span style="font-family:courier new,courier;">
                    int main()
                   </span>
                   <br/>
                   <span style="font-family:courier new,courier;">
                    {
                   </span>
                   <br/>
                   <span style="font-family:courier new,courier;">
                    for (x : foo())
                   </span>
                   <br/>
                   <span style="font-family:courier new,courier;">
                    std::cout &lt;&lt; x &lt;&lt; std::endl;
                   </span>
                   <br/>
                   <span style="font-family:courier new,courier;">
                    }
                   </span>
                  </p>
                  <p>
                  </p>
                  <div style="clear:both;">
                  </div>
                 </div>
                 <div class="post-actions">
                 </div>
                </div>
               </div>
               <div class="full-post-footer">
                <div class="r wireframe-r">
                </div>
               </div>
              </div>
             </li>
             <li class="content-item">
              <div class="full-post-outer wireframe-full-post-outer">
               <div class="full-post-header">
                <div class="r wireframe-r">
                </div>
               </div>
               <div class="full-post">
                <div class="full-post-inner wireframe-full-post-inner">
                 <div class="post-author">
                  <span class="avatar">
                   <img alt="" border="0" src="/utility/anonymous.gif" style="max-height:32px;max-width:32px;"/>
                  </span>
                  <span class="profile-usercard-hover" data-profile-userid="00000000-0000-0000-0000-000000000000">
                   <span class="user-name">
                    Zahir
                   </span>
                  </span>
                 </div>
                 <div class="post-date">
                  <span class="value">
                   13 Nov 2014 3:09 AM
                  </span>
                 </div>
                 <div class="post-content user-defined-markup">
                  <p>
                   Async operations and interactive generators look really good. But to be honest async generators seems to be garbling ideas of reactive with interactive programming in a scary way
                  </p>
                  <div style="clear:both;">
                  </div>
                 </div>
                 <div class="post-actions">
                 </div>
                </div>
               </div>
               <div class="full-post-footer">
                <div class="r wireframe-r">
                </div>
               </div>
              </div>
             </li>
             <li class="content-item">
              <div class="full-post-outer wireframe-full-post-outer">
               <div class="full-post-header">
                <div class="r wireframe-r">
                </div>
               </div>
               <div class="full-post">
                <div class="full-post-inner wireframe-full-post-inner">
                 <div class="post-author">
                  <span class="avatar">
                   <a href="/643648/ProfileUrlRedirect.ashx">
                    <img alt="" src="http://i1.social.s-msft.com/profile/u/avatar.jpg?displayname=gor+nishanov+-+msft&amp;size=large" style="border-width:0px;max-height:32px;max-width:32px;"/>
                   </a>
                  </span>
                  <span class="profile-usercard-hover" data-profile-userid="ded5a164-2305-4fb9-95f7-3c4fde06bcd4">
                   <span class="user-name">
                    <a class="internal-link view-user-profile" href="/643648/ProfileUrlRedirect.ashx">
                     <span>
                     </span>
                     Gor Nishanov - MSFT
                    </a>
                   </span>
                  </span>
                 </div>
                 <div class="post-date">
                  <span class="value">
                   13 Nov 2014 7:03 AM
                  </span>
                 </div>
                 <div class="post-content user-defined-markup">
                  <p>
                   @Zahir
                  </p>
                  <p>
                   N4134 exposes a language facilities to suspend and resume a function. It is up to library writers to imbue the coroutines with higher-level semantics. We chose not to ban usage of both await and yieldin the same function and it seems that async_generator / async_stream fits into this concept.
                  </p>
                  <p>
                   Experimenting with various coroutine types and applying them to solve different problems can help figuring out when it is "garbling" and when it makes sense.
                  </p>
                  <p>
                   You can compare generators and boost range adapters. Both can be used to build pipelines. One is using functional approach, another imperative. In some cases functional will be more straightforward, in others imperative might be a better choice.
                  </p>
                  <p>
                   I can recommend Erik Meijers talk from React 2014:
                   <a href="https://www.youtube.com/watch?v=sTSQlYX5DU0" rel="nofollow" target="_new">
                    www.youtube.com/watch
                   </a>
                   where he makes a great point that reactive is just one tool in the programmer's toolbox. In the same program you can mix imperative, reactive, functional and other styles as appropriate.
                  </p>
                  <div style="clear:both;">
                  </div>
                 </div>
                 <div class="post-actions">
                 </div>
                </div>
               </div>
               <div class="full-post-footer">
                <div class="r wireframe-r">
                </div>
               </div>
              </div>
             </li>
             <li class="content-item">
              <div class="full-post-outer wireframe-full-post-outer">
               <div class="full-post-header">
                <div class="r wireframe-r">
                </div>
               </div>
               <div class="full-post">
                <div class="full-post-inner wireframe-full-post-inner">
                 <div class="post-author">
                  <span class="avatar">
                   <img alt="" border="0" src="/utility/anonymous.gif" style="max-height:32px;max-width:32px;"/>
                  </span>
                  <span class="profile-usercard-hover" data-profile-userid="00000000-0000-0000-0000-000000000000">
                   <span class="user-name">
                    Arde
                   </span>
                  </span>
                 </div>
                 <div class="post-date">
                  <span class="value">
                   13 Nov 2014 9:33 AM
                  </span>
                 </div>
                 <div class="post-content user-defined-markup">
                  <p>
                   Are the coroutines copyable / movable ? For example, take the generator pattern in the article. Can I copy the coroutine (thereby saving the state) within the main function and then pass the copied object to another function, which and resume the iteration?
                  </p>
                  <div style="clear:both;">
                  </div>
                 </div>
                 <div class="post-actions">
                 </div>
                </div>
               </div>
               <div class="full-post-footer">
                <div class="r wireframe-r">
                </div>
               </div>
              </div>
             </li>
             <li class="content-item">
              <div class="full-post-outer wireframe-full-post-outer">
               <div class="full-post-header">
                <div class="r wireframe-r">
                </div>
               </div>
               <div class="full-post">
                <div class="full-post-inner wireframe-full-post-inner">
                 <div class="post-author">
                  <span class="avatar">
                   <a href="/643648/ProfileUrlRedirect.ashx">
                    <img alt="" src="http://i1.social.s-msft.com/profile/u/avatar.jpg?displayname=gor+nishanov+-+msft&amp;size=large" style="border-width:0px;max-height:32px;max-width:32px;"/>
                   </a>
                  </span>
                  <span class="profile-usercard-hover" data-profile-userid="ded5a164-2305-4fb9-95f7-3c4fde06bcd4">
                   <span class="user-name">
                    <a class="internal-link view-user-profile" href="/643648/ProfileUrlRedirect.ashx">
                     <span>
                     </span>
                     Gor Nishanov - MSFT
                    </a>
                   </span>
                  </span>
                 </div>
                 <div class="post-date">
                  <span class="value">
                   13 Nov 2014 9:44 AM
                  </span>
                 </div>
                 <div class="post-content user-defined-markup">
                  <p>
                   @Arde
                  </p>
                  <p>
                   Sample generator class that we included in the preview is movable. You can put it into a container, pass it as a parameter or return from a function.
                  </p>
                  <p>
                   If you use async pattern using std::future, you can use "share()" member function to get a shared_future which is copyable.
                  </p>
                  <div style="clear:both;">
                  </div>
                 </div>
                 <div class="post-actions">
                 </div>
                </div>
               </div>
               <div class="full-post-footer">
                <div class="r wireframe-r">
                </div>
               </div>
              </div>
             </li>
             <li class="content-item">
              <div class="full-post-outer wireframe-full-post-outer">
               <div class="full-post-header">
                <div class="r wireframe-r">
                </div>
               </div>
               <div class="full-post">
                <div class="full-post-inner wireframe-full-post-inner">
                 <div class="post-author">
                  <span class="avatar">
                   <img alt="" border="0" src="/utility/anonymous.gif" style="max-height:32px;max-width:32px;"/>
                  </span>
                  <span class="profile-usercard-hover" data-profile-userid="00000000-0000-0000-0000-000000000000">
                   <span class="user-name">
                    Giulia Q
                   </span>
                  </span>
                 </div>
                 <div class="post-date">
                  <span class="value">
                   13 Nov 2014 10:03 AM
                  </span>
                 </div>
                 <div class="post-content user-defined-markup">
                  <p>
                   Thanks, this is an extremely useful addition to the language. I've been looking forward to this moment for years
                  </p>
                  <div style="clear:both;">
                  </div>
                 </div>
                 <div class="post-actions">
                 </div>
                </div>
               </div>
               <div class="full-post-footer">
                <div class="r wireframe-r">
                </div>
               </div>
              </div>
             </li>
             <li class="content-item">
              <div class="full-post-outer wireframe-full-post-outer">
               <div class="full-post-header">
                <div class="r wireframe-r">
                </div>
               </div>
               <div class="full-post">
                <div class="full-post-inner wireframe-full-post-inner">
                 <div class="post-author">
                  <span class="avatar">
                   <img alt="" border="0" src="/utility/anonymous.gif" style="max-height:32px;max-width:32px;"/>
                  </span>
                  <span class="profile-usercard-hover" data-profile-userid="00000000-0000-0000-0000-000000000000">
                   <span class="user-name">
                    asdf
                   </span>
                  </span>
                 </div>
                 <div class="post-date">
                  <span class="value">
                   13 Nov 2014 11:25 AM
                  </span>
                 </div>
                 <div class="post-content user-defined-markup">
                  <p>
                   Looking at the n4134 paper:
                  </p>
                  <p>
                   1. resumable_handle&lt;void&gt;::to_address would be a convenient feature for all Callables in general so you can decompose them to a regular function pointer and a context. e.g.:
                  </p>
                  <p>
                   auto fn1 = [a](int n){ return a + n; }
                  </p>
                  <p>
                   auto fn2 = decompose(fn1);
                  </p>
                  <p>
                   fn1(1);
                  </p>
                  <p>
                   fn2.fn(fn2.env, 1);
                  </p>
                  <p>
                   2. what happened with the stackful coroutines proposal, was that rejected by the committee? It seemed like a more superior way than the C# way of doing things.
                  </p>
                  <div style="clear:both;">
                  </div>
                 </div>
                 <div class="post-actions">
                 </div>
                </div>
               </div>
               <div class="full-post-footer">
                <div class="r wireframe-r">
                </div>
               </div>
              </div>
             </li>
             <li class="content-item">
              <div class="full-post-outer wireframe-full-post-outer">
               <div class="full-post-header">
                <div class="r wireframe-r">
                </div>
               </div>
               <div class="full-post">
                <div class="full-post-inner wireframe-full-post-inner">
                 <div class="post-author">
                  <span class="avatar">
                   <a href="/643648/ProfileUrlRedirect.ashx">
                    <img alt="" src="http://i1.social.s-msft.com/profile/u/avatar.jpg?displayname=gor+nishanov+-+msft&amp;size=large" style="border-width:0px;max-height:32px;max-width:32px;"/>
                   </a>
                  </span>
                  <span class="profile-usercard-hover" data-profile-userid="ded5a164-2305-4fb9-95f7-3c4fde06bcd4">
                   <span class="user-name">
                    <a class="internal-link view-user-profile" href="/643648/ProfileUrlRedirect.ashx">
                     <span>
                     </span>
                     Gor Nishanov - MSFT
                    </a>
                   </span>
                  </span>
                 </div>
                 <div class="post-date">
                  <span class="value">
                   13 Nov 2014 11:46 AM
                  </span>
                 </div>
                 <div class="post-content user-defined-markup">
                  <p>
                   @asdf
                  </p>
                  <p>
                   1. Possibly, we toyed around with a "fake_resumable_handle" that allows to do something like that. It can probably be revived with a better name and compelling use cases.
                  </p>
                  <p>
                   2. Stackful coroutines are alive and healthy. Possibly in later meetings we rename them to fibers and channels to provide more general interface and remove perceived confusion with stackless coroutines.
                  </p>
                  <div style="clear:both;">
                  </div>
                 </div>
                 <div class="post-actions">
                 </div>
                </div>
               </div>
               <div class="full-post-footer">
                <div class="r wireframe-r">
                </div>
               </div>
              </div>
             </li>
             <li class="content-item">
              <div class="full-post-outer wireframe-full-post-outer">
               <div class="full-post-header">
                <div class="r wireframe-r">
                </div>
               </div>
               <div class="full-post">
                <div class="full-post-inner wireframe-full-post-inner">
                 <div class="post-author">
                  <span class="avatar">
                   <img alt="" border="0" src="/utility/anonymous.gif" style="max-height:32px;max-width:32px;"/>
                  </span>
                  <span class="profile-usercard-hover" data-profile-userid="00000000-0000-0000-0000-000000000000">
                   <span class="user-name">
                    Arde
                   </span>
                  </span>
                 </div>
                 <div class="post-date">
                  <span class="value">
                   13 Nov 2014 9:14 PM
                  </span>
                 </div>
                 <div class="post-content user-defined-markup">
                  <p>
                   I'm sorry, I think you misunderstood my question. I'll try again :)
                  </p>
                  <p>
                   Lets say I write a generator which returns prime no.s. I call it 5 times, getting 2,3,5,7,11. I now want to copy the generator, thereby saving its state. I keep running original generator, getting 13, 17, 19 etc. When I resume the copied generator, I again get 13, 17, 19 and so on. Is this possible ?
                  </p>
                  <p>
                   I looked through n4134, and I didn't see any discussion whether the resumable_handle object can be copied or not.
                  </p>
                  <div style="clear:both;">
                  </div>
                 </div>
                 <div class="post-actions">
                 </div>
                </div>
               </div>
               <div class="full-post-footer">
                <div class="r wireframe-r">
                </div>
               </div>
              </div>
             </li>
            </ul>
            <div class="content-list-footer">
            </div>
            <div class="pager">
             <span class="summary">
              Page 1 of 2 (25 items)
             </span>
             <a class="selected" href="/b/vcblog/archive/2014/11/12/resumable-functions-in-c.aspx?PageIndex=1#comments">
              <span>
               1
              </span>
             </a>
             <span class="separator">
             </span>
             <a class="page" href="/b/vcblog/archive/2014/11/12/resumable-functions-in-c.aspx?PageIndex=2#comments">
              <span>
               2
              </span>
             </a>
             <span class="separator">
             </span>
            </div>
           </div>
          </div>
          <div class="content-fragment-footer">
          </div>
          <div class="content-fragment-bottom wireframe-content-fragment-bottom">
           <div class="r1 wireframe-r1">
           </div>
           <div class="r2 wireframe-r2">
           </div>
           <div class="r3 wireframe-r3">
           </div>
           <div class="r4 wireframe-r4">
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="layout-footer">
     </div>
    </div>
   </div>
   <div class="footer-fragments-header">
   </div>
   <div class="footer-fragments">
    <div class="footer-fragment copyright-info" id="footer-fragment-247403536">
     <ul class="footer-fragment-links">
      <li class="message copyright">
        2015 Microsoft Corporation.
      </li>
      <li class="message termsOfService">
       <a href="http://msdn.microsoft.com/cc300389">
        Terms of Use
       </a>
      </li>
      <li class="message trademarks">
       <a href="http://www.microsoft.com/library/toolbar/3.0/trademarks/en-us.mspx">
        Trademarks
       </a>
      </li>
      <li class="message privacy">
       <a href="http://go.microsoft.com/fwlink/?LinkId=248681">
        Privacy &amp; Cookies
       </a>
      </li>
      <li class="message abuse">
       <a href='javascript:WebForm_DoPostBackWithOptions(new WebForm_PostBackOptions("ctl00$footer_fragment_247403536$_aec51d$ctl00$ctl00$ctl01$lnkAbuse", "", true, "", "", false, true))' id="ctl00_footer_fragment_247403536__aec51d_ctl00_ctl00_ctl01_lnkAbuse">
        Report Abuse
       </a>
      </li>
      <li class="message version">
       5.6.426.415
      </li>
     </ul>
    </div>
    <div class="footer-fragment omniture-footer-fragment" id="footer-fragment-247403537">
     <script src="http://i1.blogs.msdn.com/rrcontent/2569210a296af7a76a1f0a41cafcfd42-2e0c141b75ad92888490f6154505d4c2-RequestReducedScript.js" type="text/javascript">
     </script>
     <noscript>
      <a href="http://www.omniture.com" title="Web Analytics">
       <img alt="" border="0" height="1" src="http://msstomsdnblogs.112.2O7.net/b/ss/msstomsdnblogs/1/H.20.2--NS/0" width="1"/>
      </a>
     </noscript>
    </div>
    <div class="footer-fragment app-insights-footer-fragment" id="footer-fragment-247403538">
     <script language="javascript" type="text/javascript">
      $(document).ready(function () {
                window.appInsights = { queue: [], start: function (n) { function r(n, t) { n[t] = function () { var i = arguments; n.queue.push(function () { n[t].apply(n, i) }) } } var t, i; this.applicationInsightsId = n; this.accountId = null; this.appUserId = null; r(this, "logEvent"); r(this, "logPageView"); t = document.createElement("script"); t.type = "text/javascript"; t.src = "//az416426.vo.msecnd.net/scripts/ai.js"; t.async = !0; i = document.getElementsByTagName("script")[0]; i.parentNode.insertBefore(t, i) } };
                window.appInsights.start("b4d65b72-ce61-486e-b07c-969cef6675f6");
                window.appInsights.logPageView();
            });
     </script>
    </div>
   </div>
   <div class="footer-fragments-footer">
   </div>
   <script type="text/javascript">
    // &lt;![CDATA[
ctl00_content_ctl00 = new ContentFragmentPageCustomCallback('ctl00_content_ctl00',new Function('mode','parameters','callback','errorCallback','context','ctl00_content_ctl00_ctl00._doCallback(mode+\':\'+parameters,callback,context,errorCallback);'));
// ]]&gt;
   </script>
   <!--
&lt;rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
xmlns:dc="http://purl.org/dc/elements/1.1/"
xmlns:trackback="http://madskills.com/public/xml/rss/module/trackback/"&gt;
&lt;rdf:Description
rdf:about="http://blogs.msdn.com/b/vcblog/archive/2014/11/12/resumable-functions-in-c.aspx"
dc:identifier="http://blogs.msdn.com/b/vcblog/archive/2014/11/12/resumable-functions-in-c.aspx"
dc:title="Resumable functions in C++"
trackback:ping="http://blogs.msdn.com/b/vcblog/trackback.ashx?WeblogPostID=10571054" /&gt;
&lt;/rdf:RDF&gt;
-->
   <script type="text/javascript">
    // &lt;![CDATA[
Telligent_Modal.Configure('\/utility\/loading.htm',['modal'],['modal-title','modal-title-2','modal-title-3','modal-title-4'],['modal-close'],['modal-content','modal-content-2'],['modal-footer','modal-footer-2','modal-footer-3'],['modal-resize'],['modal-mask'],10000,false,true,true);
// ]]&gt;
   </script>
   <script type="text/javascript">
    // &lt;![CDATA[
window.ctl00_header_fragment_247403541__aec51d_ctl00_ctl00_GroupNavigationPopup = new Telligent_PopupPanel('ctl00_header_fragment_247403541__aec51d_ctl00_ctl00_GroupNavigationPopup','menu group-navigation-content','down',100,null,null,false,'ctl00_header_fragment_247403541__aec51d_ctl00_ctl00_GroupNavigationPopup',new Function('Core_GroupNavigation_MouseOverPopup(ctl00_header_fragment_247403541)'),new Function('Core_GroupNavigation_MouseOutPopup(ctl00_header_fragment_247403541)'));
// ]]&gt;
   </script>
   <script type="text/javascript">
    // &lt;![CDATA[
window.ctl00_content_ctl00_ctl00 = new Telligent_CallbackManager('ctl00_content_ctl00_ctl00','ctl00$content$ctl00$ctl00','aspnetForm');
// ]]&gt;
&lt;/script&gt;&lt;script type="text/javascript"&gt;
// &lt;![CDATA[
var ctl00_content_ctl00_w_203838__aec51d_ctl00_ctl01=new RateableContentRating('ctl00_content_ctl00_w_203838__aec51d_ctl00_ctl01','ctl00_content_ctl00_w_203838__aec51d_ctl00_ctl01','ctl00_content_ctl00_w_203838__aec51d_ctl00_ctl01_Value', 5, '/Utility/images/', false, 'rating','rating active','rating readonly',['Terrible','Poor','Fair','Average','Good','Excellent'],true,true);
// ]]&gt;
   </script>
   <script type="text/javascript">
    // &lt;![CDATA[
				var ctl00_content_ctl00_w_203838__aec51d_ctl00_ctl01_ajax={"SaveRating":function(rating,successFunction,failureFunction){WebForm_DoCallback('ctl00$content$ctl00$w_203838$_aec51d$ctl00$ctl01',rating,successFunction,rating,failureFunction,true)}};
				// ]]&gt;
   </script>
   <script type="text/javascript">
    // &lt;![CDATA[
$('#ctl00_content_ctl00_w_203838__aec51d_ctl00_ctl15_ctl01_Container input[value="Save"]').attr('onclick','').removeAttr('onclick').click( function(){ try { var tagText = $('#ctl00_content_ctl00_w_203838__aec51d_ctl00_ctl15_ctl01_Tags').val(); if (!tagText) return false;var tagList = tagText.replace(';',',').split(','); var isValid = true; for (var i=0,l=tagList.length;i&lt;l;i++) {isValid = /^[ -~]{0,100}$/ig.test(tagList[i]); if (!isValid) { alert(tagList[i] + ' : is not valide'); return false; } }ctl00_content_ctl00_w_203838__aec51d_ctl00_ctl15_ctl01.Save();}catch(ex){ } return false; });
// ]]&gt;
   </script>
   <script type="text/javascript">
    // &lt;![CDATA[
window.ctl00_content_ctl00_w_203838__aec51d_ctl00_ctl15_ctl01 = new Telligent_InlineEditor('ctl00_content_ctl00_w_203838__aec51d_ctl00_ctl15_ctl01','ctl00_content_ctl00_w_203838__aec51d_ctl00_ctl15_ctl01_Container',new Function('id', 'p', 'ctl00_content_ctl00_w_203838__aec51d_ctl00_ctl15_ctl01_InlineTagEditor.SetInlineEditorPanelAndParameter(id,p);'),new Function('return ctl00_content_ctl00_w_203838__aec51d_ctl00_ctl15_ctl01_InlineTagEditor.GetContent();'),new Function('c', 'ctl00_content_ctl00_w_203838__aec51d_ctl00_ctl15_ctl01_InlineTagEditor.SetContent(c);'),null,new Function('ctl00_content_ctl00_w_203838__aec51d_ctl00_ctl15_ctl01_InlineTagEditor.Focus();'),new Function('w', 'h', 'ctl00_content_ctl00_w_203838__aec51d_ctl00_ctl15_ctl01_InlineTagEditor.Resize(w,h);'),300,90);
// ]]&gt;
   </script>
   <script type="text/javascript">
    // &lt;![CDATA[
var ctl00_content_ctl00_w_203838__aec51d_ctl00_ctl15_ctl01_TagEditor = new TagEditor('ctl00_content_ctl00_w_203838__aec51d_ctl00_ctl15_ctl01_TagEditor',[['3D Starter Kit','3D Starter Kit'],['64-bit','64-bit'],['Actors','Actors'],['ALM','ALM'],['ALM - Application Lifecycle Management','ALM - Application Lifecycle Management'],['AMP','AMP'],['Android','Android'],['Announcement','Announcement'],['Announcements','Announcements'],['async','async'],['ATL','ATL'],['Austin','Austin'],['Azure','Azure'],['Book','Book'],['Browsing','Browsing'],['Bug Info','Bug Info'],['Build','Build'],['build 2012','build 2012'],['build throughput','build throughput'],['build times','build times'],['C++','C++'],['C++ AMP','C++ AMP'],['C++ language','C++ language'],['C++ REST SDK','C++ REST SDK'],['C++\/CLI','C++\/CLI'],['C++\/CX','C++\/CX'],['C++0x','C++0x'],['c++11','c++11'],['camp','camp'],['casablanca','casablanca'],['Channel 9','Channel 9'],['code analysis','code analysis'],['Code Generation','Code Generation'],['Command Line','Command Line'],['Community','Community'],['compiler','compiler'],['Container','Container'],['Conversion','Conversion'],['Cross-Platform','Cross-Platform'],['debugging','debugging'],['design','design'],['Dev','Dev'],['diagnostics','diagnostics'],['Direct3D','Direct3D'],['DirectX','DirectX'],['editor','editor'],['exception handling','exception handling'],['F1','F1'],['Feedback','Feedback'],['Games','Games'],['goingnative','goingnative'],['GPU','GPU'],['Graphics','Graphics'],['Help','Help'],['hilo','hilo'],['HTTP','HTTP'],['IDE','IDE'],['ink and pen','ink and pen'],['Intellisense','Intellisense'],['inthecommunity','inthecommunity'],['intrinsics','intrinsics'],['iPCH','iPCH'],['ISO C++','ISO C++'],['Libraries','Libraries'],['Link','Link'],['link-a-thon','link-a-thon'],['Linker','Linker'],['memory management','memory management'],['Metro style','Metro style'],['MFC','MFC'],['miscellany','miscellany'],['MSBuild','MSBuild'],['MVP','MVP'],['newby','newby'],['NuGet','NuGet'],['Pages','Pages'],['Parallelism','Parallelism'],['performance','performance'],['PGO','PGO'],['Profile Guided Optimization','Profile Guided Optimization'],['Ribbon','Ribbon'],['SP1','SP1'],['standard libraries','standard libraries'],['STL','STL'],['Survey','Survey'],['templates','templates'],['Test','Test'],['Testing','Testing'],['Upgrade','Upgrade'],['VC++','VC++'],['visual studio','visual studio'],['VS2010','VS2010'],['VS2012','VS2012'],['VS2013','VS2013'],['weekly roundup','weekly roundup'],['Windows 7','Windows 7'],['windows 8','windows 8'],['Windows Store Apps','Windows Store Apps'],['windows8','windows8'],['xaml','xaml']],'ctl00_content_ctl00_w_203838__aec51d_ctl00_ctl15_ctl01_Tags');
// ]]&gt;
   </script>
   <script type="text/javascript">
    // &lt;![CDATA[
var ctl00_content_ctl00_w_203838__aec51d_ctl00_ctl15_ctl01_InlineTagEditor = new InlineTagEditor('ctl00_content_ctl00_w_203838__aec51d_ctl00_ctl15_ctl01_InlineTagEditor','ctl00_content_ctl00_w_203838__aec51d_ctl00_ctl15_ctl01','ctl00_content_ctl00_w_203838__aec51d_ctl00_ctl15_ctl01_Container','ctl00_content_ctl00_w_203838__aec51d_ctl00_ctl15_ctl01_Tags');
// ]]&gt;
   </script>
   <script type="text/javascript">
    // &lt;![CDATA[
window.ctl00_content_ctl00_w_203838__aec51d_ctl00_ctl15_ctl02 = new Telligent_InlineEditorPanel('ctl00_content_ctl00_w_203838__aec51d_ctl00_ctl15_ctl02','ctl00_content_ctl00_w_203838__aec51d_ctl00_ctl15_ctl02','ctl00_content_ctl00_w_203838__aec51d_ctl00_ctl15_ctl02_State','ctl00_content_ctl00_w_203838__aec51d_ctl00_ctl15_ctl01',false,null,null,null);
// ]]&gt;
   </script>
   <script type="text/javascript">
    // &lt;![CDATA[
window.ctl00_content_ctl00_w_203841__aec51d_ctl00_ctl00_DelayedFeedbackList = new DelayedContent('ctl00_content_ctl00_w_203841__aec51d_ctl00_ctl00_DelayedFeedbackList','ctl00_content_ctl00_w_203841__aec51d_ctl00_ctl00_DelayedFeedbackList','ctl00_content_ctl00._customCallback(\'fragment-203841\',\'ctl00$content$ctl00$w_203841$_aec51d$ctl00$ctl00$DelayedFeedbackList\',argument,null,callback,null)',true,true,null);
// ]]&gt;
   </script>
  </form>
  <script type="text/javascript">
   $(window).load(function () {
            $.getScript('http://widgets.membership.s-msft.com/v1/loader.js?brand=msdn&amp;lang=en-US', function () {
            });
        });
  </script>
 </body>
</html>