<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
 <head>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <script type="text/javascript">
   var _U = "undefined";
   var g_HttpRelativeWebRoot = "/ocom/";
   var SSContributor = false;
   var SSForceContributor = false;
   var SSHideContributorUI = false;
   var ssUrlPrefix = "/technetwork/";
   var ssUrlType = "2";
   
   var g_navNode_Path = new Array();
       g_navNode_Path[0] = 'otnen';
       g_navNode_Path[1] = 'otnen_oramag';
       g_navNode_Path[2] = 'otnen_oramag_2013';
       g_navNode_Path[3] = 'otnen_oramag_13mar';
   var g_ssSourceNodeId = "otnen_oramag_13mar";
   var g_ssSourceSiteId = "otnen";
  </script>
  <script id="ssInfo" type="text/xml" warning="DO NOT MODIFY!">
   &lt;ssinfo &gt;
    &lt;fragmentinstance  id="fragment14" fragmentid="Universal_Localization_Fragment" library="server:UNIVERSAL_LOCALIZATION_FRAG"&gt;
    &lt;/fragmentinstance&gt;
    &lt;fragmentinstance  id="fragment16" fragmentid="Universal_Localization_Fragment" library="server:UNIVERSAL_LOCALIZATION_FRAG"&gt;
    &lt;/fragmentinstance&gt;
    &lt;fragmentinstance  id="fragment17" fragmentid="Universal_Localization_Fragment" library="server:UNIVERSAL_LOCALIZATION_FRAG"&gt;
    &lt;/fragmentinstance&gt;
    &lt;fragmentinstance  id="fragment18" fragmentid="universal-search-fragment" library="server:UNIVERSAL-SEARCH-FRAGMET-LIB"&gt;
      
    &lt;/fragmentinstance&gt;
    &lt;fragmentinstance  id="fragment22" fragmentid="Universal_Localization_Fragment" library="server:UNIVERSAL_LOCALIZATION_FRAG"&gt;
    &lt;/fragmentinstance&gt;
    &lt;fragmentinstance  id="fragment23" fragmentid="ocom-commonassets" library="server:OCOM-FRAGMENT-LIBRARAY"&gt;
      
    &lt;/fragmentinstance&gt;
    &lt;fragmentinstance  id="fragment24" fragmentid="ExternalNavigationHorizontal" library="server:EXTERNALNAVHORIZONTALLIB"&gt;
    &lt;/fragmentinstance&gt;
    &lt;fragmentinstance  id="fragment25" fragmentid="ExternalNavVertical" library="server:EXTERNAL_NAV_VERTICAL"&gt;
    &lt;/fragmentinstance&gt;
    &lt;fragmentinstance  id="fragment27" fragmentid="Universal_Localization_Fragment" library="server:UNIVERSAL_LOCALIZATION_FRAG"&gt;
    &lt;/fragmentinstance&gt;
    &lt;fragmentinstance  id="fragment28" fragmentid="Universal_Localization_Fragment" library="server:UNIVERSAL_LOCALIZATION_FRAG"&gt;
    &lt;/fragmentinstance&gt;
    &lt;fragmentinstance  id="fragment29" fragmentid="ExternalBreadCrumb" library="server:EXTERNAL_BREADCRUMB"&gt;
    &lt;/fragmentinstance&gt;
    &lt;fragmentinstance  id="fragment32" fragmentid="universal-metatag" library="server:UNIVERSAL-FRAGMENTS"&gt;
    &lt;/fragmentinstance&gt;
    &lt;fragmentinstance  id="fragment33" fragmentid="ExternalNavTabsTop" library="server:EXTERNAL_NAV_TABS_TOP"&gt;
    &lt;/fragmentinstance&gt;
    &lt;fragmentinstance  id="fragment35" fragmentid="universal-webcache-integration" library="server:UNIVERSAL-WEBCACHE-INTEGRATION"&gt;
      
    &lt;/fragmentinstance&gt;
    &lt;fragmentinstance  id="fragment37" fragmentid="Universal_Localization_Fragment" library="server:UNIVERSAL_LOCALIZATION_FRAG"&gt;
    &lt;/fragmentinstance&gt;
    &lt;fragmentinstance  id="fragment38" fragmentid="universal-addthis-print-email" library="server:UNIVERSAL-FRAGMENTS"&gt;
      
    &lt;/fragmentinstance&gt;
    &lt;fragmentinstance  id="fragment39" fragmentid="sitecatalyst-otn-standard" library="server:SITECATALYST-OTN-STANDARD"&gt;
      
    &lt;/fragmentinstance&gt;
    &lt;fragmentinstance  id="fragment40" fragmentid="universal-addthis-print-email" library="server:UNIVERSAL-FRAGMENTS"&gt;
      
    &lt;/fragmentinstance&gt;
      &lt;fragmentinstance  id="fragment41" fragmentid="mosaic-header-content" library="server:MOSAIC-HEADER-CONTENT"&gt;
        
      &lt;/fragmentinstance&gt;
      &lt;fragmentinstance  id="fragment42" fragmentid="ocomheader" library="server:OCOMHEADER"&gt;
        
      &lt;/fragmentinstance&gt;
      &lt;fragmentinstance  id="fragment43" fragmentid="ocomfooter" library="server:OCOMFOOTER"&gt;
        
      &lt;/fragmentinstance&gt;
      &lt;fragmentinstance  id="fragment44" fragmentid="ocom-commonassets" library="server:OCOM-FRAGMENT-LIBRARAY"&gt;
        
      &lt;/fragmentinstance&gt;
  &lt;/ssinfo&gt;
  </script>
  <style type="text/css">
   #u06v1 li{
    font-size: 11px;
}
    HTML,BODY,TD,H1,H2,H3,H4,OL,UL,DL,LI,DT,DD {font-family:arial,helvetica,sans-serif;}
    HTML,BODY,TD,CODE,KBD,TT,OL,UL,DL,LI,DT,DD {font-size:12px;}
    a:link {color:#000;text-decoration:none;}
    a:visited {color:#000;text-decoration:none;}
    a:hover {color:#FF0000;text-decoration:underline;}

    #Wrapper_FixedWidth {text-align: left; margin: 0px auto; padding: 0px; border:0; width: 1000px;}
    #Wrapper_FixedWidth_Header {margin: 0 0 15px 0; width:100%; display:block; }
    #Wrapper_FixedWidth_Leftnav {float: left; width: 181px;}
    #Wrapper_FixedWidth_Rightnav {float: right;  width: 185px; }
    #Wrapper_FixedWidth_Centercontent {float: left; width: 810px;}
    #Wrapper_FixedWidth_Maincontent {float: left; width: 595px;}
    #Wrapper_FixedWidth_Footer{ clear: both; }
    .header{display:block; width:100%; padding:2px 0px 5px 0px; margin:0px 0px 10px 0px;}
    .logo{width:140px; float:left; padding:12px 0px 0px 12px;}
    .welcomeMsg{text-align:right; font-size:10px; padding:5px 12px 0px 0px; float:right;}
    .secureSearch{text-align:right; padding:10px 0px 0px 0px; margin-top:20px;}
    .greybarhomebot{background: #DCDCDC;height: 7px; margin-top: 7px; float:left; width:100%; margin-top:20px;}
    .footerLinks {font-size:10px;}
    .sngPsta {font-size:11px;line-height:13px;color:#000;text-align:left;}
    a.sngPsta:link {color:#000;text-decoration:none;display:block;padding:3px 10px;}
    a.sngPsta:visited {color:#000;text-decoration:none;display:block;padding:3px 10px;}
    a.sngPsta:hover {color:#fff;text-decoration:none;display:block;background-color:#9a9a9a;padding:3px 10px;}
    /* For Mosaic */
    ul#navigation li.top-level p a.noimg {background:none;}
    /* For Mosaic */
    #centerSectBlankPS {display: block;min-width: 570px;}
    .lock {position:absolute; top:1px;*top:1px; left:152px; margin:0px; padding:0px;}
  </style>
  <!-- SS_BEGIN_SNIPPET(fragment44,ocom-commonassets-droppoint)-->
  <!-- SS_END_SNIPPET(fragment44,ocom-commonassets-droppoint)-->
  <!--SS_BEGIN_SNIPPET(fragment32,code)-->
  <!--SS_END_SNIPPET(fragment32,code)-->
  <style type="text/css">
   &lt;!-- Add logo class to styles.css file --&gt;
    .logo{FLOAT: left; WIDTH: 151px;  PADDING-TOP: 4px}
    #centerSectBlankPS {display: block;min-width: 570px;}
    .sunquicklinks_wrapper{DISPLAY: block; FLOAT: right; WIDTH: 200px; TEXT-ALIGN: right;}
    .welcomesignin_wrapper{FLOAT: left; WIDTH: 634px; *width:621px; TEXT-ALIGN: right;VERTICAL-ALIGN: bottom; PADDING-TOP: 12px}
    .logo_wrapper{DISPLAY: block; MARGIN-BOTTOM: 6px; float:left; WIDTH: 974px; HEIGHT: 40px;}
	.menu-ocom {display:none;}
  </style>
  <!--Mosaic Header -->
  <!--[if IE]&gt;
  &lt;STYLE&gt;
    .logo_align{margin-bottom: 4px; margin-left:0px;}
    .search_position{margin:7px 3px 14px 16px;}
    #panelDiv_search .contentBg{padding:15px 5px 5px 5px; } 
    ul#navigation div.submenu {border-bottom:1px solid #b7b7b7;}
    ul#navigation div.submenu .bottomleft{background:none; width:15px; height:30px; float:left;  margin-left:-16px; margin-bottom:-42px; }
    ul#navigation div.submenu .bottomcenter{background:none; height:30px;  margin-left:15px; margin-right:15px; float:left; width:360px;} 
    ul#navigation div.submenu .bottomright{background:none; width:15px; height:30px; float:left; margin-left:360px; }
    ul#navigation div.submenu .partner_bottomleft{ background:none; width:15px; height:30px;  float:left; margin-left:-16px; margin-bottom:-42px; clear:left; margin-top:15px;}
    ul#navigation div.submenu .partner_bottomcenter{  background:none; width:362px; height:30px; margin-left:15px;  float:center;}
    ul#navigation div.submenu .partner_bottomright{  background:none; width:15px; height:30px; float:right; margin-right:-15px;}
    &lt;/STYLE&gt;
  &lt;![endif]-->
  <!--SS_BEGIN_SNIPPET(fragment29,1)-->
  <!--SS_END_SNIPPET(fragment29,1)-->
  <!--SS_BEGIN_SNIPPET(fragment32,head_tags)-->
  <title>
   PLSQL 101: Working with Cursors
  </title>
  <meta content="PLSQL 101: Working with Cursors" name="Title"/>
  <meta content="Part 12 in a series of articles on understanding 
and using PL/SQL" name="Description"/>
  <meta content="Steven Feuerstein, PL/SQL 101, PL/SQL" name="Keywords"/>
  <meta content="INDEX, FOLLOW" name="robots"/>
  <meta content="" name="country"/>
  <meta content="en" name="Language"/>
  <meta content="5/6/14 4:20 PM" name="Updated Date"/>
  <!--SS_END_SNIPPET(fragment32,head_tags)-->
  <!--SS_BEGIN_SNIPPET(fragment33,1)-->
  <link href="/ocom/fragments/externalnavtabstop/receiver.css" media="screen" rel="stylesheet" type="text/css"/>
  <link href="/ocom/fragments/externalnavtabstop/subtabs.css" media="screen" rel="stylesheet" type="text/css"/>
  <script charset="utf-8" src="/ocom/fragments/externalnavtabstop/receiver.js" type="text/javascript">
  </script>
  <!--SS_END_SNIPPET(fragment33,1)-->
  <!--SS_BEGIN_SNIPPET(fragment35,code)-->
  <!--SS_END_SNIPPET(fragment35,code)-->
  <!-- SS_BEGIN_SNIPPET(fragment44,ocom-commonassets)-->
  <link href="/us/assets/ocom-mosaic.css" rel="stylesheet" type="text/css"/>
  <link href="/us/assets/master-mosaic.css" rel="stylesheet" type="text/css"/>
  <script language="JavaScript" src="/us/assets/jquery.js" type="text/javascript">
  </script>
  <script language="JavaScript" src="/us/assets/oraclelib-mosaic.js" type="text/javascript">
  </script>
  <script src="//consent-st.truste.com/get?name=notice.js&amp;domain=oracle.com&amp;c=teconsent&amp;language=en&amp;text=true" type="text/javascript">
  </script>
  <!--[if IE]&gt;
  &lt;STYLE&gt;
    .logo_align{margin-bottom: 4px; margin-left:0px;}
    .search_position{margin:7px 3px 14px 16px;}
    #panelDiv_search .contentBg{padding:30px 5px 5px 5px; } 
    ul#navigation div.submenu {border-bottom:1px solid #b7b7b7;}
    ul#navigation div.submenu .bottomleft{background:none; width:15px; height:30px; float:left;  margin-left:-16px; margin-bottom:-42px; }
    ul#navigation div.submenu .bottomcenter{background:none; height:30px;  margin-left:15px; margin-right:15px; float:left; width:380px;} 
    ul#navigation div.submenu .bottomright{background:none; width:15px; height:30px; float:left; }
    ul#navigation div.submenu .partner_bottomleft{ background:none; width:15px; height:30px;  float:left; margin-left:-16px; margin-bottom:-42px; clear:left; margin-top:15px;}
	ul#navigation div.submenu .partner_bottomcenter{  background:none; width:382px; height:30px; margin-left:15px;  float:center;}
	ul#navigation div.submenu .partner_bottomright{  background:none; width:15px; height:30px; float:right; margin-right:-15px;}
  &lt;/STYLE&gt;
&lt;![endif]-->
  <!--[if IE 6]&gt;
  &lt;style&gt;
  #panelDiv_search .BottomleftCurv{background:none; width:15px; height:30px; float:left;}
  #panelDiv_search .centerBottom{background:none;width:153px;height:30px;float:left;}
  #panelDiv_search .BottomrightCurv{background:none;width:15px;height:30px;float:right;}
  #panelDiv_search .contentBg{border-bottom:1px solid #ababab;}
  #navigation{width:971px;}
  &lt;/style&gt;
&lt;![endif]-->
  <!--Brightcove script line and lightbox code-->
 </head>
 <body>
  <div id="bcVideoPlayer" style="display: none;">
  </div>
  <div class="lightbox_overlay" id="lightbox_brightcove" onclick="showclose();" style="display: none; z-index: 30000;">
   <!--spacer-->
  </div>
  <!-- SS_END_SNIPPET(fragment44,ocom-commonassets)-->
  <script type="text/javascript">
   var AKSB=AKSB||{};AKSB.q=[];AKSB.mark=function(c,a){AKSB.q.push(["mark",c,a||(new Date).getTime()])};AKSB.measure=function(c,a,b){AKSB.q.push(["measure",c,a,b||(new Date).getTime()])};AKSB.done=function(c){AKSB.q.push(["done",c])};AKSB.mark("firstbyte",(new Date).getTime());
                    AKSB.prof={custid:"82485",ustr:"",originlat:0,clientrtt:24,ghostip:"77.67.85.141",ipv6:false,pct:10,xhrtest:false,clientip:"199.30.80.113",requestid:"31a39164",protocol:"",akM:"x",akN:"ae"};
                    (function(c){var a=document.createElement("iframe");a.src="javascript:false";(a.frameElement||a).style.cssText="width: 0; height: 0; border: 0; display: none";var b=document.getElementsByTagName("script"),b=b[b.length-1];b.parentNode.insertBefore(a,b);a=a.contentWindow.document;b=String.fromCharCode;c=b(60)+"body onload=\"var js = document.createElement('script');js.id = 'aksb-ifr';js.src = '"+c+"';document.body.appendChild(js);\""+b(62);a.open().write(c);a.close()})(("https:"===document.location.protocol?
                    "https:":"http:")+"//ds-aksb-a.akamaihd.net/aksb.min.js");
  </script>
  <a name="top">
  </a>
  <div class="f01bg">
  </div>
  <div class="f01v0w1">
   <!-- SS_BEGIN_SNIPPET(fragment42,ocomheader)-->
   <!-- U01v0 -->
   <div class="u01" data-menusrc="/us/mosaicmenu/index.html" id="u01">
    <div class="u01tools" data-trackas="header">
     <div class="u01logo">
      <a data-lbl="logo" href="http://www.oracle.com/index.html">
       Oracle
      </a>
     </div>
     <ul class="u01navtools">
      <li>
       <a class="menu-otn" data-lbl="country" href="/us/mosaicmenu/index.html#otn-menu-countryselect">
        Country
       </a>
      </li>
      <li>
       <a class="menu-ocom menu-multicol" data-lbl="country" href="/us/corporate/region/index.html#ocom-menu-countryselect">
        Country
       </a>
      </li>
      <li>
       <a data-lbl="communities" href="https://www.oracle.com/communities/index.html#menu-communities">
        Communities
       </a>
      </li>
      <li>
       <a data-lbl="i-am-a" href="/us/corporate/role/index.html#menu-iam">
        I am a...
       </a>
      </li>
      <li>
       <a data-lbl="i-want-to" href="/us/corporate/task/index.html#menu-iwant">
        I want to...
       </a>
      </li>
     </ul>
     <ul class="u01pfile" data-lbl="welcome">
      <li id="pfile-wlcm">
       Welcome
      </li>
      <li id="pfile-acct">
       <a data-lbl="account" href="https://profile.oracle.com/myprofile/account/secure/update-account.jspx?nexturl=">
        Account
       </a>
      </li>
      <li id="pfile-sout">
       <a data-lbl="signout" href="javascript:sso_sign_out();">
        Sign Out
       </a>
      </li>
      <li id="pfile-regs">
       <a data-lbl="signin" href="http://www.oracle.com/webapps/redirect/signon?nexturl=">
        Sign In/Register
       </a>
      </li>
      <li id="pfile-help">
       <a data-lbl="help" href="/us/corporate/contact/about-your-account-070507.html">
        Help
       </a>
      </li>
     </ul>
     <div class="u01search">
      <form action="http://search.oracle.com/search/search" class="u01searchform" data-errormsg="No Search Term Entered. Please Try Again" method="get" name="searchForm">
       <input name="start" type="hidden" value="1"/>
       <input name="search_p_main_operator" type="hidden" value="all"/>
       <input class="textcnt autoclear" id="txtSearch" name="q" value="Search"/>
       <input class="u01searchbttn" type="submit" value="Submit Search"/>
      </form>
     </div>
    </div>
    <ul class="u01nav" data-trackas="hnav">
     <li>
      <a class="u01nav" data-lbl="productsandservices" data-trackas="hnav" href="https://www.oracle.com/products/index.html#menu-products-n-services">
       <h3>
        Products
       </h3>
      </a>
     </li>
     <li>
      <a class="u01nav" data-lbl="solutions" data-trackas="hnav" href="https://www.oracle.com/solutions/index.html#menu-solutions">
       <h3>
        Solutions
       </h3>
      </a>
     </li>
     <li>
      <a class="u01nav" data-lbl="downloads" data-trackas="hnav" href="https://www.oracle.com/downloads/index.html#menu-downloads">
       <h3>
        Downloads
       </h3>
      </a>
     </li>
     <li>
      <a class="u01nav" data-lbl="store" data-trackas="hnav" href="https://shop.oracle.com/#menu-store">
       <h3>
        Store
       </h3>
      </a>
     </li>
     <li>
      <a class="u01nav" data-lbl="support" data-trackas="hnav" href="http://www.oracle.com/us/support/index.html#menu-support">
       <h3>
        Support
       </h3>
      </a>
     </li>
     <li>
      <a class="u01nav" data-lbl="training" data-trackas="hnav" href="http://education.oracle.com/#menu-training">
       <h3>
        Training
       </h3>
      </a>
     </li>
     <li>
      <a class="u01nav" data-lbl="partners" data-trackas="hnav" href="http://www.oracle.com/partners/index.html#menu-partners">
       <h3>
        Partners
       </h3>
      </a>
     </li>
     <li>
      <a class="u01nav" data-lbl="about" data-trackas="hnav" href="http://www.oracle.com/us/corporate/index.html#menu-about">
       <h3>
        About
       </h3>
      </a>
     </li>
     <li>
      <a class="u01btn" data-lbl="oracletechnologynetwork" data-trackas="hnav" href="http://www.oracle.com/technetwork/index.html#menu-otn">
       <h3>
        OTN
       </h3>
      </a>
     </li>
    </ul>
   </div>
   <!-- /U01v0 -->
   <!-- SS_END_SNIPPET(fragment42,ocomheader)-->
   <!--SS_BEGIN_SNIPPET(fragment29,2)-->
   <!--**override root for testing purposes:**-->
   <!--** Header Logo ** -->
   <!--** Header Search ** -->
   <!--** Welcome SignIn ** -->
   <!--** Footer ** -->
   <!--** Header Logo ** -->
   <!-- MOSAIC -->
   <!-- Communities-->
   <!-- User Category -->
   <!-- User Intrest -->
   <!-- Navigation starts here -->
   <!-- User Community SC code -->
   <!-- User Category SC code -->
   <!-- User Interest SC code -->
   <div id="breadCrumb">
    <div class="breadCrumb_Left">
    </div>
    <div class="breadCrumb_Center">
     <div style="position:relative;">
      <span class="breadCrumb_Content">
       <a href="/technetwork/index.html" onclick="navTrack('otn','en','breadcrumb','otnen');">
        <span class="red">
         Oracle
        </span>
        Technology Network
       </a>
       <span class="rightarrow">
        <img alt=" " src="http://www.oracleimg.com/us/assets/rightarrow-066625.gif"/>
       </span>
       <a href="/technetwork/issue-archive/index.html" onclick="navTrack('otn','en','breadcrumb','otnen_oramag');">
        Oracle Magazine Issue Archive
       </a>
       <span class="rightarrow">
        <img alt=" " src="http://www.oracleimg.com/us/assets/rightarrow-066625.gif"/>
       </span>
       <a href="/technetwork/issue-archive/2013/index.html" onclick="navTrack('otn','en','breadcrumb','otnen_oramag_2013');">
        2013
       </a>
       <span class="rightarrow">
        <img alt=" " src="http://www.oracleimg.com/us/assets/rightarrow-066625.gif"/>
       </span>
       <span class="active">
        March 2013
       </span>
      </span>
     </div>
    </div>
    <div class="breadCrumb_Right">
    </div>
   </div>
   <!--SS_END_SNIPPET(fragment29,2)-->
   <div id="wrapper_lnav_maincont_rcol_foot">
    <div id="Wrapper_FixedWidth_Leftnav">
     <!--SS_BEGIN_SNIPPET(fragment25,2)-->
     <!--**override root for testing purposes:**-->
     <!--** Header Logo ** -->
     <!--** Header Search ** -->
     <!--** Welcome SignIn ** -->
     <!--** Footer ** -->
     <!--** Header Logo ** -->
     <!-- MOSAIC -->
     <!-- Communities-->
     <!-- User Category -->
     <!-- User Intrest -->
     <!-- Navigation starts here -->
     <!-- User Community SC code -->
     <!-- User Category SC code -->
     <!-- User Interest SC code -->
     <!--** retrieve input parameters: **-->
     <!--** retrieve the root node: **-->
     <!--rootId = ssGetFirstNodeId(siteId)-->
     <!--nodeId = rootId-->
     <!--** retrieve the nodeLevel and set it to ssNumVertLevels **-->
     <!--** retrieving the nodeLevel **-->
     <!--** setting the nodelevel to ssNumVertLevels **-->
     <!--** Get the section ID in custom section property **-->
     <div class="topLeftNavBorder_li">
      <!--Spacer-->
     </div>
     <div class="XMLLeftNav_li" id="XMLLeftNav">
      <!--** section link: **-->
      <ul class="level01">
       <li>
        <a class="level01_top_link_subnav" href="/technetwork/issue-archive/oramag/index.html" onclick="navTrack('otn','en','lnav','oramag_online');" target="_top">
         <div>
          Oracle Magazine Online
         </div>
        </a>
       </li>
       <li>
        <a class="level01_top_link_subnav" href="/technetwork/issue-archive/2015/index.html" onclick="navTrack('otn','en','lnav','oramag_2015');" target="_top">
         <div>
          2015
         </div>
        </a>
       </li>
       <li>
        <a class="level01_top_link_subnav" href="/technetwork/issue-archive/2014/index.html" onclick="navTrack('otn','en','lnav','oramag_2014');" target="_top">
         <div>
          2014
         </div>
        </a>
       </li>
       <li>
        <a class="level01_top_link_subnav" href="/technetwork/issue-archive/2013/index.html" onclick="navTrack('otn','en','lnav','oramag_2013');" target="_top">
         <div>
          2013
         </div>
        </a>
       </li>
       <li>
        <a class="level01_top_link_subnav" href="/technetwork/issue-archive/2012/index.html" onclick="navTrack('otn','en','lnav','oramag_2012');" target="_top">
         <div>
          2012
         </div>
        </a>
       </li>
       <li>
        <a class="level01_top_link_subnav" href="/technetwork/issue-archive/2011/index.html" onclick="navTrack('otn','en','lnav','oramag_2011');" target="_top">
         <div>
          2011
         </div>
        </a>
       </li>
       <li>
        <a class="level01_top_link_subnav" href="/technetwork/issue-archive/2010/index.html" onclick="navTrack('otn','en','lnav','oramag_2010');" target="_top">
         <div>
          2010
         </div>
        </a>
       </li>
       <li>
        <a class="level01_top_link_subnav" href="/technetwork/issue-archive/2009/index.html" onclick="navTrack('otn','en','lnav','oramage_2009');" target="_top">
         <div>
          2009
         </div>
        </a>
       </li>
      </ul>
     </div>
     <div class="botLeftNavBorder_li">
      <!--Spacer-->
     </div>
     <!--** end of ExternalNavMultiV **-->
     <!--SS_END_SNIPPET(fragment25,2)-->
    </div>
    <div id="Wrapper_FixedWidth_Centercontent">
     <div class="pg0 pg0v0 pg0x1v0 pg0x1">
      <!--SS_BEGIN_SNIPPET(fragment33,2)-->
      <div class="orcl6 orcl6v0">
       <div class="orcl6w0">
        <ul id="tabsample0">
         <li>
          <a href="/technetwork/issue-archive/2013/13-jan/index.html" onclick="navTrack('otn','en','tab','Oracle Magazine Issue Archive:January 2013');" target="_top">
           <span>
            January 2013
           </span>
          </a>
          <div>
          </div>
         </li>
         <li class="ui-tabs-selected">
          <a href="/technetwork/issue-archive/2013/13-mar/index.html" onclick="navTrack('otn','en','tab','Oracle Magazine Issue Archive:March 2013');" target="_top">
           <span>
            March 2013
           </span>
          </a>
          <div>
          </div>
         </li>
         <li>
          <a href="/technetwork/issue-archive/2013/13-may/index.html" onclick="navTrack('otn','en','tab','Oracle Magazine Issue Archive:May 2013');" target="_top">
           <span>
            May 2013
           </span>
          </a>
          <div>
          </div>
         </li>
         <li>
          <a href="/technetwork/issue-archive/2013/13-jul/index.html" onclick="navTrack('otn','en','tab','Oracle Magazine Issue Archive:July 2013');" target="_top">
           <span>
            July 2013
           </span>
          </a>
          <div>
          </div>
         </li>
         <li>
          <a href="/technetwork/issue-archive/2013/13-sep/index.html" onclick="navTrack('otn','en','tab','Oracle Magazine Issue Archive:September 2013');" target="_top">
           <span>
            September 2013
           </span>
          </a>
          <div>
          </div>
         </li>
        </ul>
       </div>
      </div>
      <div class="orcl6w1">
       <div class="orcl6x0">
       </div>
      </div>
      <!--SS_END_SNIPPET(fragment33,2)-->
      <script type="text/javascript">
       window['MULTIDDOCNAMECONFIG'] = { 
show_addrowbutton: false, 
primaryurl: 'OTN-LT-3COL?MainContent=1906197&amp;RHS1=&amp;RHS2=&amp;RHS3=&amp;RHS4=&amp;RHS5=&amp;RHS6=&amp;RHS7=&amp;RHS8=&amp;RHS9=&amp;RHS10=&amp;RHS11=&amp;RHS12=&amp;RHS13=&amp;RHS14=&amp;RHS15=&amp;RHS16=&amp;RHS17=', 
rows: [ 
{ 
createnewxml_defaultmetadata_default: 'dDocTitle%3DRHS', 
browse_querytext_default: 'xWebsiteObjectType &lt;Matches&gt; `Data File`', 
show_createnewxmlbutton_default: true, 
show_browsebutton_default: true, 

createnewxml_defaultmetadata_override: 'dDocTitle%3DRHS', 
browse_querytext_override: 'xWebsiteObjectType &lt;Matches&gt; `Data File`', 
show_createnewxmlbutton_override: true, 
show_browsebutton_override: true, 

show_deletebutton: true 
}, 
{ 
createnewxml_defaultmetadata_default: 'dDocTitle%3DRHS', 
browse_querytext_default: 'xWebsiteObjectType &lt;Matches&gt; `Data File`', 
show_createnewxmlbutton_default: true, 
show_browsebutton_default: true, 

createnewxml_defaultmetadata_override: 'dDocTitle%3DRHS', 
browse_querytext_override: 'xWebsiteObjectType &lt;Matches&gt; `Data File`', 
show_createnewxmlbutton_override: true, 
show_browsebutton_override: true, 

show_deletebutton: true 
}, 
{ 
createnewxml_defaultmetadata_default: 'dDocTitle%3DRHS', 
browse_querytext_default: 'xWebsiteObjectType &lt;Matches&gt; `Data File`', 
show_createnewxmlbutton_default: true, 
show_browsebutton_default: true, 

createnewxml_defaultmetadata_override: 'dDocTitle%3DRHS', 
browse_querytext_override: 'xWebsiteObjectType &lt;Matches&gt; `Data File`', 
show_createnewxmlbutton_override: true, 
show_browsebutton_override: true, 

show_deletebutton: true 
}, 
{ 
createnewxml_defaultmetadata_default: 'dDocTitle%3DRHS', 
browse_querytext_default: 'xWebsiteObjectType &lt;Matches&gt; `Data File`', 
show_createnewxmlbutton_default: true, 
show_browsebutton_default: true, 

createnewxml_defaultmetadata_override: 'dDocTitle%3DRHS', 
browse_querytext_override: 'xWebsiteObjectType &lt;Matches&gt; `Data File`', 
show_createnewxmlbutton_override: true, 
show_browsebutton_override: true, 

show_deletebutton: true 
}, 
{ 
createnewxml_defaultmetadata_default: 'dDocTitle%3DRHS', 
browse_querytext_default: 'xWebsiteObjectType &lt;Matches&gt; `Data File`', 
show_createnewxmlbutton_default: true, 
show_browsebutton_default: true, 

createnewxml_defaultmetadata_override: 'dDocTitle%3DRHS', 
browse_querytext_override: 'xWebsiteObjectType &lt;Matches&gt; `Data File`', 
show_createnewxmlbutton_override: true, 
show_browsebutton_override: true, 

show_deletebutton: true 
}, 
{ 
createnewxml_defaultmetadata_default: 'dDocTitle%3DRHS', 
browse_querytext_default: 'xWebsiteObjectType &lt;Matches&gt; `Data File`', 
show_createnewxmlbutton_default: true, 
show_browsebutton_default: true, 

createnewxml_defaultmetadata_override: 'dDocTitle%3DRHS', 
browse_querytext_override: 'xWebsiteObjectType &lt;Matches&gt; `Data File`', 
show_createnewxmlbutton_override: true, 
show_browsebutton_override: true, 

show_deletebutton: true 
}, 
{ 
createnewxml_defaultmetadata_default: 'dDocTitle%3DRHS', 
browse_querytext_default: 'xWebsiteObjectType &lt;Matches&gt; `Data File`', 
show_createnewxmlbutton_default: true, 
show_browsebutton_default: true, 

createnewxml_defaultmetadata_override: 'dDocTitle%3DRHS', 
browse_querytext_override: 'xWebsiteObjectType &lt;Matches&gt; `Data File`', 
show_createnewxmlbutton_override: true, 
show_browsebutton_override: true, 

show_deletebutton: true 
}, 
{ 
createnewxml_defaultmetadata_default: 'dDocTitle%3DRHS', 
browse_querytext_default: 'xWebsiteObjectType &lt;Matches&gt; `Data File`', 
show_createnewxmlbutton_default: true, 
show_browsebutton_default: true, 

createnewxml_defaultmetadata_override: 'dDocTitle%3DRHS', 
browse_querytext_override: 'xWebsiteObjectType &lt;Matches&gt; `Data File`', 
show_createnewxmlbutton_override: true, 
show_browsebutton_override: true, 

show_deletebutton: true 
}, 
{ 
createnewxml_defaultmetadata_default: 'dDocTitle%3DRHS', 
browse_querytext_default: 'xWebsiteObjectType &lt;Matches&gt; `Data File`', 
show_createnewxmlbutton_default: true, 
show_browsebutton_default: true, 

createnewxml_defaultmetadata_override: 'dDocTitle%3DRHS', 
browse_querytext_override: 'xWebsiteObjectType &lt;Matches&gt; `Data File`', 
show_createnewxmlbutton_override: true, 
show_browsebutton_override: true, 

show_deletebutton: true 
}, 
{ 
createnewxml_defaultmetadata_default: 'dDocTitle%3DRHS', 
browse_querytext_default: 'xWebsiteObjectType &lt;Matches&gt; `Data File`', 
show_createnewxmlbutton_default: true, 
show_browsebutton_default: true, 

createnewxml_defaultmetadata_override: 'dDocTitle%3DRHS', 
browse_querytext_override: 'xWebsiteObjectType &lt;Matches&gt; `Data File`', 
show_createnewxmlbutton_override: true, 
show_browsebutton_override: true, 

show_deletebutton: true 
}, 
{ 
createnewxml_defaultmetadata_default: 'dDocTitle%3DRHS', 
browse_querytext_default: 'xWebsiteObjectType &lt;Matches&gt; `Data File`', 
show_createnewxmlbutton_default: true, 
show_browsebutton_default: true, 

createnewxml_defaultmetadata_override: 'dDocTitle%3DRHS', 
browse_querytext_override: 'xWebsiteObjectType &lt;Matches&gt; `Data File`', 
show_createnewxmlbutton_override: true, 
show_browsebutton_override: true, 

show_deletebutton: true 
}, 
{ 
createnewxml_defaultmetadata_default: 'dDocTitle%3DRHS', 
browse_querytext_default: 'xWebsiteObjectType &lt;Matches&gt; `Data File`', 
show_createnewxmlbutton_default: true, 
show_browsebutton_default: true, 

createnewxml_defaultmetadata_override: 'dDocTitle%3DRHS', 
browse_querytext_override: 'xWebsiteObjectType &lt;Matches&gt; `Data File`', 
show_createnewxmlbutton_override: true, 
show_browsebutton_override: true, 

show_deletebutton: true 
}, 
{ 
createnewxml_defaultmetadata_default: 'dDocTitle%3DRHS', 
browse_querytext_default: 'xWebsiteObjectType &lt;Matches&gt; `Data File`', 
show_createnewxmlbutton_default: true, 
show_browsebutton_default: true, 

createnewxml_defaultmetadata_override: 'dDocTitle%3DRHS', 
browse_querytext_override: 'xWebsiteObjectType &lt;Matches&gt; `Data File`', 
show_createnewxmlbutton_override: true, 
show_browsebutton_override: true, 

show_deletebutton: true 
}, 
{ 
createnewxml_defaultmetadata_default: 'dDocTitle%3DRHS', 
browse_querytext_default: 'xWebsiteObjectType &lt;Matches&gt; `Data File`', 
show_createnewxmlbutton_default: true, 
show_browsebutton_default: true, 

createnewxml_defaultmetadata_override: 'dDocTitle%3DRHS', 
browse_querytext_override: 'xWebsiteObjectType &lt;Matches&gt; `Data File`', 
show_createnewxmlbutton_override: true, 
show_browsebutton_override: true, 

show_deletebutton: true 
}, 
{ 
createnewxml_defaultmetadata_default: 'dDocTitle%3DRHS', 
browse_querytext_default: 'xWebsiteObjectType &lt;Matches&gt; `Data File`', 
show_createnewxmlbutton_default: true, 
show_browsebutton_default: true, 

createnewxml_defaultmetadata_override: 'dDocTitle%3DRHS', 
browse_querytext_override: 'xWebsiteObjectType &lt;Matches&gt; `Data File`', 
show_createnewxmlbutton_override: true, 
show_browsebutton_override: true, 

show_deletebutton: true 
},
{ 
createnewxml_defaultmetadata_default: 'dDocTitle%3DRHS', 
browse_querytext_default: 'xWebsiteObjectType &lt;Matches&gt; `Data File`', 
show_createnewxmlbutton_default: true, 
show_browsebutton_default: true, 

createnewxml_defaultmetadata_override: 'dDocTitle%3DRHS', 
browse_querytext_override: 'xWebsiteObjectType &lt;Matches&gt; `Data File`', 
show_createnewxmlbutton_override: true, 
show_browsebutton_override: true, 

show_deletebutton: true 
},  
{ 
createnewxml_defaultmetadata_default: 'dDocTitle%3DRHS', 
browse_querytext_default: 'xWebsiteObjectType &lt;Matches&gt; `Data File`', 
show_createnewxmlbutton_default: true, 
show_browsebutton_default: true, 

createnewxml_defaultmetadata_override: 'dDocTitle%3DRHS', 
browse_querytext_override: 'xWebsiteObjectType &lt;Matches&gt; `Data File`', 
show_createnewxmlbutton_override: true, 
show_browsebutton_override: true, 

show_deletebutton: true 
}                    
] 
};
      </script>
      <style>
       .sidebox h4 a:link {_width:178px;}
  .sidebox h4 a:visited{_width:178px;}
  .sidebox h4 a:hover {_width:178px;}
      </style>
      <div class="orcl6w2">
       <div class="orcl6w3">
        <table border="0" cellpadding="5" cellspacing="0" width="98%">
         <tbody>
          <tr>
           <td>
            <table align="right" border="0" style="width: 203px; height: 101px;">
             <tbody>
              <tr>
               <td>
                <center>
                 <span>
                  <strong>
                   As Published In
                  </strong>
                  <br/>
                  <a href="/technetwork/issue-archive/oramag/index.html" target="">
                   <img alt="Oracle Magazine" border="0" height="72" src="/ocom/groups/public/@otn/documents/digitalasset/111264.gif" width="127"/>
                  </a>
                  <br/>
                  <!--link to issue in which the story appears-->
                  <a href="/technetwork/issue-archive/2013/13-mar/index.html" target="">
                   <strong>
                    March/April 2013
                   </strong>
                  </a>
                 </span>
                </center>
               </td>
              </tr>
             </tbody>
            </table>
            <h2>
             TECHNOLOGY: PL/SQL
            </h2>
            <p>
            </p>
            <h1>
             Working with Cursors
            </h1>
            <em>
             By Steven Feuerstein
             <img alt="Oracle ACE Director" height="12" src="/ocom/groups/public/@otn/documents/digitalasset/123555.gif" width="12"/>
            </em>
            <p>
            </p>
            <p>
             <strong>
              Part 12 in a series of articles on understanding  and using PL/SQL
             </strong>
            </p>
            <p>
             The central purpose of the Oracle PL/SQL  language is to make it as easy and efficient as possible to query and change the contents of tables in a database. You must, of course, use the SQL language to access tables, and each time you do so, you use a
             <em>
              cursor
             </em>
             to get the job done. A cursor is a pointer to a private SQL area that stores information about the processing of a SELECT or data manipulation language (DML) statement (INSERT, UPDATE, DELETE, or MERGE). Cursor management of DML statements is handled by Oracle Database, but PL/SQL offers several ways to define and manipulate cursors to execute SELECT statements. This article focuses on the most-common ways programmers execute SELECT statements in PL/SQL, namely
            </p>
            <ul>
             <li>
              <p>
               Using the SELECT-INTO statement
              </p>
             </li>
             <li>
              <p>
               Fetching from an explicit cursor
              </p>
             </li>
             <li>
              <p>
               Using a cursor FOR loop
              </p>
             </li>
             <li>
              <p>
               Using EXECUTE IMMEDIATE INTO for dynamic queries
              </p>
             </li>
             <li>
              <p>
               Using cursor variables
              </p>
             </li>
            </ul>
            <p>
             At the end of the article, I offer some quick tips to help you figure out which of these techniques you should use for different scenarios.
            </p>
            <h4>
             SELECT-INTO
            </h4>
            <p>
             SELECT-INTO offers the fastest and simplest way to fetch a single row from a SELECT statement. The syntax of this statement is
            </p>
            <table align="right" class="dataTable" style="width: 302px; height: 226px;">
             <tbody>
              <tr>
               <td>
                <center>
                 <h2>
                  Answer to the Challenge
                 </h2>
                 <br/>
                </center>
                The PL/SQL Challenge question in last issues Wrap Up Your Code in a Neat Package article focused on how the values assigned to package-level variables persist in your session and asked, Which of the choices will display 3 after execution? In the print version of the article, only choice a was correct. In the online version (which also matches the quiz offered at
                <a href="http://www.plsqlchallenge.com">
                 PL/SQL Challenge
                </a>
                , both a and b are correct. Visit PL/SQL Challenge to read a complete explanation of the answers to this quiz.
                <p>
                </p>
               </td>
              </tr>
             </tbody>
            </table>
            <p>
             <em>
              SELECT select_list INTO variable_list FROM remainder_of_query;
             </em>
            </p>
            <p>
             <em>
              where remainder_of_query
             </em>
             contains the list of tables or views, the WHERE clause, and other clauses of the query. The number and types of elements in the
             <em>
              variable_list
             </em>
             must match those of the
             <em>
              select_list
             </em>
             .
            </p>
            <p>
             If the SELECT statement identifies more than one row to be fetched, Oracle Database will raise the TOO_MANY_ROWS exception. If the statement doesnt identify any rows to be fetched, Oracle Database will raise the NO_DATA_FOUND exception.
            </p>
            <p>
             Here are some examples of using SELECT-INTO:
            </p>
            <p>
             Get the last name for a specific employee ID (the primary key in the employees table):
            </p>
            <pre>
             DECLARE
  l_last_name  employees.last_name%TYPE;
BEGIN
  SELECT last_name
    INTO l_last_name
    FROM employees
   WHERE employee_id = 138;

  DBMS_OUTPUT.put_line (
     l_last_name);
END;
            </pre>
            <p>
             <br/>
             If there is a row in the employees table with ID 138, this block will display the last name of that employee. If there is no such row, the block will fail with an unhandled NO_DATA_FOUND exception. Assuming that a unique index is defined on the employee_id column, this block will never raise the TOO_MANY_ROWS exception.
            </p>
            <p>
             Fetch an entire row from the employees table for a specific employee ID:
            </p>
            <pre>
             DECLARE
   l_employee   employees%ROWTYPE;
BEGIN
   SELECT *
     INTO l_employee
     FROM employees
    WHERE employee_id = 138;

   DBMS_OUTPUT.put_line (
      l_employee.last_name);
END;
            </pre>
            <p>
             <br/>
             Again, if an employee exists for that ID, the last name will be displayed. In this case, I declare a record based on the employees table and fetch all columns (with a SELECT *) into that record for the specified row.
            </p>
            <p>
             Fetch columns from different tables:
            </p>
            <pre>
             DECLARE
  l_last_name         
     employees.last_name%TYPE;
  l_department_name   
     departments.department_name%TYPE;
BEGIN
  SELECT last_name, department_name
    INTO l_last_name, l_department_name
    FROM employees e, departments d
   WHERE e.department_id=d.department_id
         AND e.employee_id=138;

  DBMS_OUTPUT.put_line (
     l_last_name || 
     ' in ' || 
     l_department_name);
END;
            </pre>
            <p>
             In this case, I need more than one column value but not
             <em>
              all
             </em>
             the column values in either or both of the tables. So I declare two variables and fetch the two column values into those variables.
            </p>
            <p>
             What happens if the list of variables in the INTO clause does not match the SELECT list of the query? You will see one of the error messages shown in Table 1.
            </p>
            <table align="left" class="dataTable" style="width: 525px; height: 160px;">
             <tbody>
              <tr>
               <td>
                ORA-00947: not enough values
               </td>
               <td>
                The INTO list contains fewer variables than the SELECT list.
               </td>
              </tr>
              <tr>
               <td>
                ORA-00913: too many values
               </td>
               <td>
                The INTO list contains more variables than the SELECT list.
               </td>
              </tr>
              <tr>
               <td>
                ORA-06502: PL/SQL: numeric or value error
               </td>
               <td>
                The number of variables in the INTO and SELECT lists matches, but the datatypes do not match and Oracle Database was unable to convert implicitly from one type to the other.
               </td>
              </tr>
             </tbody>
            </table>
            <br clear="all"/>
            <p>
             <strong>
              Table 1:
             </strong>
             Possible error messages if INTO and SELECT lists do not match
            </p>
            <h4>
             Fetching from Explicit Cursors
            </h4>
            <p>
             A SELECT-INTO is also referred to as an implicit query, because Oracle Database implicitly opens a cursor for the SELECT statement, fetches the row, and then closes the cursor when it finishes doing that (or when an exception is raised).
            </p>
            <p>
             You can, alternatively, explicitly declare a cursor and then perform the open, fetch, and close operations yourself.
            </p>
            <p>
             Suppose I need to write a block that fetches employees in ascending salary order and gives them a bonus from a total pool of funds by calling the assign_bonus procedure, whose header is
            </p>
            <pre>
             PROCEDURE assign_bonus (
   employee_id_in IN     
      employees.employee_id%TYPE,
   bonus_pool_io  IN OUT INTEGER)
            </pre>
            <p>
             Each time assign_bonus is called, the procedure subtracts the bonus given from the total and returns that reduced total. When that bonus pool is exhausted, it stops fetching and commits all changes.
            </p>
            <p>
             Listing 1 includes a block that uses an explicit cursor to implement this logic, and it describes the operations in the block at specified line numbers.
            </p>
            <p>
             <strong>
              Code Listing 1:
             </strong>
             Block and description of explicit cursor implementation
            </p>
            <pre>
             1  DECLARE
 2     l_total       INTEGER := 10000;
 3
 4     CURSOR employee_id_cur
 5     IS
 6          SELECT employee_id
 7            FROM plch_employees
 8        ORDER BY salary ASC;
 9
10     l_employee_id   employee_id_cur%ROWTYPE;
11  BEGIN
12     OPEN employee_id_cur;
13
14     LOOP
15        FETCH employee_id_cur INTO l_employee_id;
16        EXIT WHEN employee_id_cur%NOTFOUND;
17
18        assign_bonus (l_employee_id, l_total);
19        EXIT WHEN l_total &lt;= 0;
20     END LOOP;
21
22     CLOSE employees_cur;
23  END;
            </pre>
            <p>
            </p>
            <table align="left" class="dataTable" style="width: 525px; height: 513px;">
             <tbody>
              <tr>
               <td colspan="2">
                <strong>
                 Line(s)	Description
                </strong>
               </td>
              </tr>
              <tr>
               <td>
                48
               </td>
               <td>
                The explicit cursor declaration. Move the query from the executable section (where the SELECT-INTO must reside), and use the CURSOR keyword to declare (give a name to) that query.
               </td>
              </tr>
              <tr>
               <td>
                10
               </td>
               <td>
                Declare a record based on the row of data returned by the query. In this case, there is just a single column value, so you could just as easily have declared l_employee_id as employees.employee_id%TYPE. But whenever you use an explicit cursor, it is best to declare a record by using %ROWTYPE, so that if the SELECT list of the cursor ever changes, that variable will change with it.
               </td>
              </tr>
              <tr>
               <td>
                12
               </td>
               <td>
                Open the cursor, so that rows can now be fetched from the query.
                <br/>
                Note: This is a step Oracle Database performs with the SELECT-INTO statement.
               </td>
              </tr>
              <tr>
               <td>
                14
               </td>
               <td>
                Start a loop to fetch rows.
               </td>
              </tr>
              <tr>
               <td>
                15
               </td>
               <td>
                Fetch the next row for the cursor, and deposit that rows information into the record specified in the INTO clause.
                <br/>
                Note: This is a step Oracle Database performs with the SELECT-INTO statement.
               </td>
              </tr>
              <tr>
               <td>
                16
               </td>
               <td>
                If the FETCH does not find a row, exit the loop.
               </td>
              </tr>
              <tr>
               <td>
                18
               </td>
               <td>
                Call assign_bonus, which applies the bonus and also decrements the value of the l_total variable by that bonus amount.
               </td>
              </tr>
              <tr>
               <td>
                19
               </td>
               <td>
                Exit the loop if all the bonus funds have been exhausted.
               </td>
              </tr>
              <tr>
               <td>
                22
               </td>
               <td>
                Close the cursor.
                <br/>
                Note: This is a step Oracle Database performs with the SELECT-INTO statement.
               </td>
              </tr>
             </tbody>
            </table>
            <p>
             Here are some things to keep in mind when working with explicit cursors:
            </p>
            <ul>
             <li>
              <p>
               If the query does not identify any rows, Oracle Database will
               <em>
                not
               </em>
               raise NO_DATA_FOUND. Instead, the cursor_name%NOTFOUND attribute will  return TRUE.
              </p>
             </li>
             <li>
              <p>
               Your query can return more than one row, and Oracle Database will not raise TOO_MANY_ROWS.
              </p>
             </li>
             <li>
              <p>
               When you declare a cursor in a package (that is,
               <em>
                not
               </em>
               inside a subprogram of the package) and the cursor is opened, it will stay open until you explicitly close it or your session is terminated.
              </p>
             </li>
             <li>
              <p>
               When the cursor is declared in a declaration section (and not in a package), Oracle Database will also automatically close it when the block in which it is declared terminates. It is still, however, a good idea to explicitly close the cursor yourself. If the cursor is moved to a package, you will have the
               <em>
                now necessary
               </em>
               CLOSE already in place. And if it is local, then including a CLOSE statement will also show other developers and your manager that you are paying attention.
              </p>
             </li>
            </ul>
            <h4>
             Using the Cursor FOR Loop
            </h4>
            <p>
             The cursor FOR loop is an elegant and natural extension of the numeric FOR loop in PL/SQL. With a numeric FOR loop, the body of the loop executes once for every integer value between the low and high values specified in the range. With a cursor FOR loop, the body of the loop is executed for each row returned by the query.
            </p>
            <p>
             The following block uses a cursor FOR loop to display the last names of all employees in department 10:
            </p>
            <pre>
             BEGIN
   FOR employee_rec IN (
        SELECT *
          FROM employees
         WHERE department_id = 10)
   LOOP
      DBMS_OUTPUT.put_line (
         employee_rec.last_name);
   END LOOP;
END;
            </pre>
            <p>
             You can also use a cursor FOR loop with an explicitly declared cursor:
            </p>
            <pre>
             DECLARE
   CURSOR employees_in_10_cur
   IS
      SELECT *
        FROM employees
       WHERE department_id = 10;
BEGIN
   FOR employee_rec 
   IN employees_in_10_cur
   LOOP
      DBMS_OUTPUT.put_line (
         employee_rec.last_name);
   END LOOP;
END;
            </pre>
            <p>
             The nice thing about the cursor FOR loop is that Oracle Database opens the cursor, declares a record by using %ROWTYPE against the cursor, fetches each row into a record, and then closes the loop when all the rows have been fetched (or the loop terminates for any other reason).
            </p>
            <p>
             Best of all, Oracle Database automatically optimizes cursor FOR loops to perform similarly to BULK COLLECT queries (covered in 
             <a href="/technetwork/issue-archive/2012/12-sep/o52plsql-1709862.html">
              Bulk Processing with BULK COLLECT and FORALL
             </a>
             , in the September/October 2012 issue of
             <em>
              Oracle Magazine
             </em>
             ). So even though your code looks as if you are fetching one row at a time, Oracle Database will actually fetch 100 rows at a timeand enable you to work with each row individually.
            </p>
            <h4>
             Dynamic Queries with  EXECUTE IMMEDIATE
            </h4>
            <p>
             Dynamic SQL means that at the time you write (and then compile) your code, you do not have all the information you need for parsing a SQL statement. Instead, you must wait for runtime to complete the SQL statement and then parse and execute it.
            </p>
            <p>
             Oracle Database makes it easy to execute SQL statements (and PL/SQL blocks) dynamically with the EXECUTE IMMEDIATE statement. And querying data is the easiest dynamic SQL operation of all!
            </p>
            <p>
             You can fetch a single row or multiple rows. Here is a generic function that fetches the value of a numeric column in any table, for the specified WHERE clause:
            </p>
            <pre>
             CREATE OR REPLACE FUNCTION 
single_number_value (
   table_in    IN VARCHAR2,
   column_in   IN VARCHAR2,
   where_in    IN VARCHAR2)
   RETURN NUMBER
IS
   l_return   NUMBER;
BEGIN
   EXECUTE IMMEDIATE
         'SELECT '
      || column_in
      || ' FROM '
      || table_in
      || ' WHERE '
      || where_in
      INTO l_return;
   RETURN l_return;
END;
            </pre>
            <p>
             <br/>
             As you can see, instead of SELECT-INTO, I use EXECUTE IMMEDIATE-INTO and construct the SELECT statement from the arguments passed to the function. Heres an example of calling the function:
            </p>
            <pre>
             BEGIN
   DBMS_OUTPUT.put_line (
      single_number_value (
                'employees',
                'salary',
                'employee_id=138'));
END;
            </pre>
            <p>
             <br/>
             As with SELECT-INTO, EXECUTE IMMEDIATE-INTO will raise NO_DATA_FOUND if no rows are found and TOO_MANY_ROWS if more than one row is found.
            </p>
            <p>
             You can also use EXECUTE IMMEDIATE to fetch multiple rows of data, which means that you will populate a collection, so you must use BULK COLLECT. The following is a procedure that will display the values of any numeric column for all rows specified in the WHERE clause:
            </p>
            <pre>
             CREATE OR REPLACE PROCEDURE 
show_number_values (
   table_in    IN VARCHAR2,
   column_in   IN VARCHAR2,
   where_in    IN VARCHAR2)
IS
   TYPE values_t IS TABLE OF NUMBER;

   l_values   values_t;
BEGIN
   EXECUTE IMMEDIATE
         'SELECT '
      || column_in
      || ' FROM '
      || table_in
      || ' WHERE '
      || where_in
      BULK COLLECT INTO l_values;

   FOR indx IN 1 .. l_values.COUNT
   LOOP
      DBMS_OUTPUT.put_line 
      (l_values (indx));
   END LOOP;
END;
            </pre>
            <p>
             <br/>
             And when I call the procedure for the standard employees table
            </p>
            <pre>
             BEGIN
   show_number_values (
      'employees',
      'salary',
      'department_id = 10 
       order by salary desc');
END;
            </pre>
            <p>
             <br/>
             I see the following two rows of output:
            </p>
            <pre>
             4400
3200
            </pre>
            <p>
             <br/>
             A general note of caution regarding dynamic SQL and the preceding examples in particular: whenever you concatenate text to execute a dynamically executed statement, you run the risk of
             <em>
              SQL injection
             </em>
             . This occurs when a malicious user injects, or inserts into the statement, code that changes the behavior of that SQL statement.
            </p>
            <p>
             For advice on avoiding SQL injectionbased security breaches, check out 
             <a href="/technetwork/database/features/plsql/overview/how-to-write-injection-proof-plsql-1-129572.pdf">
              How to Write SQL Injection Proof PL/SQL
             </a>
             ".
            </p>
            <h4>
             Cursor Variables
            </h4>
            <p>
             A cursor variable is, as you might guess from its name, a variable that points to a cursor or a result set. Unlike with an explicit cursor, you can pass a cursor variable as an argument to a procedure or a function. There are several excellent use cases for cursor variables, including the following:
            </p>
            <ul>
             <li>
              <p>
               Pass a cursor variable back to the host environment that called the program unitthe result set can be consumed for display or other processing.
              </p>
             </li>
             <li>
              <p>
               Construct a result set inside a function, and return a cursor variable to that set. This is especially handy when you need to use  PL/SQL, in addition to SQL, to build the result set.
              </p>
             </li>
             <li>
              <p>
               Pass a cursor variable to a pipelined table functiona powerful but quite advanced optimization technique. A full explanation of cursor variables, including the differences between strong and weak REF CURSOR types, is beyond the scope of this article.
              </p>
             </li>
             <li>
              <p>
               Instead, I will show the basic syntax for working with cursor variables and identify situations in which you might consider using this feature.
              </p>
             </li>
            </ul>
            <p>
             Cursor variables can be used with either embedded (static) or dynamic SQL. Listing 2  includes the names_for function, which returns a cursor variable that fetches either employee or department names, depending on the argument passed to the function.
            </p>
            <p>
             <strong>
              Code Listing 2:
             </strong>
             Block and description of the names_for function, which returns a cursor variable
            </p>
            <pre>
             1  CREATE OR REPLACE FUNCTION names_for (
 2        name_type_in IN VARCHAR2)
 3     RETURN SYS_REFCURSOR
 4  IS
 5     l_return   SYS_REFCURSOR;
 6  BEGIN
 7     CASE name_type_in
 8        WHEN 'EMP'
 9        THEN
10           OPEN l_return FOR
11                SELECT last_name
12                  FROM employees
13              ORDER BY employee_id;
14        WHEN 'DEPT'
15        THEN
16           OPEN l_return FOR
17                SELECT department_name
18                  FROM departments
19              ORDER BY department_id;
20     END CASE;
21
22     RETURN l_return;
23  END names_for;
            </pre>
            <table align="left" class="dataTable" style="width: 525px; height: 187px;">
             <tbody>
              <tr>
               <td colspan="2">
                <strong>
                 Line(s)	Description
                </strong>
               </td>
              </tr>
              <tr>
              </tr>
              <tr>
               <td>
                3
               </td>
               <td>
                Return a piece of data whose type is SYS_REFCURSOR.
               </td>
              </tr>
              <tr>
               <td>
                5
               </td>
               <td>
                Declare a cursor variable to be returned by the function.
               </td>
              </tr>
              <tr>
               <td>
                7
               </td>
               <td>
                Use a CASE statement driven by the value of name_type_in to determine which query should be opened.
               </td>
              </tr>
              <tr>
               <td>
                1013
               </td>
               <td>
                Open a cursor variable for a query from the employees table.
               </td>
              </tr>
              <tr>
               <td>
                1619
               </td>
               <td>
                Open a cursor variable for a query from the departments table.
               </td>
              </tr>
             </tbody>
            </table>
            <br clear="all"/>
            <p>
             Here is a block that uses the names_for function to display all the names in the departments table:
            </p>
            <pre>
             DECLARE
   l_names   SYS_REFCURSOR;
   l_name    VARCHAR2 (32767);
BEGIN
   l_names := names_for ('DEPT');

   LOOP
      FETCH l_names INTO l_name;

      EXIT WHEN l_names%NOTFOUND;
      DBMS_OUTPUT.put_line (l_name);
   END LOOP;

   CLOSE l_names;
END;
            </pre>
            <p>
             <br/>
             As you can see, all the information about the query being opened is hidden behind the function header. You simply ask to get the names for a given table. The function picks the appropriate SELECT statement, opens the cursor variable for that statement, and then returns the variable pointing to that result set.
            </p>
            <p>
             Once the cursor variable has been opened and passed back to the block, I use the same code with a cursor variable that I would use with an explicit cursor:
            </p>
            <div class="innerBoxContent">
             <ol>
              <li>
               <p>
                FETCH from the cursor (variable) INTO one or more variables (I can even FETCH-BULK COLLECT INTO with a cursor variable, populating a collection with multiple rows)
               </p>
              </li>
              <li>
               <p>
                Check the %NOTFOUND attribute of  the cursor variable to see if I am done fetching all rows
               </p>
              </li>
              <li>
               <p>
                CLOSE the cursor variable when done
               </p>
              </li>
             </ol>
            </div>
            <p>
             The OPEN-FOR statement is unique to cursor variables and enables me to specify at runtime, without having to switch to dynamic SQL, which data set will be fetched through the cursor variable.
            </p>
            <table align="right" class="dataTable" style="width: 302px; height: 159px;">
             <tbody>
              <tr>
               <td>
                <center>
                </center>
                <center>
                 <h2>
                  Next Steps
                 </h2>
                </center>
                <center>
                 <br/>
                </center>
                <p>
                 <strong>
                  DOWNLOAD
                 </strong>
                 <br/>
                 <img alt=" " height="10" src="http://www.oracleimg.com/technetwork/testcontent/r-arrow-2-115860.gif" width="10"/>
                 <strong>
                  <a href="/technetwork/database/enterprise-edition/downloads/index.html" target="">
                   Oracle Database 11
                   <em>
                    g
                   </em>
                  </a>
                 </strong>
                </p>
                <p>
                 <img alt=" " height="10" src="http://www.oracleimg.com/technetwork/testcontent/r-arrow-2-115860.gif" width="10"/>
                 <strong>
                  TEST
                  <a href="http://www.plsqlchallenge.com">
                   your PL/SQL knowledge
                  </a>
                 </strong>
                </p>
                <p>
                 <img alt=" " height="10" src="http://www.oracleimg.com/technetwork/testcontent/r-arrow-2-115860.gif" width="10"/>
                 <strong>
                  READ
                  <a href="/technetwork/issue-archive/index-087690.html">
                   PL/SQL 101, Parts 1-11
                  </a>
                 </strong>
                </p>
                <p>
                 <strong>
                  READ more about
                 </strong>
                 <br/>
                 <img alt=" " height="10" src="http://www.oracleimg.com/technetwork/testcontent/r-arrow-2-115860.gif" width="10"/>
                 <strong>
                  <a href="/technetwork/issue-archive/2012/12-sep/o52plsql-1709862.html">
                   BULK COLLECT and FORALL
                  </a>
                 </strong>
                 <br/>
                 <img alt=" " height="10" src="http://www.oracleimg.com/technetwork/testcontent/r-arrow-2-115860.gif" width="10"/>
                 <strong>
                  <a href="/technetwork/database/features/plsql/overview/how-to-write-injection-proof-plsql-1-129572.pdf">
                   SQL injection
                  </a>
                 </strong>
                </p>
                <p>
                 <strong>
                 </strong>
                </p>
               </td>
              </tr>
             </tbody>
            </table>
            <p>
             Nevertheless, you
             <em>
              can
             </em>
             use OPEN-FOR with a dynamic SELECT statement. Here is a very simple example:
            </p>
            <pre>
             CREATE OR REPLACE FUNCTION 
numbers_from (
      query_in IN VARCHAR2)
   RETURN SYS_REFCURSOR
IS
   l_return   SYS_REFCURSOR;
BEGIN
   OPEN l_return FOR query_in;

   RETURN l_return;
END numbers_from;
            </pre>
            <p>
             <br/>
             And here is a blockvirtually identical to the one that calls names_for, abovethat displays all the salaries for employees in department 10:
            </p>
            <pre>
             DECLARE
  l_salaries   SYS_REFCURSOR;
  l_salary     NUMBER;
BEGIN
  l_salaries :=
    numbers_from (
      'select salary 
        from employees 
       where department_id = 10');

  LOOP
    FETCH l_salaries INTO l_salary;

    EXIT WHEN l_salaries%NOTFOUND;
    DBMS_OUTPUT.put_line (l_salary);
  END LOOP;

  CLOSE l_salaries;
END;
            </pre>
            <h4>
             Choosing the Right Way to Query
            </h4>
            <p>
             This article has shown that the PL/SQL language offers many different ways, ranging from the simplest SELECT-INTO implicit query to the much more complicated cursor variable, to use cursors to fetch data from relational tables into local variables.
            </p>
            <p>
             Here are some guidelines to help you decide which technique to use:
            </p>
            <ul>
             <li>
              <p>
               When fetching a single row, use SELECT-INTO or EXECUTE IMMEDIATE-INTO (if your query is dynamic). Do not use an explicit cursor or a cursor FOR loop.
              </p>
             </li>
             <li>
              <p>
               When fetching
               <em>
                all
               </em>
               the rows from a query, use a cursor FOR loop
               <em>
                unless
               </em>
               the body of the loop executes one or more DML statements (INSERT, UPDATE, DELETE, or MERGE). In such a case, you will want to switch to BULK COLLECT and FORALL.
              </p>
             </li>
             <li>
              <p>
               Use an explicit cursor when you need to fetch with BULK COLLECT, but
               <em>
                limit
               </em>
               the number of rows returned with each fetch.
              </p>
             </li>
             <li>
              <p>
               Use an explicit cursor when you are fetching multiple rows but might conditionally exit before all rows are fetched.
              </p>
             </li>
             <li>
              <p>
               Use a cursor variable when the query you are fetching from varies at runtime (but isnt necessarily dynamic) and especially when you need to pass a result back to a non-PL/SQL host environment.
              </p>
             </li>
             <li>
              <p>
               Use EXECUTE IMMEDIATE to query data
               <em>
                only
               </em>
               when you cannot fully construct the SELECT statement while writing your code.
              </p>
             </li>
            </ul>
            <p>
            </p>
            <table align="center" class="dataTable" style="width: 525px; height: 338px;">
             <tbody>
              <tr>
               <td>
                <center>
                 <h2>
                  Move SELECT-INTOs into Functions
                 </h2>
                 <div style="text-align: left;">
                  <br/>
                  PL/SQL developers frequently need to retrieve data for a single row in a table, specified (usually) by a primary key value, and often find themselves writing the same primary key lookup again and again. A much better approach is to move each of your SELECT-INTO queries into a function whose sole purpose is to serve up the requested row. So instead of this:
                 </div>
                 <pre style="text-align: left;">
                  DECLARE
   l_employee   employees%ROWTYPE;
BEGIN
   SELECT *
     INTO l_employee
     FROM employees
    WHERE employee_id = 138;

   DBMS_OUTPUT.put_line (
      l_employee.last_name);
END;
                 </pre>
                 <div style="text-align: left;">
                  <br/>
                  you would first create a function:
                  <br/>
                 </div>
                 <pre style="text-align: left;">
                  CREATE OR REPLACE FUNCTION row_for_employee_id (
   employee_id_in IN employees.employee_id%TYPE)
   RETURN employees%ROWTYPE
IS
   l_employee   employees%ROWTYPE;
BEGIN
   SELECT *
     INTO l_employee
     FROM employees e
    WHERE e.employee_id = 
       row_for_employee_id.employee_id_in;

   RETURN l_employee;
EXCEPTION
   WHEN NO_DATA_FOUND
   THEN
      RETURN NULL;
END;
                 </pre>
                 <div style="text-align: left;">
                  <br/>
                  Then the anonymous block for your primary key lookup would be  DECLARE    l_employee   employees%ROWTYPE; BEGIN    l_employee :=        row_for_employee_id (138);     DBMS_OUTPUT.put_line (       l_employee.last_name); END;
                  <br/>
                 </div>
                 <p style="text-align: left;">
                  Best of all, the
                  <em>
                   next time
                  </em>
                  you need to get a row from the employees table for an ID, youll just call the function.
                 </p>
                 <p style="text-align: left;">
                  There are two big advantages to this approach:
                 </p>
                 <div class="innerBoxContent">
                  <ol>
                   <li style="text-align: left;">
                    <p>
                     Your productivity increases, because you can write less code and rely on prebuilt, pretested, reusable programs.
                    </p>
                   </li>
                   <li style="text-align: left;">
                    <p>
                     If you ever need to change the way you look up that single row, youll make the change in one place (the single point of definition) and all programs that call the function will immediately use the improved version.
                    </p>
                   </li>
                  </ol>
                 </div>
                 <p style="text-align: left;">
                  Note that I included in the function an exception handler that traps NO_DATA_FOUND and simply returns a NULL record. During execution of a SELECT-INTO, the absence of data is often not actually an error but, rather, just a data condition. So it is quite common to trap the exception and return an indicator that no row was found. (NULL is usually, but not necessarily, a good indicator of this state of affairs.) The programmer who calls the function gets to decide how to treat the NO_DATA_FOUND condition.
                 </p>
                </center>
               </td>
              </tr>
             </tbody>
            </table>
            <p>
            </p>
            <table align="center" class="dataTable" style="width: 525px; height: 338px;">
             <tbody>
              <tr>
               <td>
                <center>
                 <h2>
                  Take the Challenge
                 </h2>
                 <br/>
                </center>
                Each PL/SQL 101 article offers a quiz to test your knowledge of the information provided in it. The quiz appears below and also at
                <a href="http://www.plsqlchallenge.com">
                 PL/SQL Challenge
                </a>
                , a Website that offers online quizzes on the PL/SQL language as well as SQL and Oracle Application Express.
                <p>
                </p>
                <p>
                 Here is your quiz for this article:
                </p>
                <p>
                 The plch_employees table has a single-column primary key named employee_id. I need to write a function with the following header: FUNCTION plch_one_employee (
                </p>
                <pre>
                 employee_id_in IN PLS_INTEGER)
   RETURN plch_employees%ROWTYPE
                </pre>
                <p>
                 <br/>
                 that returns a record that contains the row of information for the specified primary key. Which of the choices provides an implementation of PLCH_ONE_EMPLOYEE that meets this requirement?
                </p>
                <p>
                 <strong>
                  a.
                 </strong>
                </p>
                <pre>
                 IS
   l_return   plch_employees%ROWTYPE;
BEGIN
   SELECT *
     INTO l_return
     FROM plch_employees
    WHERE employee_id = employee_id_in;

   RETURN l_return;
END plch_one_employee;
                </pre>
                <p>
                </p>
                <p>
                 <strong>
                  b.
                 </strong>
                </p>
                <pre>
                 IS
   CURSOR one_emp_cur
   IS
      SELECT *
        FROM plch_employees
       WHERE employee_id = employee_id_in;

   l_return   one_emp_cur%ROWTYPE;
BEGIN
   OPEN one_emp_cur;
   FETCH one_emp_cur INTO l_return;
   CLOSE one_emp_cur;

   RETURN l_return;
END plch_one_employee;
                </pre>
                <p>
                </p>
                <p>
                 <strong>
                  c.
                 </strong>
                </p>
                <pre>
                 IS
   l_return   plch_employees%ROWTYPE;
BEGIN
   FOR rec IN (SELECT *
                 FROM plch_employees
                WHERE employee_id = employee_id_in)
   LOOP
      l_return := rec;
   END LOOP;

   RETURN l_return;
END plch_one_employee;
                </pre>
                <p>
                </p>
                <p>
                 <strong>
                  d.
                 </strong>
                </p>
                <pre>
                 IS
   l_cursor   SYS_REFCURSOR;

   l_return   plch_employees%ROWTYPE;
BEGIN
   OPEN l_cursor FOR
      SELECT *
        FROM plch_employees
       WHERE employee_id = employee_id_in;

   FETCH l_cursor INTO l_return;

   CLOSE l_cursor;

   RETURN l_return;
END plch_one_employee;
                </pre>
                <p>
                </p>
               </td>
              </tr>
             </tbody>
            </table>
            <hr/>
            <p>
            </p>
            <table align="left">
             <tbody>
              <tr>
               <td align="center">
                <p>
                 <img alt="Steven Feuerstein Headshot" src="/ocom/groups/public/@otn/documents/digitalasset/312757.jpg" style="width: 121px; height: 121px;"/>
                </p>
               </td>
              </tr>
             </tbody>
            </table>
            <p>
             <a href="/technetwork/issue-archive/index-087690.html">
              <strong>
               Steven Feuerstein
              </strong>
              's biography and links to more of his
              <em>
               Oracle Magazine
              </em>
              PL/SQL articles
             </a>
            </p>
           </td>
          </tr>
         </tbody>
        </table>
        <p>
        </p>
        <p>
         <a href="mailto:opubedit_us@oracle.com?subject=www.oracle.com/technetwork/issue-archive/2013/13-mar/o23plsql-1906474.html">
          Send us your comments
         </a>
        </p>
       </div>
      </div>
      <div class="orcl6w5">
       <div class="orcl6x0">
       </div>
       <div class="orcl6x1">
       </div>
      </div>
      <div class="orcl6w6">
       <div class="orcl6x0">
       </div>
       <div class="orcl6x1">
       </div>
      </div>
     </div>
     <div id="Wrapper_FixedWidth_Rightnav">
      <div style="background-color:#FFFFFF;">
      </div>
     </div>
    </div>
    <div id="Wrapper_FixedWidth_Footer">
     <div class="addThisPrintEmail">
      <!--SS_BEGIN_SNIPPET(fragment40,1)-->
      <a href="javascript:mailpage()">
       <img alt="E-mail this page" border="0" height="16" src="/ocom/groups/systemobject/@mktg_admin/@ocom_admin/documents/digitalasset/email.gif" width="19"/>
      </a>
      <span style="MARGIN-BOTTOM: 2px">
       <a href="javascript:mailpage()">
        E-mail this page
       </a>
      </span>
      <a href="javascript: void 0;" onclick="printerView()">
       <img alt="Printer View" border="0" height="16" src="/ocom/groups/systemobject/@mktg_admin/@ocom_admin/documents/digitalasset/print_icon.gif" width="19"/>
       Printer View
      </a>
      <!--SS_END_SNIPPET(fragment40,1)-->
     </div>
     <!-- SS_BEGIN_SNIPPET(fragment43,ocomfooter)-->
     <!-- U06v1 -->
     <div class="u06v1" data-closeff="Close Info" data-openff="Open Info" data-trackas="ffooter" id="u06v1">
      <div class="u06v1z1">
      </div>
      <div class="u06v1w1">
       <div class="u06v1w2">
        <ul>
         <h5>
          Oracle Cloud
         </h5>
         <li>
          <a data-lbl="cloud:learn-about-oracle-cloud" href="https://www.oracle.com/cloud/index.html">
           Learn About Oracle Cloud Computing
          </a>
         </li>
         <li>
          <a data-lbl="cloud:get-a-free-trial" href="https://cloud.oracle.com/tryit" target="_blank">
           Get a Free Trial
          </a>
         </li>
         <li>
          <a data-lbl="cloud:learn-about-daas" href="https://www.oracle.com/cloud/daas.html">
           Learn About DaaS
          </a>
         </li>
         <li>
          <a data-lbl="cloud:learn-about-saas" href="https://www.oracle.com/cloud/saas.html">
           Learn About SaaS
          </a>
         </li>
         <li>
          <a data-lbl="cloud:learn-about-paas" href="https://www.oracle.com/cloud/paas.html">
           Learn About PaaS
          </a>
         </li>
         <li>
          <a data-lbl="cloud:learn-about-iaas" href="https://www.oracle.com/cloud/iaas.html">
           Learn About IaaS
          </a>
         </li>
         <li>
          <a data-lbl="cloud:learn-about-private-cloud" href="https://www.oracle.com/cloud/private-cloud.html">
           Learn About Private Cloud
          </a>
         </li>
         <li>
          <a data-lbl="cloud:learn-about-managed-cloud" href="https://www.oracle.com/cloud/managed-cloud.html">
           Learn About Managed Cloud
          </a>
         </li>
        </ul>
       </div>
       <div class="u06v1w2">
        <ul>
         <h5>
          Java
         </h5>
         <li>
          <a data-lbl="java:learn-about-java" href="https://www.oracle.com/java/index.html">
           Learn About Java
          </a>
         </li>
         <li>
          <a data-lbl="java:download-java-for-consumers" href="http://java.com/download" target="_blank">
           Download Java for Consumers
          </a>
         </li>
         <li>
          <a data-lbl="java:download-java-for-developers" href="/technetwork/java/javase/downloads/index.html">
           Download Java for Developers
          </a>
         </li>
         <li>
          <a data-lbl="java:java-resources-for-developers" href="/technetwork/java/index.html">
           Java Resources for Developers
          </a>
         </li>
         <li>
          <a data-lbl="java:java-cloud-service" href="https://cloud.oracle.com/java" target="_blank">
           Java Cloud Service
          </a>
         </li>
         <li>
          <a data-lbl="java:java-magazine" href="/technetwork/java/javamagazine/index.html">
           <em>
            Java Magazine
           </em>
          </a>
         </li>
        </ul>
       </div>
       <div class="u06v1w2">
        <ul>
         <h5>
          Customers and Events
         </h5>
         <li>
          <a data-lbl="customers-and-events:explore-and-read-customer-stories" href="http://www.oracle.com/us/corporate/customers/overview/index.html">
           Explore and Read Customer Stories
          </a>
         </li>
         <li>
          <a data-lbl="customers-and-events:all-oracle-events" href="http://events.oracle.com/search/search?group=Events&amp;keyword=" target="_blank">
           All Oracle Events
          </a>
         </li>
         <li>
          <a data-lbl="customers-and-events:oracle-openworld" href="https://www.oracle.com/openworld/index.html" target="_blank">
           Oracle OpenWorld
          </a>
         </li>
         <li>
          <a data-lbl="customers-and-events:javaone" href="https://www.oracle.com/javaone/index.html" target="_blank">
           JavaOne
          </a>
         </li>
        </ul>
       </div>
       <div class="u06v1w2">
        <ul>
         <h5>
          Communities
         </h5>
         <li>
          <a data-lbl="communities:blogs" href="/us/corporate/blogs/index.html">
           Blogs
          </a>
         </li>
         <li>
          <a data-lbl="communities:discussion-forums" href="https://community.oracle.com/welcome" target="_blank">
           Discussion Forums
          </a>
         </li>
         <li>
          <a data-lbl="communities:wikis" href="https://wikis.oracle.com" target="_blank">
           Wikis
          </a>
         </li>
         <li>
          <a data-lbl="communities:oracle-aces" href="/technetwork/community/oracle-ace/index.html">
           Oracle ACEs
          </a>
         </li>
         <li>
          <a data-lbl="communities:user-groups" href="/us/corporate/customers/user-groups/index.html">
           User Groups
          </a>
         </li>
         <li>
          <a data-lbl="communities:social-media-channels" href="/us/social-media/twitter/index.html">
           Social Media Channels
          </a>
         </li>
        </ul>
       </div>
       <div class="u06v1w2">
        <ul>
         <h5>
          Services and Store
         </h5>
         <li>
          <a data-lbl="services-and-store:log-in-to-my-oracle-support" href="/us/support/software/premier/my-oracle-support-068523.html">
           Log In to My Oracle Support
          </a>
         </li>
         <li>
          <a data-lbl="services-and-store:training-and-certification" href="http://education.oracle.com/" target="_blank">
           Training and Certification
          </a>
         </li>
         <li>
          <a data-lbl="services-and-store:become-a-partner" href="/partners/en/join-now/index.html" target="_blank">
           Become a Partner
          </a>
         </li>
         <li>
          <a data-lbl="services-and-store:find-a-partner-solution" href="https://solutions.oracle.com/scwar/scr/index.html">
           Find a Partner Solution
          </a>
         </li>
         <li>
          <a data-lbl="services-and-store:purchase-from-the-oracle-store" href="https://shop.oracle.com/" target="_blank">
           Purchase from the Oracle Store
          </a>
         </li>
         <li>
          <div class="u06callout">
           <h5>
            Contact and Chat
           </h5>
           <strong>
            Phone: +1.800.633.0738
           </strong>
           <br/>
           <a data-lbl="contact-and-chat:global-contacts" href="/us/corporate/contact/global-070511.html">
            Global Contacts
           </a>
           <br/>
           <a data-lbl="contact-and-chat:oracle-support" href="/us/support/contact/index.html" target="">
            Oracle Support
           </a>
           <br/>
           <a data-lbl="contact-and-chat:partner-support" href="/partners/en/most-popular-resources/partner-business-center-1954023.html">
            Partner Support
           </a>
           <br/>
           <!-- &lt;strong&gt;E-Mail:&lt;/strong&gt; &lt;a data-lbl="contact-and-chat:email" href="mailto:help@oracle.com"&gt;help@oracle.com&lt;/a&gt;&lt;/div&gt; -->
          </div>
         </li>
        </ul>
       </div>
      </div>
      <div class="u06v1z2">
      </div>
     </div>
     <!-- /U06v1 -->
     <!-- U06v0 -->
     <div data-trackas="footer" id="u06">
      <hr/>
      <h3>
       <a data-lbl="integrated cloud applications and platform services" href="/us/corporate/index.html">
        Integrated Cloud Applications and Platform Services
       </a>
      </h3>
      <ul class="u06-links">
       <li>
        <a data-lbl="subscribe" href="/us/syndication/subscribe/index.html">
         Subscribe
        </a>
       </li>
       <li>
        <a data-lbl="careers" href="https://www.oracle.com/corporate/careers/index.html">
         Careers
        </a>
       </li>
       <li>
        <a data-lbl="contact us" href="/us/corporate/contact/index.html">
         Contact Us
        </a>
       </li>
       <li>
        <a data-lbl="site maps" href="/us/sitemaps/index.html">
         Site Maps
        </a>
       </li>
       <li>
        <a data-lbl="legal notices" href="/us/legal/privacy/overview/index.html">
         Legal Notices
        </a>
       </li>
       <li>
        <a data-lbl="terms of use" href="/us/legal/terms/index.html">
         Terms of Use
        </a>
       </li>
       <li>
        <a data-lbl="privacy rights" href="/us/legal/privacy/overview/index.html">
         Privacy
        </a>
       </li>
       <li>
        <div id="teconsent">
        </div>
       </li>
       <li class="u06-mobile">
        <a data-lbl="oracle mobile" href="/us/corporate/mobile-application/index.html">
         Oracle Mobile
        </a>
       </li>
      </ul>
      <ul class="scl-icons">
       <li class="scl-facebook">
        <a data-lbl="facebook" href="/us/social-media/facebook/index.html" title="Oracle on Facebook">
         Facebook
        </a>
       </li>
       <li class="scl-linkedin">
        <a data-lbl="linkedIn" href="/us/social-media/linkedin/index.html" title="Oracle on LinkedIn">
         LinkedIn
        </a>
       </li>
       <li class="scl-twitter">
        <a data-lbl="twitter" href="/us/social-media/twitter/index.html" title="Follow Oracle on Twitter">
         Twitter
        </a>
       </li>
       <li class="scl-googleplus">
        <a data-lbl="google plus" href="https://plus.google.com/u/0/+Oracle/posts" target="_blank" title="Follow Oracle on Google+">
         Google+
        </a>
       </li>
       <li class="scl-youtube">
        <a data-lbl="youtube" href="http://www.youtube.com/oracle/" target="_blank" title="Watch Oracle on YouTube">
         YouTube
        </a>
       </li>
       <li class="scl-feed">
        <a data-lbl="oracle rss feed" href="/us/syndication/feeds/index.html" title="Oracle RSS Feeds">
         Oracle RSS Feed
        </a>
       </li>
      </ul>
     </div>
     <!-- /U06v0 -->
     <!-- SS_END_SNIPPET(fragment43,ocomfooter)-->
    </div>
   </div>
   <div class="lightbox_overlay" id="fade">
    <!--spacer-->
   </div>
   <!--SS_BEGIN_SNIPPET(fragment39,1)-->
   <!-- Start SiteCatalyst code -->
   <script language="JavaScript" src="http://www.oracleimg.com/us/assets/metrics/ora_otn.js">
   </script>
   <!-- End SiteCatalyst code -->
   <!--SS_END_SNIPPET(fragment39,1)-->
  </div>
  <!--SS_BEGIN_SNIPPET(fragment35,universal-webcache-integration)-->
  <!--SS_END_SNIPPET(fragment35,universal-webcache-integration)-->
  <!--Brightcove script line and lightbox code-->
  <div id="bcVideoPlayer" style="DISPLAY: none">
  </div>
  <div class="lightbox_overlay" id="lightbox_brightcove" onclick="showclose();" style="DISPLAY: none; Z-INDEX: 30000">
   <!--spacer-->
  </div>
 </body>
</html>