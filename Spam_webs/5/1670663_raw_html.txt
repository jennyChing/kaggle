<!DOCTYPE html>
<!--[if lte IE 9]&gt;
&lt;html class="ie" lang="en"&gt;
&lt;![endif]-->
<!--[if gt IE 9]&gt;&lt;!-->
<html class="cookie_used_false" lang="en">
 <!--&lt;![endif]-->
 <head>
  <meta charset="utf-8"/>
  <script src="http://assets.codepen.io/assets/common/cookie_used_reload-81ec504e4e90af045a89fa3f46728a6c.js" type="text/javascript">
  </script>
  <title>
   Javascript/Canvas 3D Matrix Rotation
  </title>
  <meta content="summary_large_image" name="twitter:card"/>
  <meta content="@CodePen" name="twitter:site"/>
  <meta content="Javascript/Canvas 3D Matrix Rotation" name="twitter:title"/>
  <meta content="3D matrix rotation &amp; object display in Javascript/Canvas  I've implemented these algorithms originally in 1996 using Turbo Pascal / 80386 assembly: htt..." name="twitter:description"/>
  <meta content="http://s3-us-west-2.amazonaws.com/i.cdpn.io/16773.EkrCl.00a83f06-8ef8-40b0-ab57-7b9679e13520.png" name="twitter:image"/>
  <meta content="http://s3-us-west-2.amazonaws.com/i.cdpn.io/16773.EkrCl.00a83f06-8ef8-40b0-ab57-7b9679e13520.png" itemprop="thumbnailUrl" property="og:image"/>
  <meta content="Javascript/Canvas 3D Matrix Rotation" property="og:title"/>
  <meta content="http://codepen.io/ktamas77/details/EkrCl" property="og:url"/>
  <meta content="CodePen" property="og:site_name"/>
  <link href="http://codepen.io/api/oembed?url=http://codepen.io/ktamas77/pen/EkrCl&amp;format=json" rel="alternate" title="Javascript/Canvas 3D Matrix Rotation" type="application/json+oembed"/>
  <link href="http://assets.codepen.io/assets/global/global-NoMQ-96b7098ce11a6dd9443087f5909e22f4.css" media="all" rel="stylesheet" type="text/css"/>
  <link href="http://assets.codepen.io/assets/editor/editor-6f418a4e9820d8ae357cdb7e2c6b27be.css" media="all" rel="stylesheet" type="text/css"/>
  <meta content="3D matrix rotation &amp; object display in Javascript/Canvas  I've implemented these algorithms originally in 1996 using Turbo Pascal / 80386 assembly: htt..." name="description"/>
  <link href="http://assets.codepen.io/assets/editor/themes/twilight-0506e6ad999d5186f7dd079a38c40605.css" id="cm-theme" media="screen" rel="stylesheet" type="text/css"/>
  <link href="http://assets.codepen.io/assets/editor/layouts/top-ec1e68693ff17e107fa161da4ac2e1a5.css" media="screen" rel="stylesheet" type="text/css"/>
  <style id="cm-font-family">
   .CodeMirror {
    font-family: Monaco, MonoSpace;
  }
  </style>
  <style id="cm-font-size">
   .CodeMirror {
    font-size: 14px;
  }
  </style>
  <link href="/favicon.ico" rel="shortcut icon"/>
  <meta content="authenticity_token" name="csrf-param"/>
  <meta content="RdB/YgBagUH1fmNsc0+3VBRWbr25voVhg+yio9anUHY=" name="csrf-token"/>
 </head>
 <body class="editor state-htmlOn-cssOn-jsOn preload prelayout layout- logged-out ">
  <svg style="enable-background: new 0 0 100 100; display: none;" version="1.1" viewbox="0 0 100 100" xml:space="preserve" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
   <defs>
    <path d="M99.866,26.199C98.533,13.167,87.456,3,73.988,3C63.193,3,53.938,9.532,50,18.832C46.062,9.532,36.807,3,26.013,3
  C12.544,3,1.466,13.167,0.134,26.199C0.045,27.067,0,27.95,0,28.842C0,60.24,38.788,75.059,50,96l0,0
  c11.212-20.94,50-35.759,50-67.158C100,27.95,99.955,27.067,99.866,26.199z" id="icon-heart">
    </path>
    <path d="M99.961,34.205c-0.009-0.063-0.025-0.124-0.035-0.187c-0.021-0.121-0.043-0.242-0.075-0.36
    c-0.019-0.071-0.044-0.14-0.067-0.208c-0.034-0.105-0.068-0.21-0.11-0.312c-0.029-0.071-0.063-0.142-0.096-0.21
    c-0.045-0.097-0.092-0.192-0.146-0.284c-0.04-0.068-0.082-0.134-0.122-0.2c-0.058-0.089-0.117-0.176-0.182-0.26
    c-0.047-0.063-0.097-0.126-0.147-0.187c-0.068-0.079-0.139-0.158-0.214-0.232c-0.056-0.058-0.112-0.115-0.171-0.168
    c-0.079-0.071-0.161-0.14-0.243-0.205c-0.064-0.05-0.128-0.1-0.195-0.147c-0.025-0.016-0.047-0.037-0.071-0.053L52.383,0.722
    c-1.444-0.962-3.323-0.962-4.767,0L1.914,31.19c-0.024,0.016-0.046,0.037-0.071,0.053c-0.067,0.047-0.13,0.098-0.193,0.147
    c-0.084,0.065-0.166,0.134-0.243,0.205c-0.061,0.053-0.116,0.11-0.172,0.168c-0.075,0.074-0.146,0.153-0.213,0.232
    c-0.051,0.061-0.101,0.124-0.148,0.187c-0.063,0.084-0.124,0.171-0.18,0.26c-0.043,0.066-0.084,0.132-0.124,0.2
    c-0.053,0.092-0.1,0.187-0.146,0.284c-0.033,0.068-0.067,0.139-0.096,0.21c-0.042,0.103-0.076,0.208-0.11,0.312
    c-0.022,0.068-0.047,0.137-0.067,0.208c-0.031,0.119-0.052,0.239-0.075,0.36c-0.011,0.063-0.026,0.124-0.034,0.187
    C0.014,34.389,0,34.576,0,34.765v30.468c0,0.189,0.014,0.376,0.04,0.563c0.008,0.061,0.023,0.124,0.034,0.184
    c0.022,0.121,0.043,0.242,0.075,0.36c0.02,0.071,0.045,0.14,0.067,0.208c0.034,0.105,0.068,0.21,0.11,0.315
    c0.029,0.071,0.063,0.14,0.096,0.208c0.046,0.097,0.094,0.191,0.146,0.287c0.039,0.066,0.08,0.131,0.124,0.197
    c0.056,0.089,0.117,0.176,0.18,0.261c0.047,0.065,0.097,0.126,0.148,0.187c0.067,0.079,0.138,0.158,0.213,0.231
    c0.057,0.058,0.112,0.115,0.172,0.168c0.078,0.071,0.159,0.14,0.243,0.206c0.063,0.05,0.126,0.1,0.193,0.147
    c0.025,0.016,0.047,0.037,0.071,0.053l45.703,30.469C48.338,99.758,49.169,100,50,100c0.83,0,1.661-0.242,2.383-0.723
    l45.703-30.469c0.024-0.016,0.045-0.037,0.071-0.053c0.067-0.047,0.13-0.097,0.195-0.147c0.083-0.066,0.164-0.134,0.243-0.206
    c0.059-0.053,0.115-0.11,0.171-0.168c0.075-0.074,0.146-0.153,0.214-0.231c0.05-0.061,0.1-0.121,0.147-0.187
    c0.065-0.084,0.124-0.171,0.182-0.261c0.041-0.066,0.083-0.131,0.122-0.197c0.054-0.095,0.101-0.189,0.146-0.287
    c0.033-0.068,0.067-0.137,0.096-0.208c0.042-0.105,0.076-0.21,0.11-0.315c0.022-0.068,0.048-0.137,0.067-0.208
    c0.032-0.118,0.054-0.239,0.075-0.36c0.01-0.061,0.026-0.124,0.035-0.184C99.985,65.61,100,65.423,100,65.233V34.765
    C100,34.576,99.985,34.389,99.961,34.205z M54.297,12.327l33.668,22.444L72.927,44.831L54.297,32.369V12.327z M45.703,12.327
    v20.042L27.074,44.831l-15.04-10.061L45.703,12.327z M8.594,42.809L19.345,50L8.594,57.19V42.809z M45.703,87.672L12.035,65.228
    l15.04-10.058L45.703,67.63V87.672z M50,60.165L34.802,50L50,39.833L65.198,50L50,60.165z M54.297,87.672V67.63L72.927,55.17
    l15.039,10.058L54.297,87.672z M91.405,57.19L80.656,50l10.75-7.191V57.19z" id="icon-codepen-box">
    </path>
    <path d="M28.871,21.5L0,50.004L28.874,78.5l10.497-10.349L20.998,50.004l18.373-18.13L28.871,21.5z M71.129,21.5
  L60.633,31.865l18.378,18.131L60.633,68.122l10.496,10.365L100,49.974L71.129,21.5z" id="icon-code">
    </path>
    <path d="M84,0H16C7.164,0,0,7.164,0,16v68c0,8.836,7.164,16,16,16h68c8.836,0,16-7.164,16-16V16C100,7.164,92.836,0,84,0z
   M85,70.167c0,5.154-3.583,9.333-8.001,9.333H23c-4.418,0-8-4.179-8-9.333V18.833c0-5.155,3.582-9.333,8-9.333h53.999
  C81.417,9.5,85,13.679,85,18.833V70.167z" id="icon-key">
    </path>
    <path d="M75,0H25C11.19,0,0,11.193,0,25v50c0,13.802,11.19,25,25,25h50c13.811,0,25-11.198,25-25V25C100,11.193,88.811,0,75,0z
   M57.203,85.067H41.504V72.542h15.699V85.067L57.203,85.067z M73.357,42.041c-0.84,2.066-1.873,3.834-3.102,5.298
  c-1.235,1.474-2.604,2.718-4.101,3.751c-1.498,1.035-2.922,2.066-4.249,3.101c-1.333,1.034-1.553,2.214-2.596,3.547
  c-1.025,1.335-0.977,3.004-0.977,5.006v3.924H41.668v-4.623c0-2.864,1.366-5.265,2.27-7.202c0.896-1.935,2.255-3.581,3.459-4.947
  c1.196-1.367,2.62-2.556,3.955-3.557c1.327-0.993,2.637-1.993,3.776-2.995c1.123-1.001,2.083-2.1,2.783-3.304
  c0.7-1.197,1.043-2.694,0.977-4.5c0-3.06-0.74-5.33-2.245-6.795c-1.498-1.465-3.582-2.206-6.25-2.206c-1.8,0-3.337,0.351-4.639,1.05
  c-1.303,0.7-2.369,1.635-3.199,2.808c-0.837,1.163-1.448,3.593-1.847,5.156c-0.407,1.57-0.602,6.115-0.602,6.115H25.399
  c0.073-8.333,0.684-7.963,1.855-10.965c1.164-2.995,2.8-6.132,4.899-8.33c2.099-2.197,4.63-4.179,7.601-5.417
  c2.962-1.228,6.283-1.977,9.945-1.977c4.736,0,8.683,0.581,11.856,1.876c3.167,1.302,5.713,2.889,7.65,4.817
  c1.929,1.937,3.312,4.004,4.149,6.234c0.831,2.237,1.245,4.313,1.245,6.242C74.601,37.354,74.187,39.975,73.357,42.041z" id="icon-help">
    </path>
    <g id="icon-logout">
     <rect height="62.191" width="17.919" x="40.403">
     </rect>
     <path d="M67.811,12.449v16.909c8.432,5.818,12.691,14.664,12.691,24.572c0,17.518-13.682,31.717-31.199,31.717
  c-17.512,0-30.335-14.199-30.335-31.717c0-9.886,3.516-18.723,13.002-24.537V12.47C14.051,19.929,4.864,35.692,4.864,53.93
  c0,25.444,20.072,46.07,45.51,46.07c25.445,0,44.763-20.626,44.763-46.07C95.137,35.675,85.729,19.904,67.811,12.449z">
     </path>
    </g>
    <g id="icon-menu">
     <rect height="22.532" width="100" y="3.415">
     </rect>
     <rect height="22.532" width="100" y="38.734">
     </rect>
     <rect height="22.532" width="100" y="74.053">
     </rect>
    </g>
    <g id="icon-eye">
     <path d="M50,12.548c-27.612,0-50,37.012-50,37.012s22.388,37.989,50,37.989c27.611,0,50-37.989,50-37.989S77.611,12.548,50,12.548z
     M50,75.049c-13.807,0-25-11.193-25-25s11.193-25,25-25c13.807,0,25,11.193,25,25S63.807,75.049,50,75.049z">
     </path>
     <path d="M62.5,50.097c0,6.909-5.598,12.5-12.5,12.5c-6.903,0-12.5-5.593-12.5-12.5c0-6.908,5.597-12.5,12.5-12.5
    C56.902,37.597,62.5,43.189,62.5,50.097z">
     </path>
    </g>
    <polygon id="icon-x" points="100,78.905 78.735,100 49.608,71.094 21.263,99.217 0,78.123 28.344,50 0,21.877 21.263,0.78 49.608,28.905 
      78.735,0 100,21.094 70.862,50">
    </polygon>
    <path d="M87.687,45.077c-0.313-2.433-0.816-4.807-1.542-7.079l8.145-11.73l-5.827-7.515l-0.094-0.123l-5.824-7.514
  l-12.955,5.577c-2.041-1.265-4.192-2.362-6.459-3.219L59.42,0h-9.34h-0.153h-9.341l-3.709,13.474
  c-2.27,0.857-4.421,1.955-6.463,3.222l-12.957-5.577l-5.825,7.514l-0.097,0.124l-5.822,7.517l8.146,11.731
  c-0.726,2.271-1.233,4.645-1.544,7.079L0,52.032l2.08,9.375l0.033,0.15l2.08,9.375l14.001,0.761c1.295,2.028,2.771,3.926,4.4,5.668
  l-2.396,14.227l8.416,4.173l0.138,0.067L37.169,100l9.309-10.796c1.161,0.109,2.335,0.173,3.524,0.173s2.358-0.074,3.52-0.184
  l9.317,10.804l8.415-4.173l0.141-0.066l8.413-4.172l-2.396-14.228c1.628-1.741,3.104-3.64,4.4-5.672l14-0.759l2.078-9.375
  l0.035-0.154L100,52.025L87.687,45.077z M50.003,34.51c8.435,0,15.272,7.035,15.272,15.719c0,8.679-6.839,15.717-15.272,15.717
  c-8.436,0-15.272-7.038-15.272-15.717C34.731,41.545,41.569,34.51,50.003,34.51z" id="icon-gear">
    </path>
    <path d="M59.469,9.429L45.096,23.812c0,0,8.063,8.063,16.006,16.007H0v20.355h61.103L45.086,76.189l14.383,14.382
  L100,50L59.469,9.429z" id="icon-arrow-right">
    </path>
    <polygon id="icon-arrow-down-mini" points="0,21.113 100,21.113 50,78.887 ">
    </polygon>
    <g id="icon-fork">
     <path d="M84.339,62.504c-4.454,0-8.463,1.818-11.313,4.721c-0.519-0.49-1.041-1.006-1.578-1.572
    c-6.965-7.211-14.451-19.189-22.311-29.678C41.16,25.766,32.941,15.562,20.125,15.069H0v14.37h20.126
    c2.555-0.111,6.556,1.993,11.208,6.914c6.961,7.197,14.454,19.171,22.315,29.662c4.822,6.164,9.759,12.293,15.741,16.289
    c1.99,6.191,7.93,10.688,14.949,10.688c8.648,0,15.661-6.824,15.661-15.244C100,69.328,92.987,62.504,84.339,62.504z">
     </path>
     <path d="M51.541,29.438h18.986c2.637,4.795,7.831,8.059,13.811,8.059c8.648,0,15.661-6.824,15.661-15.243S92.986,7.01,84.338,7.01
    c-5.979,0-11.174,3.264-13.811,8.058H36.3C42.307,18.619,47.161,23.992,51.541,29.438z">
     </path>
    </g>
    <path d="M55.702,50.002L77.85,72.324L100,50.002l-9.173-9.249l-6.611,6.668C82.878,25.187,64.56,7.5,42.169,7.5
    C18.916,7.5,0,26.567,0,50.002C0,73.436,18.917,92.5,42.169,92.5h16.218V79.424H42.169c-16.102,0-29.193-13.197-29.193-29.421
    c0-16.229,13.092-29.426,29.193-29.426c15.08,0,27.37,11.615,28.892,26.41l-6.184-6.233L55.702,50.002z" id="icon-run">
    </path>
    <path d="M84.187,44.046c0.084-0.753,0.114-1.52,0.114-2.289c0-13.402-10.814-24.257-24.154-24.257
  c-10.354,0-19.161,6.551-22.599,15.754c-2.274-2.508-5.521-4.111-9.166-4.111c-6.872,0-12.439,5.59-12.439,12.493
  c0,0.816,0.084,1.606,0.239,2.38C7.014,45.534,0,53.472,0,63.095C0,73.824,8.648,82.5,19.323,82.5h61.354
  C91.351,82.5,100,73.824,100,63.095C100,53.59,93.177,45.715,84.187,44.046z" id="icon-save">
    </path>
    <g id="icon-edit">
     <path d="M24.56,92.536L0,100l7.453-24.583C13.809,75.173,24.775,86.209,24.56,92.536z">
     </path>
     <path d="M96.617,32.082l-0.475,0.471L67.383,3.766l0.472-0.472C80.782-9.646,109.871,18.811,96.617,32.082z">
     </path>
     <path d="M61.64,9.516l28.758,28.785L44.095,84.646c-1.222,1.221-2.234,0.884-2.234,0.884l2.314-15.356l-14.454,0.074l0.072-14.468
    l-15.342,2.312c0,0-0.34-1.011,0.883-2.234L61.64,9.516z">
     </path>
    </g>
    <path d="M75,46.226v15.096l25-25.161L75,11v12.581c-38.25,0.25-37.5,37.742-37.5,37.742S51.126,42.477,75,46.226z M55,13.516H7.5
    c-6.15,0-7.5,1.761-7.5,7.549v60.387C0,87.718,1.499,89,7.5,89H80c6.025,0,7.5-1.133,7.5-7.548v-20.13L75,72.117v4.302H12.5V26.097
    h30L55,13.516z" id="icon-share">
    </path>
    <g id="icon-text">
     <polygon points="44.937,10 0,10 0,55.171 24.117,90 41.296,77.165 26.218,55.171 44.937,55.171">
     </polygon>
     <polygon points="100,10 55.062,10 55.062,55.171 79.183,90 96.361,77.165 81.284,55.171 100,55.171">
     </polygon>
    </g>
    <path d="M34.357,91.176L0,56.604L16.687,39.81l18.157,18.264l48.954-49.25L100,25.125L34.357,91.176z" id="icon-check">
    </path>
    <g id="icon-user">
     <circle cx="50" cy="25" r="25">
     </circle>
     <path d="M75,62.5H25c-6.903,0-12.5,5.597-12.5,12.5v25H25h50h12.5V75C87.5,68.097,81.903,62.5,75,62.5z">
     </path>
    </g>
    <path d="M56.2,0H12.5v100h75V31.2L56.2,0z M25,87.5v-75h25v25h25v50H25z" id="icon-file">
    </path>
    <path d="M50,9.939c-27.615,0-50,14.757-50,32.959c0,11.435,8.836,21.498,22.248,27.408v19.754l19.084-14.581l-0.805-0.234
  c3.068,0.387,6.229,0.607,9.473,0.607c27.613,0,50-14.754,50-32.959C100,24.696,77.613,9.939,50,9.939z" id="icon-comment">
    </path>
   </defs>
  </svg>
  <svg style="display: none;" viewbox="0 0 100 100" xmlns="http://www.w3.org/2000/svg">
   <defs>
    <g id="icon-editor-top">
     <rect height="48.365" width="27.479" x="72.521">
     </rect>
     <rect height="44.048" width="100" y="55.952">
     </rect>
     <rect height="48.365" width="27.479" x="36.26">
     </rect>
     <rect height="48.365" width="27.479">
     </rect>
    </g>
    <g id="icon-editor-left">
     <rect height="27.479" width="48.365">
     </rect>
     <rect height="100" width="44.049" x="55.951">
     </rect>
     <rect height="27.479" width="48.365" y="36.262">
     </rect>
     <rect height="27.479" width="48.365" y="72.521">
     </rect>
    </g>
    <g id="icon-editor-right">
     <rect height="27.479" width="48.363" x="51.637" y="72.521">
     </rect>
     <rect height="100" width="44.048">
     </rect>
     <rect height="27.479" width="48.363" x="51.637" y="36.261">
     </rect>
     <rect height="27.479" width="48.363" x="51.637">
     </rect>
    </g>
    <g id="icon-drag-handle">
     <g>
      <rect fill="#606060" height="11" width="255">
      </rect>
      <rect fill="#E8E8E8" height="11" width="255" y="11">
      </rect>
     </g>
     <g>
      <rect fill="#606060" height="11" width="255" y="43">
      </rect>
      <rect fill="#E8E8E8" height="11" width="255" y="54">
      </rect>
     </g>
     <g>
      <rect fill="#606060" height="11" width="255" y="86">
      </rect>
      <rect fill="#E8E8E8" height="11" width="255" y="97">
      </rect>
     </g>
    </g>
   </defs>
  </svg>
  <header class="main-header group" id="main-header">
   <div class="header-left">
    <h1 class="logo header-chunk">
     <a href="http://codepen.io/">
      CodePen
     </a>
    </h1>
    <button class="top-button button run" id="run">
     <svg viewbox="0 0 100 100">
      <use xlink:href="#icon-run">
      </use>
     </svg>
     Run
    </button>
    <button class="top-button fork-button button" id="fork">
     <svg viewbox="0 0 100 100">
      <use xlink:href="#icon-fork">
      </use>
     </svg>
     Fork
    </button>
    <div class="top-button button sharing-button" id="sharing-button">
     <svg viewbox="0 0 100 100">
      <use xlink:href="#icon-share">
      </use>
     </svg>
     <span id="share-link">
      Share
     </span>
     <section class="sharing-panel" id="sharing-panel">
      <ul class="share-buttons" id="share-buttons">
       <li>
        <a class="button mini-button twitter" href="https://twitter.com/intent/tweet?text=Javascript/Canvas%203D%20Matrix%20Rotation&amp;url=http://codepen.io/ktamas77/pen/EkrCl&amp;via=CodePen" target="_blank">
         Share on Twitter
        </a>
       </li>
       <li>
        <a class="button mini-button facebook" href="https://www.facebook.com/sharer/sharer.php?u=http://codepen.io/ktamas77/pen/EkrCl" target="_blank">
         Share on Facebook
        </a>
       </li>
       <li>
        <a class="button mini-button gplus" href="https://plus.google.com/share?url=http://codepen.io/ktamas77/pen/EkrCl" target="_blank">
         Share on G+
        </a>
       </li>
      </ul>
      <div class="share-actions">
       <a class="button" id="share-gist">
        Save as GitHub Gist
       </a>
       <a class="button" href="#0" id="share-zip">
        Export .zip
       </a>
       <a class="button embed-builder-button" href="#0">
        Embed
       </a>
      </div>
      <div class="share-static">
       Direct links to code:
       <a href="http://codepen.io/ktamas77/pen/EkrCl.html" target="_blank">
        .html
       </a>
       <a href="http://codepen.io/ktamas77/pen/EkrCl.haml" target="_blank">
        .haml
       </a>
       <a href="http://codepen.io/ktamas77/pen/EkrCl.css" target="_blank">
        .css
       </a>
       <a href="http://codepen.io/ktamas77/pen/EkrCl.js" target="_blank">
        .js
       </a>
      </div>
     </section>
    </div>
    <button class="top-button button" id="edit-settings">
     <svg viewbox="0 0 100 100">
      <use xlink:href="#icon-gear">
      </use>
     </svg>
     Settings
    </button>
   </div>
   <div class="header-right">
    <div class="header-chunk">
     <div class="view-switcher tabs">
      <nav>
       <a class="view-switcher-row editor-link active" href="http://codepen.io/ktamas77/pen/EkrCl" id="editor-link">
        Editor
        <div class="view-about">
         Write code, write it like the wind.
        </div>
        <span class="view-url">
         <span class="view-url-text">
          Get URL
         </span>
         <input class="view-url-url" type="text" value="http://codepen.io/ktamas77/pen/EkrCl"/>
        </span>
        <span class="learn-more inline-q" data-href="http://blog.codepen.io/documentation/views/editor-view/">
         ?
        </span>
       </a>
       <a class="view-switcher-row details-link" href="http://codepen.io/ktamas77/details/EkrCl" id="details-link">
        Details
        <div class="view-about">
         Information, metadata, and comments
        </div>
        <span class="view-url">
         <span class="view-url-text">
          Get URL
         </span>
         <input class="view-url-url" type="text" value="http://codepen.io/ktamas77/details/EkrCl"/>
        </span>
        <span class="learn-more inline-q" data-href="http://blog.codepen.io/documentation/views/details-view/">
         ?
        </span>
       </a>
       <a class="view-switcher-row full-page-link" href="http://codepen.io/ktamas77/full/EkrCl" id="full-page-link">
        Full Page
        <div class="view-about">
         Shareable full screen preview
        </div>
        <span class="view-url">
         <span class="view-url-text">
          Get URL
         </span>
         <input class="view-url-url" type="text" value="http://codepen.io/ktamas77/full/EkrCl"/>
        </span>
        <span class="learn-more inline-q" data-href="http://blog.codepen.io/documentation/views/full-page-view/">
         ?
        </span>
       </a>
       <a class="view-switcher-row upsell pres-link" data-url="/ajax/upgrades/pres" href="http://codepen.io/ktamas77/pres/EkrCl" id="pres-link">
        <span class="badge badge-pro">
         PRO
        </span>
        Presentation
        <div class="view-about">
         More screen room, change display options on the fly
        </div>
        <span class="view-url">
         <span class="view-url-text">
          Get URL
         </span>
         <input class="view-url-url" type="text" value="http://codepen.io/ktamas77/pres/EkrCl"/>
        </span>
        <span class="learn-more inline-q" data-href="http://blog.codepen.io/documentation/pro-features/presentation-mode/">
         ?
        </span>
       </a>
       <a class="view-switcher-row" href="http://app.crossbrowsertesting.com/livetests/run?url=http%3A%2F%2Fcodepen.io%2Fktamas77%2Ffull%2FEkrCl">
        Open on CrossBrowserTesting 
        <div class="view-about">
         Live testing on different browsers/platforms
        </div>
       </a>
       <span class="mobile-trigger">
        <svg viewbox="0 0 100 100">
         <use xlink:href="#icon-menu">
         </use>
        </svg>
       </span>
      </nav>
     </div>
    </div>
    <div class="user-stuff header-chunk">
     <a class="button top-button login-button" href="https://codepen.io/login" id="login-button">
      Log In
     </a>
     <a class="button top-button signup-button" href="/signup/">
      Sign Up
     </a>
    </div>
   </div>
  </header>
  <div class="page-wrap twilight">
   <div class="boxes">
    <div class="top-boxes editor-parent">
     <div class="box box-html" data-type="html" id="box-html">
      <div class="powers">
       <div class="editor-actions-left">
        <button class="settings-nub button mini-button" data-type="html" id="settings-pane-html" title="Open Settings">
         <svg viewbox="0 0 100 100">
          <use xlink:href="#icon-gear">
          </use>
         </svg>
        </button>
        <h2>
         HTML
        </h2>
       </div>
       <div class="editor-actions-right">
        <button class="button mini-button tidy-code-button" data-type="html" id="html-tidy-code-button">
         Tidy
        </button>
        <button class="button mini-button view-compiled-button" data-type="html" id="html-view-compiled" title="Toggle Compiled View">
         View Compiled
        </button>
        <button class="button mini-button close-editor-button" data-type="html" title="Click to close. Double-click to expand.">
         <svg viewbox="0 0 100 100">
          <use xlink:href="#icon-x">
          </use>
         </svg>
        </button>
       </div>
      </div>
      <div class="code-wrap">
       <pre class="code-box" id="html">
        <code>
         %canvas#screen_polygon(width='300' height='300')
%canvas#screen_mesh(width='300' height='300')
        </code>
       </pre>
       <div class="error-bar" id="error-bar-html">
        <span class="error-icon" data-type="html">
         !
        </span>
       </div>
      </div>
     </div>
     <div class="editor-resizer" id="editor-resizer-html">
     </div>
     <div class="box box-css" data-type="css" id="box-css">
      <div class="powers">
       <div class="editor-actions-left">
        <button class="settings-nub button mini-button" data-type="css" id="settings-pane-css">
         <svg viewbox="0 0 100 100">
          <use xlink:href="#icon-gear">
          </use>
         </svg>
        </button>
        <h2>
         CSS
        </h2>
       </div>
       <div class="editor-actions-right">
        <button class="button mini-button tidy-code-button" data-type="css" id="css-tidy-code-button">
         Tidy
        </button>
        <button class="button mini-button view-compiled-button" data-type="css" id="css-view-compiled" title="Toggle Compiled View">
         View Compiled
        </button>
        <button class="button mini-button close-editor-button" data-type="css" title="Click to close. Double-click to expand.">
         <svg viewbox="0 0 100 100">
          <use xlink:href="#icon-x">
          </use>
         </svg>
        </button>
       </div>
      </div>
      <div class="code-wrap">
       <pre class="code-box" id="css">
        <code>
        </code>
       </pre>
       <div class="error-bar" id="error-bar-css">
        <span class="error-icon" data-type="css">
         !
        </span>
       </div>
      </div>
     </div>
     <div class="editor-resizer" id="editor-resizer-css">
     </div>
     <div class="box box-js " data-type="js" id="box-js">
      <div class="powers">
       <div class="editor-actions-left">
        <button class="settings-nub button mini-button" data-type="js" id="settings-pane-js">
         <svg viewbox="0 0 100 100">
          <use xlink:href="#icon-gear">
          </use>
         </svg>
        </button>
        <h2>
         JS
        </h2>
       </div>
       <div class="editor-actions-right">
        <button class="button mini-button tidy-code-button" data-type="js" id="js-tidy-code-button">
         Tidy
        </button>
        <button class="button mini-button view-compiled-button" data-type="js" id="js-view-compiled" title="Toggle Compiled View">
         View Compiled
        </button>
        <button class="button mini-button close-editor-button" data-type="js" title="Click to close. Double-click to expand.">
         <svg viewbox="0 0 100 100">
          <use xlink:href="#icon-x">
          </use>
         </svg>
        </button>
       </div>
      </div>
      <div class="code-wrap">
       <pre class="code-box" id="js">
        <code>
         var scale = 2.5;            // normalize object size
var horizontalShift = 150;  // horizontal center
var verticalShift = 150;    // vertical center

var sinMax = 1024;
var multiplier = 32000;
var sinA = Array();
var cosA = Array();

// -- init rotation arrays
var pipi = (sinMax/2)/Math.PI;
for (var i = 0;i &lt; sinMax; i++) {
    sinA[i] = Math.floor(Math.sin(i/(pipi))*multiplier); 
    cosA[i] = Math.floor(Math.cos(i/(pipi))*multiplier);
}

function rotateX(vertexObj, angle)
{   
    targetObj = Array();
    for (var i in vertexObj) {
        v = vertexObj[i];
        sourceX = v[2];
        sourceY = v[3];
        sourceZ = v[4];
        sinAngle = sinA[angle];
        cosAngle = cosA[angle];
        targetObj[i] = Array();
        targetObj[i][2] = sourceX;
        targetObj[i][3] = Math.floor(((cosAngle * sourceY) + (sinAngle * sourceZ)) / multiplier);
        targetObj[i][4] = Math.floor(((sinAngle * sourceY) - (cosAngle * sourceZ)) / multiplier);
    }
    return targetObj;
}

function rotateY(vertexObj, angle)
{   
    targetObj = Array();
    for (var i in vertexObj) {
        v = vertexObj[i];
        sourceX = v[2];
        sourceY = v[3];
        sourceZ = v[4];
        sinAngle = sinA[angle];
        cosAngle = cosA[angle];
        targetObj[i] = Array();
        targetObj[i][2] = Math.floor(((cosAngle * sourceX) + (sinAngle * sourceZ)) / multiplier);
        targetObj[i][3] = sourceY;
        targetObj[i][4] = Math.floor(((sinAngle * sourceX) - (cosAngle * sourceZ)) / multiplier);
    }
    return targetObj;
}

function rotateZ(vertexObj, angle)
{   
    targetObj = Array();
    for (var i in vertexObj) {
        v = vertexObj[i];
        sourceX = v[2];
        sourceY = v[3];
        sourceZ = v[4];
        sinAngle = sinA[angle];
        cosAngle = cosA[angle];
        targetObj[i] = Array();
        targetObj[i][2] = Math.floor(((cosAngle * sourceX) + (sinAngle * sourceY)) / multiplier);
        targetObj[i][3] = Math.floor(((sinAngle * sourceX) - (cosAngle * sourceY)) / multiplier);
        targetObj[i][4] = sourceZ;
    }
    return targetObj;
}

function shiftX(vertexObj, amount)
{
    targetObj = Array();
    for (var i in vertexObj) {
        v = vertexObj[i];
        targetObj[i] = Array();
        targetObj[i][2] = parseFloat(v[2]) + amount;
        targetObj[i][3] = v[3];
        targetObj[i][4] = v[4];
    }
    return targetObj;
}

function shiftY(vertexObj, amount)
{
    targetObj = Array();
    for (var i in vertexObj) {
        v = vertexObj[i];
        targetObj[i] = Array();
        targetObj[i][2] = v[2];
        targetObj[i][3] = parseFloat(v[3]) + amount;
        targetObj[i][4] = v[4];
    }
    return targetObj;
}

function shiftZ(vertexObj, amount)
{
    targetObj = Array();
    for (var i in vertexObj) {
        v = vertexObj[i];
        targetObj[i] = Array();
        targetObj[i][2] = v[2];
        targetObj[i][3] = v[3];
        targetObj[i][4] = parseFloat(v[4]) + amount;
    }
    return targetObj;
}


function renderVertex(vertexObj, canvasName)
{
    canvas = $('#' + canvasName)[0].getContext('2d');
    canvas.fillStyle = '#00f';            
    for (var i in vertexObj) {
        v = vertexObj[i];
        x = Math.round(v[2] / scale);
        y = Math.round(v[3] / scale);
        canvas.fillRect(x + horizontalShift, y + verticalShift, 1, 1);
    }                
}

function renderPolygon(vertexObj, faceObj, canvasName)
{
    var canvas = $('#' + canvasName)[0].getContext('2d');
    
    var orderedFaces = Array();
    for (var i in faceObj) {
        f = faceObj[i];
        a = f[2];
        b = f[3];
        c = f[4];
        vertexA = vertexObj[a];
        vertexB = vertexObj[b];
        vertexC = vertexObj[c];
        z1 = vertexA[4];
        z2 = vertexB[4];
        z3 = vertexC[4];
        zSum = z1 + z2 + z3;        
        orderedItem = Array(i, zSum);        
        orderedFaces[i] = orderedItem;
    }
    
    orderedFaces.sort(function(a, b) {
        return a[1] - b[1]
    });
    
    for (var i in orderedFaces) {
        faceIndex = orderedFaces[i][0];
        f = faceObj[faceIndex];
        a = f[2];
        b = f[3];
        c = f[4];
        vertexA = vertexObj[a];
        vertexB = vertexObj[b];
        vertexC = vertexObj[c];
        x1 = vertexA[2] / scale;
        y1 = vertexA[3] / scale;
        x2 = vertexB[2] / scale;
        y2 = vertexB[3] / scale;
        x3 = vertexC[2] / scale;
        y3 = vertexC[3] / scale;
        canvas.beginPath();
        canvas.fillStyle = 'rgba(' + faceIndex + ', 45, 21, 255)';
        canvas.moveTo(x1 + horizontalShift, y1 + verticalShift);
        canvas.lineTo(x2 + horizontalShift, y2 + verticalShift);
        canvas.lineTo(x3 + horizontalShift, y3 + verticalShift);
        canvas.closePath();
        canvas.fill();
    }               
}

function renderMesh(vertexObj, faceObj, canvasName)
{
    var canvas = $('#' + canvasName)[0].getContext('2d');
    canvas.fillStyle = '#0f0';            
    canvas.lineWidth = 1;
    for (var i in faceObj) {
        f = faceObj[i];
        a = f[2];
        b = f[3];
        c = f[4];
        ab = f[5];
        bc = f[6];
        ca = f[7];
        vertexA = vertexObj[a];
        vertexB = vertexObj[b];
        vertexC = vertexObj[c];
        x1 = vertexA[2] / scale;
        y1 = vertexA[3] / scale;
        x2 = vertexB[2] / scale;
        y2 = vertexB[3] / scale;
        x3 = vertexC[2] / scale;
        y3 = vertexC[3] / scale;
        if (ab) {
            canvas.beginPath();
            canvas.moveTo(x1 + horizontalShift, y1 + verticalShift);
            canvas.lineTo(x2 + horizontalShift, y2 + verticalShift);
            canvas.stroke();
        }
        if (bc) {
            canvas.beginPath();
            canvas.moveTo(x2 + horizontalShift, y2 + verticalShift);
            canvas.lineTo(x3 + horizontalShift, y3 + verticalShift);
            canvas.stroke();
        }
        if (ca) {
            canvas.beginPath();
            canvas.moveTo(x3 + horizontalShift, y3 + verticalShift);
            canvas.lineTo(x1 + horizontalShift, y1 + verticalShift);
            canvas.stroke();
        }
    }

}

function center3d(vertexObj)
{
    minX = 0;
    maxX = 0;
    minY = 0;
    maxY = 0;
    minZ = 0;
    maxZ = 0;
    for (var i in vertexObj) {
        v = vertexObj[i];
        x = v[2];
        y = v[3];
        z = v[4];
        minX = Math.min(minX, x);
        maxX = Math.max(maxX, x);
        minY = Math.min(minY, y);
        maxY = Math.max(maxY, y);
        minZ = Math.min(minZ, z);
        maxZ = Math.max(maxZ, z);
    }
    width = maxX-minX;
    height = maxY-minY;
    depth = maxZ-minZ;
    centerX = minX + (width / 2);
    centerY = minY + (height / 2);
    centerZ = minZ + (depth / 2);
    targetObj = shiftZ(shiftY(shiftX(vertexObj, -centerX), -centerY), -centerZ);
    return targetObj;
}

// === main ===

var rotateAngleX = 0;
var rotateAngleY = 0;
var rotateAngleZ = 0;

function deleteCanvas(canvasName)
{
  var canvas = $('#' + canvasName)[0].getContext('2d');
  canvas.fillStyle = '#fff';            
  canvas.fillRect(0, 0, 300, 300);
}

function loop() {
  setTimeout(function ()
             {
               rotate = rotateZ(rotateX(rotateY(vertex, rotateAngleY), rotateAngleX), rotateAngleZ);
               
               deleteCanvas('screen_polygon');
               renderPolygon(rotate, face, 'screen_polygon');
               
               deleteCanvas('screen_mesh');
               renderMesh(rotate, face, 'screen_mesh');
               
               rotateAngleX += 5;
               if (rotateAngleX &gt;= sinMax) {
                 rotateAngleX -= sinMax;
               }
               rotateAngleY += 2;
               if (rotateAngleY &gt;= sinMax) {
                 rotateAngleY -= sinMax;
               }
               rotateAngleZ += 3;
               if (rotateAngleZ &gt;= sinMax) {
                 rotateAngleZ -= sinMax;
               }
               
               loop();
             }, 10);
}

vertex = center3d(vertex);

loop();
        </code>
       </pre>
       <div class="error-bar" id="error-bar-js">
        <span class="error-icon" data-type="js">
         !
        </span>
       </div>
      </div>
     </div>
    </div>
    <div class="resizer" id="resizer">
     <span>
     </span>
     <div class="width-readout" id="width-readout">
      999px
     </div>
    </div>
    <div class="result" id="result_div">
     <iframe allowfullscreen="true" allowtransparency="true" class="result-iframe iframe-empty" id="result" name="CodePen" sandbox="allow-scripts allow-pointer-lock allow-same-origin allow-popups allow-forms" scrolling="auto" src="">
     </iframe>
     <section class="drawer" id="drawer">
     </section>
     <div class="loading-text" id="loading-text">
      Loading
      <span>
       ..................
      </span>
     </div>
     <div class="drag-cover" id="editor-drag-cover">
     </div>
    </div>
   </div>
  </div>
  <div class="pen-settings-modal modal-message modal-neutral messagingjs-ignore pen-settings-modal-half" id="pen-settings-modal">
   <div class="pen-settings-halfs-wrap">
    <div class="settings-modal-left tabs">
     <nav class="explore-tabs fill-space-tabs" id="settings-tabs">
      <a class="settings-tab-html" data-type="html" href="#settings-html" id="settings-html-tab">
       HTML
      </a>
      <a class="settings-tab-css" data-type="css" href="#settings-css" id="settings-css-tab">
       CSS
      </a>
      <a class="settings-tab-js" data-type="js" href="#settings-js" id="settings-js-tab">
       JavaScript
      </a>
      <a class="settings-tab-behavior" data-type="behavior" href="#settings-behavior" id="settings-behavior-tab">
       Behavior
      </a>
     </nav>
     <div class="settings" id="settings-html">
      <form class="settings-row settings-row-1 preprocessor-choice group">
       <h4>
        <label for="html-preprocessor">
         HTML Preprocessor
        </label>
       </h4>
       <div class="editor-settings-help-link">
        <svg class="icon-help" viewbox="0 0 100 100">
         <use xlink:href="#icon-help">
         </use>
        </svg>
        <div class="help-flyout">
         <h5>
          About HTML Preprocessors
         </h5>
         <svg class="icon-x" viewbox="0 0 100 100">
          <use xlink:href="#icon-x">
          </use>
         </svg>
         <p>
          HTML preprocessors can make writing HTML more powerful or convenient. For instance, Markdown is designed to be easier to write and read for text documents and you could write a loop in Jade.
         </p>
         <p>
          <a href="http://blog.codepen.io/documentation/editor/using-html-preprocessors/" target="_blank">
           Learn more
          </a>
          
          <a href="/versions/">
           Versions
          </a>
         </p>
        </div>
       </div>
       <select class="fullwidth" id="html-preprocessor" name="html-preprocessor">
        <option value="none">
         None
        </option>
        <option value="haml">
         Haml
        </option>
        <option value="markdown">
         Markdown
        </option>
        <option value="slim">
         Slim
        </option>
        <option value="jade">
         Jade
        </option>
       </select>
      </form>
      <form class="settings-row settings-row-2 prevent-form-submit" onsubmit="return false;">
       <h4>
        <label for="html-classes">
         Add Class(es) to &lt;html&gt;
        </label>
       </h4>
       <div class="editor-settings-help-link">
        <svg class="icon-help" viewbox="0 0 100 100">
         <use xlink:href="#icon-help">
         </use>
        </svg>
        <div class="help-flyout">
         <h5>
          Adding Classes
         </h5>
         <svg class="icon-x" viewbox="0 0 100 100">
          <use xlink:href="#icon-x">
          </use>
         </svg>
         <p>
          In CodePen, whatever you write in the HTML editor is what goes within the
          <code>
           &lt;body&gt;
          </code>
          tags in
          <a href="http://blog.codepen.io/documentation/features/preview-template/" target="_blank">
           a basic HTML5 template
          </a>
          . So you don't have access to higher-up elements like the
          <code>
           &lt;html&gt;
          </code>
          tag. If you want to add classes there, that can effect the whole document, this is the place to do it.
         </p>
        </div>
       </div>
       <input class="fullwidth" id="html-classes" name="html-classes" placeholder="e.g. single post post-1234" type="text"/>
      </form>
      <form class="settings-row settings-row-3">
       <h4>
        <label for="head-content">
         Stuff for &lt;head&gt;
        </label>
       </h4>
       <div class="editor-settings-help-link">
        <svg class="icon-help" viewbox="0 0 100 100">
         <use xlink:href="#icon-help">
         </use>
        </svg>
        <div class="help-flyout">
         <h5>
          About the &lt;head&gt;
         </h5>
         <svg class="icon-x" viewbox="0 0 100 100">
          <use xlink:href="#icon-x">
          </use>
         </svg>
         <p>
          In CodePen, whatever you write in the HTML editor is what goes within the
          <code>
           &lt;body&gt;
          </code>
          tags in
          <a href="http://blog.codepen.io/documentation/features/preview-template/" target="_blank">
           a basic HTML5 template
          </a>
          . If you need things in the
          <code>
           &lt;head&gt;
          </code>
          of the document, put that code here.
         </p>
        </div>
       </div>
       <textarea class="fullwidth" id="head-content" name="head-content" placeholder="e.g. &lt;meta&gt;, &lt;link&gt;, &lt;script&gt;">
       </textarea>
       <p id="meta-tag-insert">
         Insert the most common viewport meta tag
       </p>
      </form>
     </div>
     <div class="settings" id="settings-css">
      <form class="settings-row settings-row-1 preprocessor-choice group">
       <h4>
        <label for="css-preprocessor">
         CSS Preprocessor
        </label>
       </h4>
       <div class="editor-settings-help-link">
        <svg class="icon-help" viewbox="0 0 100 100">
         <use xlink:href="#icon-help">
         </use>
        </svg>
        <div class="help-flyout">
         <h5>
          About CSS Preprocessors
         </h5>
         <svg class="icon-x" viewbox="0 0 100 100">
          <use xlink:href="#icon-x">
          </use>
         </svg>
         <p>
          CSS preprocessors help make authoring CSS easier. All of them offer things like variables and mixins to provide convenient abstractions.
         </p>
         <p>
          <a href="http://blog.codepen.io/documentation/editor/using-css-preprocessors/" target="_blank">
           Learn more
          </a>
          
          <a href="/versions/">
           Versions
          </a>
         </p>
        </div>
       </div>
       <select class="fullwidth css-preprocessor" id="css-preprocessor" name="css-preprocessor">
        <option value="none">
         None
        </option>
        <option value="less">
         Less
        </option>
        <option value="scss">
         SCSS
        </option>
        <option value="sass">
         Sass
        </option>
        <option value="stylus">
         Stylus
        </option>
        <option value="postcss">
         PostCSS
        </option>
       </select>
       <div class="align-right hide" id="need-an-addon">
        <a class="button mini-button" href="#" id="css-need-an-addon-button">
         Need an add-on?
        </a>
       </div>
       <div class="add-ons add-ons-scss hide" id="add-ons">
       </div>
      </form>
      <form class="settings-row settings-row-2 prevent-form-submit" id="startercss-options-form" onsubmit="return false;">
       <h4>
        CSS Base
       </h4>
       <div class="editor-settings-help-link">
        <svg class="icon-help" viewbox="0 0 100 100">
         <use xlink:href="#icon-help">
         </use>
        </svg>
        <div class="help-flyout">
         <h5>
          About CSS Base
         </h5>
         <svg class="icon-x" viewbox="0 0 100 100">
          <use xlink:href="#icon-x">
          </use>
         </svg>
         <p>
          It's a common practice to apply CSS to a page that styles elements such that they are consistent across all browsers. We offer two of the most popular choices:
          <a href="http://necolas.github.io/normalize.css/" target="_blank">
           normalize.css
          </a>
          and a
          <a href="http://meyerweb.com/eric/tools/css/reset/" target="_blank">
           reset
          </a>
          . Or, chose
          <b>
           Neither
          </b>
          and nothing will be applied.
         </p>
        </div>
       </div>
       <input checked="" id="startercss-normalize" name="startercss" type="radio" value="normalize"/>
       <label class="small-inline" for="startercss-normalize">
        Normalize
       </label>
       <input checked="" id="startercss-reset" name="startercss" type="radio" value="reset"/>
       <label class="small-inline" for="startercss-reset">
        Reset
       </label>
       <input checked="" id="startercss-neither" name="startercss" type="radio" value="neither"/>
       <label class="small-inline" for="startercss-neither">
        Neither
       </label>
      </form>
      <form class="settings-row settings-row-3" id="prefix-options-form">
       <h4>
        Vendor Prefixing
       </h4>
       <div class="editor-settings-help-link">
        <svg class="icon-help" viewbox="0 0 100 100">
         <use xlink:href="#icon-help">
         </use>
        </svg>
        <div class="help-flyout">
         <h5>
          About Vendor Prefixing
         </h5>
         <svg class="icon-x" viewbox="0 0 100 100">
          <use xlink:href="#icon-x">
          </use>
         </svg>
         <p>
          To get the best cross-browser support, it is a common practice to apply vendor prefixes to CSS properties and values that require them to work. For instance
          <code>
           -webkit-
          </code>
          or
          <code>
           -moz-
          </code>
          .
         </p>
         <p>
          We offer two popular choices:
          <a href="https://github.com/postcss/autoprefixer" target="blank">
           Autoprefixer
          </a>
          (which processes your CSS server-side) and
          <a href="http://leaverou.github.io/prefixfree/" target="_blank">
           -prefix-free
          </a>
          (which applies prefixes via a script, client-side).
         </p>
        </div>
       </div>
       <input id="prefix-autoprefixer" name="prefix" type="radio" value="autoprefixer"/>
       <label class="small-inline" for="prefix-autoprefixer">
        Autoprefixer
       </label>
       <input id="prefix-prefixfree" name="prefix" type="radio" value="prefixfree"/>
       <label class="small-inline" for="prefix-prefixfree">
        Prefixfree
       </label>
       <input id="prefix-neither" name="prefix" type="radio" value="neither"/>
       <label class="small-inline" for="prefix-neither">
        Neither
       </label>
      </form>
      <form class="settings-row settings-row-4 prevent-form-submit" id="external-css-resources" onsubmit="return false;">
       <h4>
        Add External CSS
       </h4>
       <p>
        These stylesheets will be added in this order and before the code you write in the CSS editor. You can also add another Pen here, and it will pull the CSS from it. Try typing "font" or "ribbon" below.
       </p>
       <div class="editor-settings-help-link">
        <svg class="icon-help" viewbox="0 0 100 100">
         <use xlink:href="#icon-help">
         </use>
        </svg>
        <div class="help-flyout">
         <h5>
          About External Resources
         </h5>
         <svg class="icon-x" viewbox="0 0 100 100">
          <use xlink:href="#icon-x">
          </use>
         </svg>
         <p>
          You can apply CSS to your Pen from any stylesheet on the web. Just put a URL to it here and we'll apply it, in the order you have them, before the CSS in the Pen itself.
         </p>
         <p>
          If the stylesheet you link to has the file extension of a preprocessor, we'll attempt to process it before applying.
         </p>
         <p>
          You can also link to another Pen here, and we'll pull the CSS from that Pen and include it. If it's using a matching preprocessor, we'll combine the code before preprocessing, so you can use the linked Pen as a true dependency.
         </p>
         <p>
          <a href="http://blog.codepen.io/documentation/editor/adding-external-resources/" target="_blank">
           Learn more
          </a>
         </p>
        </div>
       </div>
       <div class="external-resource-wrapper" id="css-external-resources">
       </div>
       <script id="css-external-resources-template" type="text/template">
        &lt;div data-view-id="&lt;%= view_id %&gt;" class="external-resource-url-row"&gt;

    &lt;span class="move-external-url"&gt;
      &lt;svg viewBox="0 0 225 108" class="icon-drag-handle"&gt;
        &lt;use xlink:href="#icon-drag-handle"&gt;&lt;/use&gt;
      &lt;/svg&gt;
    &lt;/span&gt;

    &lt;input
      id="external-resource-input-&lt;%= view_id %&gt;"
      class="fullwidth css-resource external-resource"
      type="url"
      name="external-css"
      placeholder="&lt;%= placeholder %&gt;"
      value="&lt;%= url %&gt;"
      data-view-id="&lt;%= view_id %&gt;"&gt;

    &lt;span class="remove-external-url" style="cursor: pointer;" data-view-id="&lt;%= view_id %&gt;"&gt;
      &lt;svg viewBox="0 0 100 100" class="icon-x"&gt;
        &lt;use xlink:href="#icon-x"&gt;&lt;/use&gt;
      &lt;/svg&gt;
    &lt;/span&gt;

  &lt;/div&gt;
       </script>
       <div class="external-resource-actions group">
        Quick-add:
        <select class="quick-add-select" id="css-quick-add">
         <option value="none">
          ---
         </option>
         <option value="//maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap.min.css">
          Bootstrap
         </option>
         <option value="https://cdn.jsdelivr.net/foundation/5.5.0/css/foundation.css">
          Foundation
         </option>
         <option value="//cdnjs.cloudflare.com/ajax/libs/animate.css/3.2.3/animate.min.css">
          Animate.css
         </option>
        </select>
        <span class="add-resource button mini-button" data-type="css" id="add-css-resource">
         <span data-type="css">
          + add another resource
         </span>
        </span>
       </div>
      </form>
      <form class="settings-row settings-row-5" id="css-settings-row-5">
       <button class="button mini-button" id="analyze-css">
        Analyze CSS
       </button>
       <small>
        via
        <a href="http://csslint.net/" target="_blank">
         CSS Lint
        </a>
       </small>
      </form>
     </div>
     <div class="settings" id="settings-js">
      <form class="settings-row settings-row-1 preprocessor-choice group">
       <h4>
        <label for="js-preprocessor">
         JavaScript Preprocessor
        </label>
       </h4>
       <div class="editor-settings-help-link">
        <svg class="icon-help" viewbox="0 0 100 100">
         <use xlink:href="#icon-help">
         </use>
        </svg>
        <div class="help-flyout">
         <h5>
          About JavaScript Preprocessors
         </h5>
         <svg class="icon-x" viewbox="0 0 100 100">
          <use xlink:href="#icon-x">
          </use>
         </svg>
         <p>
          JavaScript preprocessors can help make authoring JavaScript easier and more convenient. For instance, CoffeeScript can help prevent easy-to-make mistakes and offer a cleaner syntax and Babel can bring ECMAScript 6 features to browsers that only support ECMAScript 5.
         </p>
         <p>
          <a href="http://blog.codepen.io/documentation/editor/using-js-preprocessors/" target="_blank">
           Learn more
          </a>
          
          <a href="/versions/">
           Versions
          </a>
         </p>
        </div>
       </div>
       <select class="fullwidth" id="js-preprocessor" name="js-preprocessor">
        <option value="none">
         None
        </option>
        <option value="coffeescript">
         CoffeeScript
        </option>
        <option value="livescript">
         LiveScript
        </option>
        <option value="typescript">
         TypeScript
        </option>
        <option value="babel">
         Babel
        </option>
       </select>
      </form>
      <form class="settings-row external-js-resources settings-row-2 prevent-form-submit" id="external-js-resources" onsubmit="return false;">
       <h4>
        Add External JavaScript
       </h4>
       <p>
        These scripts will run in this order and before the code in the JavaScript editor. You can also link to another Pen here, and it will run the JavaScript from it. Also try typing the name of any popular library.
       </p>
       <div class="editor-settings-help-link">
        <svg class="icon-help" viewbox="0 0 100 100">
         <use xlink:href="#icon-help">
         </use>
        </svg>
        <div class="help-flyout">
         <h5>
          About External Resources
         </h5>
         <svg class="icon-x" viewbox="0 0 100 100">
          <use xlink:href="#icon-x">
          </use>
         </svg>
         <p>
          You can apply a script from anywhere on the web to your Pen. Just put a URL to it here and we'll add it, in the order you have them, before the JavaScript in the Pen itself.
         </p>
         <p>
          If the script you link to has the file extension of a preprocessor, we'll attempt to process it before applying.
         </p>
         <p>
          You can also link to another Pen here, and we'll pull the JavaScript from that Pen and include it. If it's using a matching preprocessor, we'll combine the code before preprocessing, so you can use the linked Pen as a true dependency.
         </p>
         <p>
          <a href="http://blog.codepen.io/documentation/editor/adding-external-resources/" target="_blank">
           Learn more
          </a>
         </p>
        </div>
       </div>
       <div class="external-resource-wrapper" id="js-external-resources">
       </div>
       <script id="js-external-resources-template" type="text/template">
        &lt;div data-view-id="&lt;%= view_id %&gt;" class="external-resource-url-row"&gt;

    &lt;span class="move-external-url"&gt;
      &lt;svg viewBox="0 0 225 108" class="icon-drag-handle"&gt;
        &lt;use xlink:href="#icon-drag-handle"&gt;&lt;/use&gt;
      &lt;/svg&gt;
    &lt;/span&gt;

    &lt;input
      id="external-resource-input-&lt;%= view_id %&gt;"
      class="fullwidth js-resource external-resource"
      type="url"
      name="external-js"
      placeholder="&lt;%= placeholder %&gt;"
      value="&lt;%= url %&gt;"
      data-view-id="&lt;%= view_id %&gt;"&gt;

    &lt;span class="remove-external-url" style="cursor: pointer;" data-view-id="&lt;%= view_id %&gt;"&gt;
      &lt;svg viewBox="0 0 100 100" class="icon-x"&gt;
        &lt;use xlink:href="#icon-x"&gt;&lt;/use&gt;
      &lt;/svg&gt;
    &lt;/span&gt;

  &lt;/div&gt;
       </script>
       <div class="external-resource-actions group">
        Quick-add:
        <select class="quick-add-select" id="js-quick-add">
         <option value="none">
          ---
         </option>
         <option value="//cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js">
          jQuery
         </option>
         <option value="//cdnjs.cloudflare.com/ajax/libs/jqueryui/1.11.2/jquery-ui.min.js">
          jQuery UI
         </option>
         <option value="//cdnjs.cloudflare.com/ajax/libs/angular.js/1.3.14/angular.min.js">
          Angular
         </option>
         <option value="//cdnjs.cloudflare.com/ajax/libs/ember.js/1.10.0/ember.min.js">
          Ember
         </option>
         <option value="//cdnjs.cloudflare.com/ajax/libs/react/0.13.0/react.min.js">
          React
         </option>
         <option value="//cdnjs.cloudflare.com/ajax/libs/backbone.js/1.1.2/backbone-min.js">
          Backbone
         </option>
         <option value="//cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.2/underscore-min.js">
          Underscore
         </option>
         <option value="//cdnjs.cloudflare.com/ajax/libs/lodash.js/3.5.0/lodash.min.js">
          Lodash
         </option>
         <option value="//cdnjs.cloudflare.com/ajax/libs/three.js/r70/three.min.js">
          Three.js
         </option>
         <option value="//cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js">
          D3
         </option>
         <option value="//cdnjs.cloudflare.com/ajax/libs/snap.svg/0.3.0/snap.svg-min.js">
          Snap.svg
         </option>
         <option value="//cdnjs.cloudflare.com/ajax/libs/modernizr/2.8.3/modernizr.min.js">
          Modernizr
         </option>
         <option value="//cdnjs.cloudflare.com/ajax/libs/polymer/0.5.5/polymer.js">
          Polymer
         </option>
         <option value="//cdnjs.cloudflare.com/ajax/libs/zepto/1.1.4/zepto.min.js">
          Zepto
         </option>
         <option value="//cdnjs.cloudflare.com/ajax/libs/handlebars.js/3.0.0/handlebars.min.js">
          Handlebars
         </option>
         <option value="//cdnjs.cloudflare.com/ajax/libs/gsap/1.16.1/TweenMax.min.js">
          Greensock TweenMax
         </option>
        </select>
        <span class="add-resource button mini-button" data-type="js" id="add-js-resource">
         <span data-type="js">
          + add another resource
         </span>
        </span>
       </div>
      </form>
      <form class="settings-row settings-row-3" id="js-settings-row-5">
       <button class="button mini-button" id="analyze-js">
        Analyze JS
       </button>
       <small>
        via
        <a href="http://www.jshint.com/" target="_blank">
         JS Hint
        </a>
       </small>
      </form>
     </div>
     <div class="settings pen-settings-panel" id="settings-behavior">
      <form class="settings-row settings-row-1 prevent-form-submit" id="editor-settings-form" onsubmit="return false;">
       <h4>
        Code Indentation
       </h4>
       <div>
        <input checked="" id="indent-with-spaces" name="indent-with" type="radio" value="spaces"/>
        <label for="indent-with-spaces">
         Spaces
        </label>
        <input id="indent-with-tabs" name="indent-with" type="radio" value="tabs"/>
        <label for="indent-with-tabs">
         Tabs
        </label>
        <input id="tab-size" list="tab-width-options" max="6" min="1" name="tab-size" type="range" value="2"/>
        <datalist id="tab-width-options">
         <option>
          1
         </option>
         <option>
          2
         </option>
         <option>
          3
         </option>
         <option>
          4
         </option>
         <option>
          5
         </option>
         <option>
          6
         </option>
        </datalist>
        <label for="tab-size">
         Width of Indent
        </label>
       </div>
      </form>
      <form class="settings-row settings-row-2 prevent-form-submit" onsubmit="return false;">
       <div>
        <input checked="" id="auto-save" name="auto-save" type="checkbox"/>
        <label for="auto-save">
         Autosave
        </label>
        <p class="hint">
         If active, Pens will autosave every 30 seconds after being saved once.
        </p>
       </div>
      </form>
      <form class="settings-row settings-row-3 prevent-form-submit" onsubmit="return false;">
       <div>
        <input checked="" id="auto-run" name="auto-run" type="checkbox"/>
        <label for="auto-run">
         Auto Update Preview
        </label>
        <p class="hint">
         If active, the preview will update automatically when you change code.
        </p>
       </div>
      </form>
     </div>
    </div>
   </div>
   <div class="save-and-close-wrap">
    <input class="button green" id="close-settings" type="button" value="Close"/>
   </div>
  </div>
  <footer class="site-footer editor-footer">
   <div class="footer-left">
    CodePen PRO is
    <a href="/pro/">
     pretty sweet
    </a>
    . Just saying.
    <a class="button mini-button embed-builder-button" href="#0">
     Embed
    </a>
    <a class="button mini-button" href="#0" id="view-details-button">
     <svg viewbox="0 0 100 100">
      <use xlink:href="#icon-comment">
      </use>
     </svg>
     Details
    </a>
    <a class="keyboard-commands-button button mini-button" href="#0">
     
    </a>
   </div>
   <div class="footer-right">
    A Pen by
    <a href="/ktamas77/">
     Tamas Kalman
    </a>
    <div class="multi-button mini-multi-button">
     <button class="button mini-button editor-toggle-button active" data-type="html" id="editor-toggle-button-html">
      HTML
     </button>
     <button class="button mini-button editor-toggle-button active" data-type="css" id="editor-toggle-button-css">
      CSS
     </button>
     <button class="button mini-button editor-toggle-button active" data-type="js" id="editor-toggle-button-js">
      JS
     </button>
    </div>
    <a class=" footer-icon footer-icon-editor layout-change-icon" href="http://codepen.io/ktamas77/pen/EkrCl/left/" id="left-layout">
     <span class="screen-reader-text">
      Use Left Layout
     </span>
     <svg viewbox="0 0 100 100">
      <use xlink:href="#icon-editor-left">
      </use>
     </svg>
    </a>
    <a class="active footer-icon footer-icon-editor layout-change-icon" href="http://codepen.io/ktamas77/pen/EkrCl/top/" id="top-layout">
     <span class="screen-reader-text">
      Use Top Layout
     </span>
     <svg viewbox="0 0 100 100">
      <use xlink:href="#icon-editor-top">
      </use>
     </svg>
    </a>
    <a class=" footer-icon footer-icon-editor layout-change-icon" href="http://codepen.io/ktamas77/pen/EkrCl/right/" id="right-layout">
     <span class="screen-reader-text">
      Use Right Layout
     </span>
     <svg viewbox="0 0 100 100">
      <use xlink:href="#icon-editor-right">
      </use>
     </svg>
    </a>
   </div>
  </footer>
  <div class="modal-message modal-neutral messagingjs-hide" id="keycommands">
   <section class="editor-commands" style="padding-right: 10px;">
    <h2>
     Editor Commands
    </h2>
    <div class="key-group">
     <kbr class="command">
      F
     </kbr>
     Find
    </div>
    <div class="key-group">
     <kbr class="command">
      F
     </kbr>
     Find &amp; Replace
    </div>
    <div class="key-group">
     <kbr class="command">
      [
     </kbr>
     Indent Code Right
    </div>
    <div class="key-group">
     <kbr class="command">
      ]
     </kbr>
     Indent Code Left
    </div>
    <div class="key-group">
     <kbr class="command">
      /
     </kbr>
     Block Comment
    </div>
    <div class="key-group">
     <kbr class="command-no-mod">
       Tab
     </kbr>
     Tidy Up Code
    </div>
    <div class="key-group">
     <kbr class="command">
      J
     </kbr>
     Join This &amp; Next Line
    </div>
    <h2>
     Pen Actions
    </h2>
    <div class="key-group">
     <kbr class="command">
      P
     </kbr>
     Create New Pen
    </div>
    <div class="key-group">
     <kbr class="command">
      S
     </kbr>
     Save
    </div>
    <div class="key-group">
     <kbr class="command">
      I
     </kbr>
     Info Panel (if owned)
    </div>
    <div class="key-group">
     <kbr class="command">
      5
     </kbr>
     Re-Run Code
    </div>
    <p style="margin: 20px 0 0 0;">
     Also see:
     <a href="http://blog.codepen.io/documentation/features/tab-triggers/" target="_blank">
      Tab Triggers
     </a>
    </p>
   </section>
   <section class="editor-commands">
    <h2>
     HTML Specific
    </h2>
    <div class="key-group">
     <kbr class="command">
      D
     </kbr>
     Select Outward Matching Pair
    </div>
    <div class="key-group">
     <kbr class="command">
      A
     </kbr>
     Wrap With...
    </div>
    <div class="key-group">
     <kbr class="command">
       .
     </kbr>
     Close Closest Open Tag
    </div>
    <h2>
     CSS Specific
    </h2>
    <div class="key-group">
     <kbr class="command">
      Y
     </kbr>
     Evaluate Simple Math
    </div>
    <div class="key-group">
     <kbr class="command-no-mod">
       
     </kbr>
     Increment Number 0.1
    </div>
    <div class="key-group">
     <kbr class="command-no-mod">
       
     </kbr>
     Decrement Number 0.1
    </div>
    <h2>
     Misc
    </h2>
    <div class="key-group">
     <kbr class="command">
      8
     </kbr>
     Clear All Analyze Errors
    </div>
    <div class="key-group">
     <kbr class="command">
      9
     </kbr>
     Open This Dialog
    </div>
    <div class="key-group">
     <kbr class="command no-mod">
      ESC
     </kbr>
     Close Dialogs / Collapse Editors
    </div>
   </section>
  </div>
  <div class="overlay messagingjs-hide" id="overlay">
  </div>
  <noscript>
   <input class="modal-closing-trick" id="modal-closing-trick" type="checkbox"/>
   <div class="noscript-overlay" style="display: block;">
   </div>
   <div class="modal-message group modal-warning">
    <div class="modal-title">
     CodePen doesn't work very well without JavaScript.
    </div>
    <p>
     We're all for progressive enhancement, but CodePen is a bit unique in that it's all about writing and showing front end code, including JavaScript. It's required to use most of the features of CodePen.
    </p>
    <p>
     Need to know how to enable it?
     <a href="http://enable-javascript.com/" target="_blank">
      Go here.
     </a>
    </p>
    <label class="button" for="modal-closing-trick">
     Close this, use anyway.
    </label>
   </div>
  </noscript>
  <input id="init-data" type="hidden" value="{&quot;__mobile&quot;:false,&quot;__cookieUsed&quot;:false,&quot;__turnOffJS&quot;:false,&quot;__sandboxVal&quot;:&quot;allow-scripts allow-pointer-lock allow-same-origin allow-popups allow-forms&quot;,&quot;__user&quot;:&quot;{\&quot;current_team_id\&quot;:0,\&quot;id\&quot;:1,\&quot;name\&quot;:\&quot;Captain Anonymous\&quot;,\&quot;username\&quot;:\&quot;anon\&quot;,\&quot;paid\&quot;:false,\&quot;plan_type\&quot;:\&quot;free\&quot;}&quot;,&quot;__phkPrefix&quot;:&quot;d110657ba6e627ab4983053b8d87796c&quot;,&quot;__pageType&quot;:&quot;pen&quot;,&quot;__layoutType&quot;:null,&quot;__rtData&quot;:&quot;{\&quot;roomType\&quot;:\&quot;live\&quot;,\&quot;rtClientID\&quot;:\&quot;\&quot;,\&quot;clientRoomID\&quot;:\&quot;:live:EkrCl:\&quot;,\&quot;clientRoleID\&quot;:\&quot;:live:EkrCl::role\&quot;,\&quot;roomID\&quot;:\&quot;live:EkrCl\&quot;,\&quot;role\&quot;:\&quot;\&quot;,\&quot;usesRoomData\&quot;:false,\&quot;maxMembers\&quot;:0,\&quot;pen\&quot;:{\&quot;slugHash\&quot;:\&quot;EkrCl\&quot;},\&quot;user\&quot;:{\&quot;id\&quot;:1,\&quot;name\&quot;:\&quot;Captain Anonymous\&quot;,\&quot;username\&quot;:\&quot;anon\&quot;,\&quot;paid\&quot;:false,\&quot;planType\&quot;:\&quot;free\&quot;,\&quot;role\&quot;:\&quot;\&quot;}}&quot;,&quot;__pen&quot;:&quot;{\&quot;resources\&quot;:[{\&quot;url\&quot;:\&quot;//cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js\&quot;,\&quot;order\&quot;:0,\&quot;resource_type\&quot;:\&quot;js\&quot;,\&quot;action\&quot;:\&quot;include_js_url\&quot;,\&quot;content\&quot;:\&quot;\&quot;,\&quot;original_content\&quot;:\&quot;\&quot;,\&quot;text_to_replace\&quot;:null},{\&quot;url\&quot;:\&quot;http://ktamas77.github.io/canvas_vektor/javascripts/torus.js\&quot;,\&quot;order\&quot;:1,\&quot;resource_type\&quot;:\&quot;js\&quot;,\&quot;action\&quot;:\&quot;include_js_url\&quot;,\&quot;content\&quot;:\&quot;\&quot;,\&quot;original_content\&quot;:\&quot;\&quot;,\&quot;text_to_replace\&quot;:null}],\&quot;tags\&quot;:[\&quot;canvas\&quot;,\&quot;3d\&quot;,\&quot;matrix\&quot;,\&quot;javascript\&quot;,\&quot;animation\&quot;],\&quot;editor_settings\&quot;:{\&quot;theme\&quot;:\&quot;twilight\&quot;,\&quot;html_pre_processor\&quot;:\&quot;none\&quot;,\&quot;css_pre_processor\&quot;:\&quot;none\&quot;,\&quot;css_starter\&quot;:\&quot;neither\&quot;,\&quot;css_prefix\&quot;:\&quot;neither\&quot;,\&quot;js_pre_processor\&quot;:\&quot;none\&quot;,\&quot;font_type\&quot;:\&quot;monaco\&quot;,\&quot;font_size\&quot;:\&quot;14\&quot;,\&quot;key_bindings\&quot;:\&quot;normal\&quot;,\&quot;indent_with\&quot;:\&quot;spaces\&quot;,\&quot;tab_size\&quot;:2,\&quot;auto_run\&quot;:true,\&quot;line_numbers\&quot;:true,\&quot;line_wrapping\&quot;:true,\&quot;code_folding\&quot;:true,\&quot;match_brackets\&quot;:true},\&quot;auto_run\&quot;:true,\&quot;checksum\&quot;:2480484441,\&quot;created_at\&quot;:\&quot;2013-01-09T21:49:10Z\&quot;,\&quot;css\&quot;:\&quot;\&quot;,\&quot;css_external\&quot;:\&quot;\&quot;,\&quot;css_pre_processor\&quot;:\&quot;none\&quot;,\&quot;css_pre_processor_lib\&quot;:\&quot;\&quot;,\&quot;css_prefix\&quot;:\&quot;neither\&quot;,\&quot;css_prefix_free\&quot;:false,\&quot;css_starter\&quot;:\&quot;neither\&quot;,\&quot;description\&quot;:\&quot;3D matrix rotation &amp; object display in Javascript/Canvas\\n\\nI've implemented these algorithms originally in 1996 using Turbo Pascal / 80386 assembly: https://github.com/ktamas77/vektor\\n\\nThis project is a conversion of my old matrix rotation / 3d object display algorithms.\\n\\nThe object is defined in an array (vertexes, faces) originally generated by 3D Studio 4.0.\\n\&quot;,\&quot;has_animation\&quot;:true,\&quot;head\&quot;:\&quot;\&quot;,\&quot;html\&quot;:\&quot;%canvas#screen_polygon(width='300' height='300')\\n%canvas#screen_mesh(width='300' height='300')\&quot;,\&quot;html_classes\&quot;:\&quot;\&quot;,\&quot;html_pre_processor\&quot;:\&quot;haml\&quot;,\&quot;id\&quot;:148604,\&quot;js\&quot;:\&quot;var scale = 2.5;            // normalize object size\\nvar horizontalShift = 150;  // horizontal center\\nvar verticalShift = 150;    // vertical center\\n\\nvar sinMax = 1024;\\nvar multiplier = 32000;\\nvar sinA = Array();\\nvar cosA = Array();\\n\\n// -- init rotation arrays\\nvar pipi = (sinMax/2)/Math.PI;\\nfor (var i = 0;i &lt; sinMax; i++) {\\n    sinA[i] = Math.floor(Math.sin(i/(pipi))*multiplier); \\n    cosA[i] = Math.floor(Math.cos(i/(pipi))*multiplier);\\n}\\n\\nfunction rotateX(vertexObj, angle)\\n{   \\n    targetObj = Array();\\n    for (var i in vertexObj) {\\n        v = vertexObj[i];\\n        sourceX = v[2];\\n        sourceY = v[3];\\n        sourceZ = v[4];\\n        sinAngle = sinA[angle];\\n        cosAngle = cosA[angle];\\n        targetObj[i] = Array();\\n        targetObj[i][2] = sourceX;\\n        targetObj[i][3] = Math.floor(((cosAngle * sourceY) + (sinAngle * sourceZ)) / multiplier);\\n        targetObj[i][4] = Math.floor(((sinAngle * sourceY) - (cosAngle * sourceZ)) / multiplier);\\n    }\\n    return targetObj;\\n}\\n\\nfunction rotateY(vertexObj, angle)\\n{   \\n    targetObj = Array();\\n    for (var i in vertexObj) {\\n        v = vertexObj[i];\\n        sourceX = v[2];\\n        sourceY = v[3];\\n        sourceZ = v[4];\\n        sinAngle = sinA[angle];\\n        cosAngle = cosA[angle];\\n        targetObj[i] = Array();\\n        targetObj[i][2] = Math.floor(((cosAngle * sourceX) + (sinAngle * sourceZ)) / multiplier);\\n        targetObj[i][3] = sourceY;\\n        targetObj[i][4] = Math.floor(((sinAngle * sourceX) - (cosAngle * sourceZ)) / multiplier);\\n    }\\n    return targetObj;\\n}\\n\\nfunction rotateZ(vertexObj, angle)\\n{   \\n    targetObj = Array();\\n    for (var i in vertexObj) {\\n        v = vertexObj[i];\\n        sourceX = v[2];\\n        sourceY = v[3];\\n        sourceZ = v[4];\\n        sinAngle = sinA[angle];\\n        cosAngle = cosA[angle];\\n        targetObj[i] = Array();\\n        targetObj[i][2] = Math.floor(((cosAngle * sourceX) + (sinAngle * sourceY)) / multiplier);\\n        targetObj[i][3] = Math.floor(((sinAngle * sourceX) - (cosAngle * sourceY)) / multiplier);\\n        targetObj[i][4] = sourceZ;\\n    }\\n    return targetObj;\\n}\\n\\nfunction shiftX(vertexObj, amount)\\n{\\n    targetObj = Array();\\n    for (var i in vertexObj) {\\n        v = vertexObj[i];\\n        targetObj[i] = Array();\\n        targetObj[i][2] = parseFloat(v[2]) + amount;\\n        targetObj[i][3] = v[3];\\n        targetObj[i][4] = v[4];\\n    }\\n    return targetObj;\\n}\\n\\nfunction shiftY(vertexObj, amount)\\n{\\n    targetObj = Array();\\n    for (var i in vertexObj) {\\n        v = vertexObj[i];\\n        targetObj[i] = Array();\\n        targetObj[i][2] = v[2];\\n        targetObj[i][3] = parseFloat(v[3]) + amount;\\n        targetObj[i][4] = v[4];\\n    }\\n    return targetObj;\\n}\\n\\nfunction shiftZ(vertexObj, amount)\\n{\\n    targetObj = Array();\\n    for (var i in vertexObj) {\\n        v = vertexObj[i];\\n        targetObj[i] = Array();\\n        targetObj[i][2] = v[2];\\n        targetObj[i][3] = v[3];\\n        targetObj[i][4] = parseFloat(v[4]) + amount;\\n    }\\n    return targetObj;\\n}\\n\\n\\nfunction renderVertex(vertexObj, canvasName)\\n{\\n    canvas = $('#' + canvasName)[0].getContext('2d');\\n    canvas.fillStyle = '#00f';            \\n    for (var i in vertexObj) {\\n        v = vertexObj[i];\\n        x = Math.round(v[2] / scale);\\n        y = Math.round(v[3] / scale);\\n        canvas.fillRect(x + horizontalShift, y + verticalShift, 1, 1);\\n    }                \\n}\\n\\nfunction renderPolygon(vertexObj, faceObj, canvasName)\\n{\\n    var canvas = $('#' + canvasName)[0].getContext('2d');\\n    \\n    var orderedFaces = Array();\\n    for (var i in faceObj) {\\n        f = faceObj[i];\\n        a = f[2];\\n        b = f[3];\\n        c = f[4];\\n        vertexA = vertexObj[a];\\n        vertexB = vertexObj[b];\\n        vertexC = vertexObj[c];\\n        z1 = vertexA[4];\\n        z2 = vertexB[4];\\n        z3 = vertexC[4];\\n        zSum = z1 + z2 + z3;        \\n        orderedItem = Array(i, zSum);        \\n        orderedFaces[i] = orderedItem;\\n    }\\n    \\n    orderedFaces.sort(function(a, b) {\\n        return a[1] - b[1]\\n    });\\n    \\n    for (var i in orderedFaces) {\\n        faceIndex = orderedFaces[i][0];\\n        f = faceObj[faceIndex];\\n        a = f[2];\\n        b = f[3];\\n        c = f[4];\\n        vertexA = vertexObj[a];\\n        vertexB = vertexObj[b];\\n        vertexC = vertexObj[c];\\n        x1 = vertexA[2] / scale;\\n        y1 = vertexA[3] / scale;\\n        x2 = vertexB[2] / scale;\\n        y2 = vertexB[3] / scale;\\n        x3 = vertexC[2] / scale;\\n        y3 = vertexC[3] / scale;\\n        canvas.beginPath();\\n        canvas.fillStyle = 'rgba(' + faceIndex + ', 45, 21, 255)';\\n        canvas.moveTo(x1 + horizontalShift, y1 + verticalShift);\\n        canvas.lineTo(x2 + horizontalShift, y2 + verticalShift);\\n        canvas.lineTo(x3 + horizontalShift, y3 + verticalShift);\\n        canvas.closePath();\\n        canvas.fill();\\n    }               \\n}\\n\\nfunction renderMesh(vertexObj, faceObj, canvasName)\\n{\\n    var canvas = $('#' + canvasName)[0].getContext('2d');\\n    canvas.fillStyle = '#0f0';            \\n    canvas.lineWidth = 1;\\n    for (var i in faceObj) {\\n        f = faceObj[i];\\n        a = f[2];\\n        b = f[3];\\n        c = f[4];\\n        ab = f[5];\\n        bc = f[6];\\n        ca = f[7];\\n        vertexA = vertexObj[a];\\n        vertexB = vertexObj[b];\\n        vertexC = vertexObj[c];\\n        x1 = vertexA[2] / scale;\\n        y1 = vertexA[3] / scale;\\n        x2 = vertexB[2] / scale;\\n        y2 = vertexB[3] / scale;\\n        x3 = vertexC[2] / scale;\\n        y3 = vertexC[3] / scale;\\n        if (ab) {\\n            canvas.beginPath();\\n            canvas.moveTo(x1 + horizontalShift, y1 + verticalShift);\\n            canvas.lineTo(x2 + horizontalShift, y2 + verticalShift);\\n            canvas.stroke();\\n        }\\n        if (bc) {\\n            canvas.beginPath();\\n            canvas.moveTo(x2 + horizontalShift, y2 + verticalShift);\\n            canvas.lineTo(x3 + horizontalShift, y3 + verticalShift);\\n            canvas.stroke();\\n        }\\n        if (ca) {\\n            canvas.beginPath();\\n            canvas.moveTo(x3 + horizontalShift, y3 + verticalShift);\\n            canvas.lineTo(x1 + horizontalShift, y1 + verticalShift);\\n            canvas.stroke();\\n        }\\n    }\\n\\n}\\n\\nfunction center3d(vertexObj)\\n{\\n    minX = 0;\\n    maxX = 0;\\n    minY = 0;\\n    maxY = 0;\\n    minZ = 0;\\n    maxZ = 0;\\n    for (var i in vertexObj) {\\n        v = vertexObj[i];\\n        x = v[2];\\n        y = v[3];\\n        z = v[4];\\n        minX = Math.min(minX, x);\\n        maxX = Math.max(maxX, x);\\n        minY = Math.min(minY, y);\\n        maxY = Math.max(maxY, y);\\n        minZ = Math.min(minZ, z);\\n        maxZ = Math.max(maxZ, z);\\n    }\\n    width = maxX-minX;\\n    height = maxY-minY;\\n    depth = maxZ-minZ;\\n    centerX = minX + (width / 2);\\n    centerY = minY + (height / 2);\\n    centerZ = minZ + (depth / 2);\\n    targetObj = shiftZ(shiftY(shiftX(vertexObj, -centerX), -centerY), -centerZ);\\n    return targetObj;\\n}\\n\\n// === main ===\\n\\nvar rotateAngleX = 0;\\nvar rotateAngleY = 0;\\nvar rotateAngleZ = 0;\\n\\nfunction deleteCanvas(canvasName)\\n{\\n  var canvas = $('#' + canvasName)[0].getContext('2d');\\n  canvas.fillStyle = '#fff';            \\n  canvas.fillRect(0, 0, 300, 300);\\n}\\n\\nfunction loop() {\\n  setTimeout(function ()\\n             {\\n               rotate = rotateZ(rotateX(rotateY(vertex, rotateAngleY), rotateAngleX), rotateAngleZ);\\n               \\n               deleteCanvas('screen_polygon');\\n               renderPolygon(rotate, face, 'screen_polygon');\\n               \\n               deleteCanvas('screen_mesh');\\n               renderMesh(rotate, face, 'screen_mesh');\\n               \\n               rotateAngleX += 5;\\n               if (rotateAngleX &gt;= sinMax) {\\n                 rotateAngleX -= sinMax;\\n               }\\n               rotateAngleY += 2;\\n               if (rotateAngleY &gt;= sinMax) {\\n                 rotateAngleY -= sinMax;\\n               }\\n               rotateAngleZ += 3;\\n               if (rotateAngleZ &gt;= sinMax) {\\n                 rotateAngleZ -= sinMax;\\n               }\\n               \\n               loop();\\n             }, 10);\\n}\\n\\nvertex = center3d(vertex);\\n\\nloop();            \\n\&quot;,\&quot;js_external\&quot;:\&quot;http://ktamas77.github.io/canvas_vektor/javascripts/torus.js\&quot;,\&quot;js_library\&quot;:\&quot;jquery\&quot;,\&quot;js_modernizr\&quot;:false,\&quot;js_pre_processor\&quot;:\&quot;none\&quot;,\&quot;parent\&quot;:0,\&quot;private\&quot;:false,\&quot;screenshot_uuid\&quot;:\&quot;00a83f06-8ef8-40b0-ab57-7b9679e13520\&quot;,\&quot;session_hash\&quot;:\&quot;74cdc8d714bf048ee628dfbd84e8ff65\&quot;,\&quot;slug_hash\&quot;:\&quot;EkrCl\&quot;,\&quot;team_id\&quot;:0,\&quot;title\&quot;:\&quot;Javascript/Canvas 3D Matrix Rotation\&quot;,\&quot;updated_at\&quot;:\&quot;2014-04-16T00:14:17Z\&quot;,\&quot;user_id\&quot;:16773}&quot;,&quot;__profiled&quot;:{&quot;id&quot;:16773,&quot;name&quot;:&quot;Tamas Kalman&quot;,&quot;username&quot;:&quot;ktamas77&quot;,&quot;type&quot;:&quot;user&quot;,&quot;is_team&quot;:false,&quot;base_url&quot;:&quot;/ktamas77&quot;},&quot;__profileURLS&quot;:[&quot;showcase&quot;,&quot;tag&quot;,&quot;followers&quot;,&quot;following&quot;,&quot;popular&quot;,&quot;popular-list&quot;,&quot;popular-list-asc&quot;,&quot;public&quot;,&quot;public-list&quot;,&quot;public-list-asc&quot;,&quot;public-titles&quot;,&quot;public-titles-asc&quot;,&quot;private&quot;,&quot;private-list&quot;,&quot;private-list-asc&quot;,&quot;private-titles&quot;,&quot;private-titles-asc&quot;,&quot;forked&quot;,&quot;forked-list&quot;,&quot;forked-list-asc&quot;,&quot;forked-titles&quot;,&quot;forked-titles-asc&quot;,&quot;loved&quot;,&quot;gamma&quot;,&quot;beta&quot;,&quot;alpha&quot;,&quot;members&quot;],&quot;__preprocessors&quot;:{&quot;html&quot;:{&quot;syntaxes&quot;:[&quot;none&quot;,&quot;html&quot;,&quot;markdown&quot;,&quot;slim&quot;,&quot;haml&quot;,&quot;jade&quot;],&quot;default&quot;:&quot;none&quot;,&quot;preprocessors&quot;:[&quot;markdown&quot;,&quot;slim&quot;,&quot;haml&quot;,&quot;jade&quot;],&quot;pretty_syntaxes&quot;:{&quot;none&quot;:&quot;None&quot;,&quot;haml&quot;:&quot;Haml&quot;,&quot;markdown&quot;:&quot;Markdown&quot;,&quot;slim&quot;:&quot;Slim&quot;,&quot;jade&quot;:&quot;Jade&quot;}},&quot;css&quot;:{&quot;syntaxes&quot;:[&quot;none&quot;,&quot;css&quot;,&quot;sass&quot;,&quot;scss&quot;,&quot;less&quot;,&quot;stylus&quot;,&quot;postcss&quot;],&quot;default&quot;:&quot;none&quot;,&quot;preprocessors&quot;:[&quot;sass&quot;,&quot;scss&quot;,&quot;less&quot;,&quot;stylus&quot;,&quot;postcss&quot;],&quot;pretty_syntaxes&quot;:{&quot;none&quot;:&quot;None&quot;,&quot;less&quot;:&quot;Less&quot;,&quot;scss&quot;:&quot;SCSS&quot;,&quot;sass&quot;:&quot;Sass&quot;,&quot;stylus&quot;:&quot;Stylus&quot;,&quot;postcss&quot;:&quot;PostCSS&quot;},&quot;prefixes&quot;:[&quot;autoprefixer&quot;,&quot;prefixfree&quot;,&quot;neither&quot;],&quot;default_prefix&quot;:&quot;neither&quot;,&quot;exclude_emmet_syntaxes&quot;:[&quot;none&quot;,&quot;postcss&quot;],&quot;bases&quot;:[&quot;normalize&quot;,&quot;reset&quot;,&quot;neither&quot;],&quot;default_base&quot;:&quot;neither&quot;},&quot;js&quot;:{&quot;syntaxes&quot;:[&quot;none&quot;,&quot;js&quot;,&quot;coffeescript&quot;,&quot;livescript&quot;,&quot;typescript&quot;,&quot;babel&quot;],&quot;default&quot;:&quot;none&quot;,&quot;preprocessors&quot;:[&quot;coffeescript&quot;,&quot;livescript&quot;,&quot;typescript&quot;,&quot;babel&quot;],&quot;pretty_syntaxes&quot;:{&quot;none&quot;:&quot;None&quot;,&quot;coffeescript&quot;:&quot;CoffeeScript&quot;,&quot;livescript&quot;:&quot;LiveScript&quot;,&quot;typescript&quot;:&quot;TypeScript&quot;,&quot;babel&quot;:&quot;Babel&quot;},&quot;words_we_cannot_instrument&quot;:[&quot;React&quot;,&quot;requestAnimationFrame&quot;,&quot;setInterval&quot;]}}}"/>
  <script src="http://assets.codepen.io/assets/common/everypage-57c2c371f6c64177eae29f2b1deea2da.js" type="text/javascript">
  </script>
  <script src="https://assets.codepen.io/assets/editor/pen/libs.js" type="text/javascript">
  </script>
  <script src="http://assets.codepen.io/assets/editor/pen/libs-d65f9f4012a1b4e0c8c7ec35b5535470.js" type="text/javascript">
  </script>
  <script src="http://assets.codepen.io/assets/editor/other/layout/layout-top-b9471b52f2a90748252ad49c59fa0acf.js" type="text/javascript">
  </script>
  <script src="http://assets.codepen.io/assets/editor/pen/index-107dc60a537e4374802c383a3aa93c53.js" type="text/javascript">
  </script>
 </body>
</html>