<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <title>
   Linux Tutorial: Java Servlets,JSP,Jakarta-Tomcat,JDBC,PostgreSQL,MySQL and Linux
  </title>
  <link href="yolinux.css" rel="stylesheet" type="text/css"/>
  <link href="http://www.yolinux.com/TUTORIALS/LinuxTutorialTomcat.html" rel="canonical"/>
  <meta content="JSP,JAVA Server Pages,JASPER,Servlets,JAVA,JDBC,PostgreSQL,Postgres,MySQL,Jakarta-Tomcat,linux,tips,howto,help,install,setup" name="keywords"/>
  <meta content="Using Java Servlets,JSP,Jakarta-Tomcat and a PostgreSQL or MySQL database with Linux. This tutorial covers installation, configuration and use." name="description"/>
  <meta content="Greg Ippolito" name="author"/>
 </head>
 <body bgcolor="#cccccc">
  <a name="TOP">
  </a>
  <h1>
   YoLinux Tutorial: Java Servlets, JSP, Jakarta-Tomcat, a Database (PostgreSQL or MySQL), Apache and Linux
  </h1>
  <div align="center">
   <iframe allowtransparency="true" class="adframe" frameborder="0" height="90" marginheight="0" marginwidth="0" scrolling="no" src="/ADVERTISING/iframe728x90px-ValueClick.html" style="border:none;width:720;height:90;padding:0;" width="720">
   </iframe>
  </div>
  <p>
   <img align="right" src="images/tux-Java-t2.gif"/>
   <!-- Original artwork by Paul Pettit of Venice CA (310)617-6250, Copyright YoLinux.com -->
   This
covers dynamic content using JAVA servlets, JAVA Server Pages (JSP and
JASPER page compiler), Jakarta-Tomcat, Apache and a Database
(PostgreSQL or MySQL) on Red Hat Linux 7.2. A configuration presented
here will allow one to make a web request to the
Apache web server
which will recognize it as request for a servlet to be handled by
Tomcat.
Tomcat, the Java Servlet and JSP engine, will execute the Java Servlet
which will use JDBC to access a database (PostgreSQL or MySQL). The
servlet will dynamically
generate a web page based on the results of the database query and will
provide these results to Apache which will deliver the web content back
to the requesting browser.
  </p>
  <p>
   Instead of using C/C++ or PERL for a CGI back-end 
web server process, one may use JAVA servlets processed by the Jakarta project's 
"Tomcat".
Apache will be configured to use the module
   <tt>
    mod_jk
   </tt>
   to communicate with 
Jakarta-Tomcat and it's JVM (JAVA virtual machine).
Servlet programs are written as JAVA classes which inherit from "HttpServlet" to 
provide much of their principal function.
  </p>
  <p>
   JAVA Server Pages (JSP) will utilize Tomcat's JASPER page compiler to generate 
dynamic web pages based on custom tags in one's HTML pages which are processed 
and served.
These pages use the tag "
   <tt>
    &lt;%    %&gt;
   </tt>
   " to denote JSP directives
to be dynamically processed.
  </p>
  <p>
   It has been my experience on this project that the configurations for the 
versions of software discussed here are very specific to the release.
In this case we will be using Tomcat 4.0.
Older releases of Tomcat (version 3) are configured differently.
These versions of Tomcat and Apache can also be installed on newer releases of 
the operating system.
  </p>
  <p>
   An example of a Java Servlet using JDBC to access a database 
(PostgreSQL or MySQL) is also covered.
  </p>
  <p>
  </p>
  <dl>
   <dd>
    Contents:
    <ul>
     <li>
      #
      <a href="#JAVAJDK">
       Java JDK 1.4
      </a>
      - Installation, configuration
     </li>
     <li>
      #
      <a href="#TOMCAT">
       Jakarta Project: Tomcat 4.0
      </a>
      - Installation, configuration
     </li>
     <li>
      #
      <a href="#SERVLET1">
       Simple Java Servlet Example
      </a>
     </li>
     <li>
      #
      <a href="#APACHETOMCAT">
       Apache 1.3 - Tomcat 4.0 Configuration
      </a>
      <br/>
      <small>
       (Note: Apache 2.0 re-architected the way it handles
modules. It will be incompible with the mod_jk module used in this
tutorial.)
      </small>
     </li>
     <li>
      #
      <a href="#DATABASE">
       Using a Servlet to connect and retrieve data from a database
      </a>
     </li>
     <li>
      #
      <a href="#LINKS">
       Links
      </a>
     </li>
     <li>
      #
      <a href="#BOOKS">
       Books
      </a>
     </li>
    </ul>
   </dd>
  </dl>
  Note: Make sure your computer has massive amounts of memory!!!!
  <a name="JAVAJDK">
  </a>
  <p>
  </p>
  <!-- Navigation Menu bar -->
  <div id="globalNavigation">
   <table bgcolor="#000000" width="100%">
    <tbody>
     <tr bgcolor="#000000">
      <td colspan="3">
       <form action="http://search.yolinux.com/cgi-bin/htsearch" method="post">
        <input name="method" type="hidden" value="all"/>
        <input name="format" type="hidden" value="long"/>
        <input name="sort" type="hidden" value="score"/>
        <input name="config" type="hidden" value="htdig-yolinux"/>
        <input name="restrict" type="hidden" value=""/>
        <input name="exclude" type="hidden" value=""/>
        <label for="search">
         search
        </label>
        <input id="search" maxlength="80" name="words" size="20" type="text"/>
        <input type="submit" value="Search"/>
       </form>
      </td>
      <td align="right">
       <font color="#f7bc33" size="-1">
        <b>
         |
         <a class="menubar" href="/" title="YoLinux Home Page">
          Home Page
         </a>
         |
         <a class="menubar" href="/TUTORIALS/" title="YoLinux Web Site Tutorials Index">
          Linux Tutorials
         </a>
         |
         <a class="menubar" href="/YoLinux-Terms.html" rel="nofollow" title="YoLinux.com terms of use">
          Terms
         </a>
         |
         <a class="menubar" href="/privacy.html" rel="nofollow" title="YoLinux.com privacy policy">
          Privacy Policy
         </a>
         |
         <a class="menubar" href="/YoLinux-Advertising.html" title="Advertising rates for YoLinux.com">
          Advertising
         </a>
         |
         <a class="menubar" href="/YoLinuxEmailForm.html" rel="nofollow" title="Send us an email">
          Contact
         </a>
         |
        </b>
       </font>
      </td>
     </tr>
    </tbody>
   </table>
  </div>
  <!-- End of Navigation menu bar -->
  <table bgcolor="#000000" border="1px" cellpadding="4" cellspacing="1" width="100%">
   <tbody>
    <tr bgcolor="#cccccc">
     <td bgcolor="#c0c0c0" valign="top" width="160">
      <p>
       <font size="-1">
        <b>
         Related YoLinux Tutorials:
        </b>
       </font>
      </p>
      <p>
       <font size="-1">
        
        <a href="LinuxTutorialJava.html">
         Java on Linux
        </a>
       </font>
      </p>
      <p>
       <font size="-1">
        
        <a href="Java-WAR-files.html">
         Java WAR files
        </a>
       </font>
      </p>
      <p>
       <font size="-1">
        
        <a href="LinuxTutorialWebSphere.html">
         IBM Websphere
        </a>
       </font>
      </p>
      <p>
       <font size="-1">
        
        <a href="/TUTORIALS/">
         YoLinux Tutorials Index
        </a>
       </font>
      </p>
      <p>
      </p>
      <hr/>
      <hr/>
      <p>
       <!-- BEGIN RICH-MEDIA CODE -->
       <script type="text/javascript">
        &lt;!--
google_ad_client = "pub-8567479315106986";
/* 160x600, YoLinux default */
google_ad_slot = "8947481941";
google_ad_width = 160;
google_ad_height = 600;
//--&gt;
       </script>
       <script src="http://pagead2.googlesyndication.com/pagead/show_ads.js" type="text/javascript">
       </script>
      </p>
      <hr/>
      <p>
       <!-- Ad links -->
       <script type="text/javascript">
        &lt;!-- 
google_ad_client = "pub-8567479315106986";
google_ad_width = 160;
google_ad_height = 90;
google_ad_format = "160x90_0ads_al_s";
google_ad_channel ="";
google_color_border = "FFFFFF";
google_color_bg = "C0C0C0";
google_color_link = "0000FF";
google_color_text = "000000";
google_color_url = "008000";
//--&gt;
       </script>
       <script src="http://pagead2.googlesyndication.com/pagead/show_ads.js" type="text/javascript">
       </script>
      </p>
      <!-- END CODE -->
      <hr/>
      <p>
       <a href="http://yolinux.tradepub.com/">
        Free Information Technology Magazines and Document Downloads
        <br/>
        <img alt="TradePub link image" border="0" src="images/TradePubMagazines.gif"/>
       </a>
      </p>
      <hr/>
      <p>
      </p>
      <!-- AddThis Button BEGIN -->
      <div align="left" id="bookmark">
       <!-- Google +1: Place this tag where you want the +1 button to render -->
       <div class="g-plusone" data-count="true" data-size="small">
       </div>
       <br/>
       <a href="http://www.addthis.com/bookmark.php?v=250&amp;pub=yolinux" onclick="return addthis_sendto()" onmouseout="addthis_close()" onmouseover="return addthis_open(this, '', '[URL]', '[TITLE]')" rel="nofollow">
        <img alt="Bookmark and Share" height="16" src="http://s7.addthis.com/static/btn/lg-bookmark-en.gif" style="border:0" width="125"/>
       </a>
       <script src="http://s7.addthis.com/js/250/addthis_widget.js?pub=yolinux" type="text/javascript">
       </script>
      </div>
      <!-- AddThis Button END -->
      <!-- Commission Junction START -->
      <!--
&lt;hr /&gt;
&lt;p&gt;
&lt;/p&gt;
&lt;div align="center"&gt;
&lt;script type="text/javascript" language="javascript" src="http://www.jdoqocy.com/placeholder-6006807?target=_blank&amp;mouseover=Y"&gt;&lt;/script&gt;
&lt;/div&gt;
-->
      <!-- Commission Junction END -->
      <p>
      </p>
      <hr/>
      <div align="center">
       <p>
        <font color="#505050">
         Advertisements
        </font>
       </p>
       <iframe allowtransparency="true" class="adframe" frameborder="0" height="600" marginheight="0" marginwidth="0" scrolling="no" src="/ADVERTISING/iframe160px-MediaDotNet.html" style="border:none;width:160;height:600;padding:0;" width="160">
       </iframe>
      </div>
      <!-- Commission Junction START -->
      <!--
&lt;p&gt;
&lt;/p&gt;
&lt;hr /&gt;
&lt;div align="center"&gt;
&lt;p&gt;
&lt;font color="#f0f0f0"&gt;Advertisement&lt;/font&gt;
&lt;/p&gt;
&lt;b&gt;Levono UK:&lt;/b&gt;
&lt;br /&gt;
&lt;script type="text/javascript" language="javascript" src="http://www.jdoqocy.com/placeholder-5880661?target=_blank&amp;mouseover=Y"&gt;&lt;/script&gt;
&lt;/div&gt;
-->
      <!-- Commission Junction END -->
      <p>
      </p>
      <hr/>
      <iframe border="0" frameborder="0" height="600" marginheight="0" marginwidth="0" scrolling="no" src="http://rcm.amazon.com/e/cm?t=yolinux-20&amp;o=1&amp;p=14&amp;l=bn1&amp;mode=pc-hardware&amp;browse=172455&amp;fc1=000000&amp;lt1=_blank&amp;lc1=3366FF&amp;bg1=C0C0C0&amp;f=ifr" style="border:none;" width="160">
      </iframe>
      <p>
      </p>
      <hr/>
      <p>
      </p>
      <script type="text/javascript">
       &lt;!-- 
var jobthread_widget_title = "Jobs";
var jobthread_widget_outer_style = "background-color:#dddddd;border:1px solid #999999;width:160px;";
var jobthread_widget_inner_style = "background-color:#ffffff;color:#666666;border:1px solid #999999;margin-left:10px;margin-right:10px;padding:10px 10px 2px 8px;font:11px Arial, Helvetica, Sans-serif;line-height:16px;";
var jobthread_widget_title_style = "color:#313131;font-weight:bold;";
var jobthread_widget_link_style = "color:#0464bb;font-size:11px;font-weight:normal;text-decoration:none;border:none;";
var jobthread_widget_top_style = "padding-top:8px;";
var jobthread_widget_bottom_style = "padding-bottom:4px;";
//--&gt;
      </script>
      <script src="http://edge.jobthread.com/widget/?id=c0e4b3&amp;num_jobs=10" type="text/javascript">
      </script>
      <p>
      </p>
      <hr/>
      <p>
      </p>
     </td>
     <td>
      <table border="0" cellpadding="2" cellspacing="0" width="100%">
       <tbody>
        <tr bgcolor="#ffcc33">
         <td>
          <b>
           <big>
            JAVA Installation/Configuration:
           </big>
          </b>
         </td>
        </tr>
       </tbody>
      </table>
      <p>
       In order to write and compile a JAVA programs, applets or servlets one must 
download the JAVA
Development Kit (JDK) which provides a compiler, class libraries and tools
to compile and run JAVA code. In this tutorial we will use the Sun JDK
but I'm sure any will do. See
       <a href="LinuxTutorialJava.html">
        YoLinux JAVA
       </a>
       for a list of available JDK's for Linux.
      </p>
      <p>
      </p>
      <h4>
       Download the Sun JDK:
      </h4>
      <ul>
       <li>
        <a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html">
         JAVA Standard Edition (SE)
        </a>
        - Main page download and info
       </li>
      </ul>
      Note: The Java Runtime Environment (JRE) will be adequate to configure
the server environment but the Software Development Kit (SDK) is
required if one wants to write and compile JAVA programs. The "Forte
SDK" is a full blown interactive GUI driven development environment.
The SDK is available in RPM and tar format.
      <p>
      </p>
      <ul>
       <li>
        Download
        <tt>
         j2sdk-1_4_0-linux-i386-rpm.bin
        </tt>
       </li>
       <li>
        <tt>
         chmod +x j2sdk-1_4_0-linux-i386-rpm.bin
        </tt>
       </li>
       <li>
        <tt>
         ./j2sdk-1_4_0-linux-i386-rpm.bin
        </tt>
       </li>
       <li>
        <tt>
         rpm -ivh j2sdk-1_4_0-fcs-linux-i386.rpm
        </tt>
       </li>
      </ul>
      <p>
       SDK installed in
       <tt>
        /usr/java/latest/
       </tt>
       .
      </p>
      <p>
      </p>
      <h4>
       Configuration:
      </h4>
      <dl>
       <dd>
        Set the environment variable
        <tt>
         PATH
        </tt>
        . Add statement to
        <tt>
         $HOME/.bash_profile
        </tt>
        or
        <tt>
         $HOME/.bashrc
        </tt>
        or shell script which controls the environment.
        <pre>
         PATH=/usr/java/j2sdk1.4.0/bin:$PATH
         <br/>
         export PATH
         <br/>
         export JAVA_HOME=/usr/java/j2sdk1.4.0
         <br/>
         export CLASSPATH=/usr/java/j2sdk1.4.0/lib/tools.jar:/usr/java/j2sdk1.4.0/jre/lib/rt.jar
         <br/>
        </pre>
        The shell script may be re-executed with the command:
        <tt>
         . .bashrc
        </tt>
        <p>
         <font color="#ff0000">
          [Potential Pitfall]
         </font>
         : Java SDK 1.4.0_03 now requires the current working directory to be listed to find files. Add reference to current directory "
         <tt>
          :./
         </tt>
         " to CLASSPATH.
        </p>
        <pre>
         export CLASSPATH=/usr/java/j2sdk1.4.0_03/lib/tools.jar:/usr/java/j2sdk1.4.0_03/jre/lib/rt.jar:./
         <br/>
        </pre>
       </dd>
      </dl>
      <p>
      </p>
      <h4>
       Test:
      </h4>
      <dl>
       <dd>
        Use the following test program:
        <tt>
         Test.java
        </tt>
        <dl>
         <dd>
          <small>
           <pre>
            public class Test
            <br/>
            {
            <br/>
            public static void main(String[] args)
            <br/>
            {
            <br/>
            System.out.println("Hello world");
            <br/>
            }
            <br/>
            }
            <br/>
           </pre>
          </small>
         </dd>
        </dl>
        Compile:
        <tt>
         javac Test.java
        </tt>
        <dl>
         <dd>
          (or
          <tt>
           /usr/java/j2sdk1.4.0/bin/javac Test.java
          </tt>
          )
          <br/>
          Note that the file name and the class name are the same. 
This became a requirement in JDK 1.4.
The result of the compile is the file:
          <tt>
           Test.class
          </tt>
         </dd>
        </dl>
        <p>
         Run:
        </p>
        <dl>
         <dd>
          <small>
           <pre>
            <b>
             [prompt]$
            </b>
            java Test
            <br/>
            Hello world
            <br/>
           </pre>
          </small>
          (or
          <tt>
           /usr/java/j2sdk1.4.0/bin/java Test
          </tt>
          )
         </dd>
        </dl>
       </dd>
      </dl>
      <p>
      </p>
      <h4>
       Links:
      </h4>
      <ul>
       <li>
        <a href="http://download.oracle.com/javase/7/docs/webnotes/install/index.html">
         Java SE installation instructions
        </a>
       </li>
       <li>
        <a href="http://download.oracle.com/javase/7/docs/">
         Java SE Documentation
        </a>
       </li>
      </ul>
      <a name="TOMCAT">
      </a>
      <p>
      </p>
      <hr/>
      <table border="0" cellpadding="2" cellspacing="0" width="100%">
       <tbody>
        <tr bgcolor="#ffcc33">
         <td>
          <b>
           <big>
            Jakarta Project - Tomcat:
           </big>
          </b>
         </td>
        </tr>
       </tbody>
      </table>
      <p>
       Tomcat is the JAVA "container" or processor for Java Servlets and Java Server 
Pages (JSP).
Note also that JAVA must be installed in order for Tomcat to operate.
(See previous section above)
This tutorial will focus on the use of Tomcat with Apache but it should be 
noted that the default Tomcat installation enables Tomcat to be a stand-alone
http web server and servlet container.
      </p>
      <p>
       <a href="http://tomcat.apache.org/">
        Apache Tomcat JAVA Servlet and JSP container home page
       </a>
      </p>
      <p>
       <b>
        Download:
       </b>
       <a href="http://archive.apache.org/dist/tomcat/">
        Tomcat 4.0
       </a>
       (Release: Catalina. Servlet 2.3 and JSP 1.2 specifications.)
       <small>
        <ul>
         <li>
          regexp-1.2-1.noarch.rpm
         </li>
         <li>
          servletapi4-4.0.3-1.noarch.rpm    - servlet.jar files
         </li>
         <li>
          xerces-j-1.4.4-1.noarch.rpm       - Xerces is an XML parser available from the Apache Software Foundation.
         </li>
         <li>
          tomcat4-webapps-4.0.3-1.noarch.rpm
         </li>
         <li>
          tomcat4-4.0.3-1.noarch.rpm
         </li>
        </ul>
       </small>
       <b>
        Install:
       </b>
       <tt>
        rpm -ivh regexp-1.2-1.noarch.rpm
servletapi4-4.0.3-1.noarch.rpm tomcat4-webapps-4.0.3-1.noarch.rpm
tomcat4-4.0.3-1.noarch.rpm xerces-j-1.4.4-2.noarch.rpm
       </tt>
      </p>
      <p>
       Symlinks generated from /usr/share/java/... to /var/tomcat4/
      </p>
      <p>
       <b>
        Documentation:
       </b>
      </p>
      <ul>
       <li>
        <a href="http://tomcat.apache.org/tomcat-4.0-doc/index.html">
         Tomcat 4.0 Documentation
        </a>
       </li>
       <li>
        Also look at local documentation:
        <tt>
         <a href="file:///usr/share/doc/tomcat4-4.0.3/">
          /usr/share/doc/tomcat4-4.0.3/
         </a>
        </tt>
        for release notes.
       </li>
       <li>
        Local app documentation files:
        <tt>
         <a href="file:///var/tomcat4/webapps/tomcat-docs/">
          /var/tomcat4/webapps/tomcat-docs/
         </a>
        </tt>
       </li>
      </ul>
      <p>
       <b>
        Config file:
       </b>
       <tt>
        /etc/tomcat4/conf/tomcat4.conf
       </tt>
      </p>
      <dl>
       <dd>
        Change the following reference to
        <tt>
         JAVA_HOME
        </tt>
        to:
        <dl>
         <dd>
          <pre>
           JAVA_HOME=/usr/java/j2sdk1.4.0
           <br/>
          </pre>
         </dd>
        </dl>
        Notes:
        <ul>
         <li>
          JAVA environment variable seem to be set here rather than in a start script.
         </li>
         <li>
          Environment variable options:
          <ul>
           <li>
            CATALINA_HOME: Tomcat installation directory
           </li>
           <li>
            CATALINA_OPTS example:
            <tt>
             export CATALINA_OPTS="-Djava.ext.dirs=/dummy_dir"
            </tt>
            <br/>
            Command line switches to pass to the Java Runtime Environment
           </li>
           <li>
            CLASSPATH: Optional - Runs without this but I used it when adding custom JAR files
            <small>
             (
             <tt>
              CLASSPATH=$CLASSPATH:/var/tomcat4/lib:/usr/share/pgsql:/usr/java/jre/lib:/usr/java/j2sdk1.4.0/lib:
             </tt>
             )
            </small>
           </li>
          </ul>
         </li>
         <li>
          Tomcat will execute as user
          <tt>
           tomcat4
          </tt>
         </li>
        </ul>
       </dd>
      </dl>
      <p>
       <b>
        Config files:
       </b>
      </p>
      <ul>
       <li>
        <tt>
         /var/tomcat4/conf/server.xml
        </tt>
        - Servlet container configuration: 
    Defines services offered, TCP port numbers for services, SSL, JDBC 
    configuration for MySQL (user/passwd), PostgreSQL, Oracle, ODBC, etc. 
    Later we will configure Apache to use one of these services.
       </li>
       <li>
        <tt>
         /var/tomcat4/conf/web.xml
        </tt>
        - Tomcat's built-in http server
        <b>
         global
        </b>
        config file: Defines servlets to be processed by Tomcat.
Some are predefined to perform pre-configured tasks like SSI, JSP, etc.
       </li>
       <li>
        <tt>
         /var/tomcat4/conf/catalina.policy
        </tt>
        - Security policy permissions for Tomcat
       </li>
       <li>
        <tt>
         /var/tomcat4/webapps/examples/WEB-INF/web.xml
        </tt>
        -
        <b>
         Application specific
        </b>
        config file.
       </li>
      </ul>
      Later we will use Tomcat with Apache's http server.
      <p>
       <b>
        Start:
       </b>
       <tt>
        service tomcat4 start
       </tt>
       (or:
       <tt>
        /etc/init.d/tomcat4 start
       </tt>
       )
      </p>
      <dl>
       <dd>
        Or execute init script directly:
        <tt>
         /etc/rc.d/init.d/tomcat4 start
        </tt>
        <br/>
        To add to init boot process:
        <tt>
         /sbin/chkconfig --add tomcat4
        </tt>
        <br/>
        Tomcat (and listener socket waiting for requests) will start before Apache 
so that Apache will have a socket to which it can connect and communicate.
Tomcat will also stop after Apache. Have patience as there is a lot of stuff 
going on. Use the command
        <tt>
         top
        </tt>
        to look at all the JAVA processes being 
initiated. When the top processes are no longer Java, then Tomcat is probably
ready.
        <p>
         <font color="#ff0000">
          [Potential Pitfall]
         </font>
         : 
Note that the command
         <tt>
          service tomcat4 stop
         </tt>
         was not always successful
in stopping all Java processes. Use the command
         <tt>
          ps -auwx | grep tomcat
         </tt>
         to measure success.
        </p>
       </dd>
      </dl>
      <p>
       <b>
        Test:
       </b>
      </p>
      <ul>
       <li>
        <tt>
         <a href="http://localhost:8180/" target="_blank">
          http://localhost:8180/
         </a>
        </tt>
       </li>
       <li>
        <tt>
         <a href="http://localhost:8180/examples/jsp/index.html" target="_blank">
          http://localhost:8180/examples/jsp/index.html
         </a>
        </tt>
        - JSP samples
       </li>
      </ul>
      <dl>
       <dd>
        Note:
        <ul>
         <li>
          Port 8180 is defined in
          <tt>
           /var/tomcat4/conf/server.xml
          </tt>
          .
          <br/>
          If changed you must restart Tomcat:
          <tt>
           service tomcat4 restart
          </tt>
          (or:
          <tt>
           /etc/init.d/tomcat4 restart
          </tt>
          )
          <br/>
          If using stand-alone and not with Apache, change this to port 80.
          <dl>
           <dd>
            <pre>
             &lt;Connector className="org.apache.catalina.connector.http.HttpConnector"
               port="
             <b>
              8180
             </b>
             " minProcessors="5" maxProcessors="75"
               enableLookups="true" redirectPort="8543"
               acceptCount="10" debug="0" connectionTimeout="60000"/&gt;
            </pre>
           </dd>
          </dl>
         </li>
         <li>
          Tomcat includes an http server which this test is using. 
    We will be integrating it into the Apache environment so that Apache
    will be the default server and Tomcat will be processing JSP's and Servlets.
         </li>
         <li>
          Tomcat Log files:
          <tt>
           /var/tomcat4/logs/
          </tt>
         </li>
         <li>
          Application directories:
          <ul>
           <li>
            Servlets and utility classes:
            <tt>
             /var/tomcat4/webapps/examples/WEB-INF/classes/
            </tt>
           </li>
           <li>
            JAR files and JDBC drivers:
            <tt>
             /var/tomcat4/webapps/examples/WEB-INF/lib/
            </tt>
           </li>
          </ul>
         </li>
        </ul>
       </dd>
      </dl>
      <b>
       Tomcat Manager:
      </b>
      <dl>
       <dd>
        Tomcat comes with a web management interface. (It's weak, so don't expect much.)
        <br/>
        The access is controlled by the file
        <tt>
         /var/tomcat4/conf/tomcat-users.xml
        </tt>
        Add a manager definition in
        <tt>
         tomcat-users.xml
        </tt>
        :
        <dl>
         <dd>
          <pre>
           &lt;tomcat-users&gt;
&lt;user name="tomcat" password="tomcat" roles="tomcat" /&gt;
&lt;user name="role1"  password="tomcat" roles="role1"  /&gt;
&lt;user name="both"   password="tomcat" roles="tomcat,role1" /&gt;
&lt;user name="admin1" password="
           <i>
            supersecret
           </i>
           " roles="standard,manager,tomcat,role1" /&gt;
           <b>
            <i>
             - Added this line with "manager role"
            </i>
           </b>
           &lt;user name="admin2" password="
           <i>
            supersecret2
           </i>
           " roles="admin,manager,provider" /&gt;
&lt;/tomcat-users&gt;
          </pre>
          Then restart:
          <tt>
           service tomcat4 restart
          </tt>
         </dd>
        </dl>
        <p>
         Use URL to list web applications:
         <a href="http://localhost:8180/manager/list" target="_blank">
          http://localhost:8180/manager/list
         </a>
        </p>
        <p>
         Note:
        </p>
        <ul>
         <li>
          Do NOT make a login error. It does not forgive easily. Access from a different host to recover.
         </li>
         <li>
          Do not access before configuring
          <tt>
           tomcat-users.xml
          </tt>
          because of this.
         </li>
         <li>
          Documentation:
          <a href="http://localhost:8180/tomcat-docs/manager-howto.html" target="_blank">
           http://localhost:8180/tomcat-docs/manager-howto.html
          </a>
          - [
          <a href="http://jakarta.apache.org/tomcat/tomcat-4.0-doc/manager-howto.html">
           Web
          </a>
          ]
         </li>
        </ul>
       </dd>
      </dl>
      <p>
       <b>
        Notes:
       </b>
      </p>
      <ul>
       <li>
        The rpm
        <tt>
         tomcat4-webapps-4.0.3-1.noarch.rpm
        </tt>
        will install many 
examples (JAVA source
        <tt>
         .java
        </tt>
        and compiled
        <tt>
         .class
        </tt>
        ) in
        <tt>
         /var/tomcat4/webapps/
        </tt>
        .
       </li>
       <li>
        If all you are running are static web pages, JSP and servlets then all
you may need is Tomcat as it is an http server. If you need the functionality 
of Apache to execute CGI, php and support for many of the Apache features
then read ahead to learn how to use Apache to invoke Tomcat to support JSP
and Java Servlets.
       </li>
      </ul>
      <a name="SERVLET1">
      </a>
      <p>
      </p>
      <hr/>
      <table border="0" cellpadding="2" cellspacing="0" width="100%">
       <tbody>
        <tr bgcolor="#ffcc33">
         <td>
          <b>
           <big>
            JAVA Servlet Example:
           </big>
          </b>
         </td>
        </tr>
       </tbody>
      </table>
      <p>
       File:
       <tt>
        MyHelloWorld.java
       </tt>
      </p>
      <dl>
       <dd>
        <table>
         <tbody>
          <tr bgcolor="#c0c0c0">
           <td>
            <small>
             <pre>
              import java.io.*;
              <br/>
              import java.text.*;
              <br/>
              import java.util.*;
              <br/>
              import javax.servlet.*;
              <br/>
              import javax.servlet.http.*;
              <br/>
              <br/>
              public class MyHelloWorld extends HttpServlet {
              <br/>
              <br/>
              public void doGet(HttpServletRequest request,
              <br/>
              HttpServletResponse response)
              <br/>
              throws IOException, ServletException
              <br/>
              {
              <br/>
              response.setContentType("text/html");
              <br/>
              PrintWriter out = response.getWriter();
              <br/>
              out.println("&lt;html&gt;");
              <br/>
              out.println("&lt;body&gt;");
              <br/>
              out.println("&lt;head&gt;");
              <br/>
              out.println("&lt;title&gt;Hello World!&lt;/title&gt;");
              <br/>
              out.println("&lt;/head&gt;");
              <br/>
              out.println("&lt;body&gt;");
              <br/>
              out.println("&lt;h1&gt;Hello World!&lt;/h1&gt;");
              <br/>
              out.println("&lt;/body&gt;");
              <br/>
              out.println("&lt;/html&gt;");
              <br/>
              }
              <br/>
              }
              <br/>
             </pre>
            </small>
           </td>
          </tr>
         </tbody>
        </table>
       </dd>
      </dl>
      <b>
       Create Source File:
      </b>
      <tt>
       /var/tomcat4/webapps/examples/WEB-INF/classes/MyHelloWorld.java
      </tt>
      <p>
       <b>
        Set
        <tt>
         CLASSPATH
        </tt>
        environment variable:
       </b>
       <small>
        <pre>
         export CLASSPATH=$CLASSPATH:/var/tomcat4/common/lib/servlet.jar
         <br/>
         <br/>
         <b>
          OR
         </b>
         export CLASSPATH=/usr/java/j2sdk1.4.0/lib/tools.jar:/usr/java/j2sdk1.4.0/jre/lib/rt.jar:/var/tomcat4/common/lib/servlet.jar
        </pre>
       </small>
       Note:
       <tt>
        /var/tomcat4/common/lib/servlet.jar
       </tt>
       is soft linked to
       <tt>
        /usr/share/java/servlet-2.3.jar
       </tt>
       .
      </p>
      <p>
       <b>
        Compile:
       </b>
      </p>
      <dl>
       <dd>
        <pre>
         <b>
          [prompt]$
         </b>
         cd /var/tomcat4/webapps/examples/WEB-INF/classes/
         <br/>
         <b>
          [prompt]$
         </b>
         javac MyHelloWorld.java
         <br/>
         <br/>
         (
         <b>
          OR
         </b>
         /usr/java/j2sdk1.4.0/bin/javac MyHelloWorld.java )
         <br/>
        </pre>
       </dd>
      </dl>
      This creates file:
      <tt>
       /var/tomcat4/webapps/examples/WEB-INF/classes/MyHelloWorld.class
      </tt>
      <p>
       Note:
      </p>
      <ul>
       <li>
        Java class
        <tt>
         com.mycompany.mypackage.MyServlet
        </tt>
        would be stored in
        <tt>
         /WEB-INF/classes/com/mycompany/mypackage/MyServlet.class
        </tt>
       </li>
       <li>
        Libraries (JAR files, JDBC drivers, etc) held in
        <tt>
         /WEB-INF/lib/
        </tt>
        if one follows standard configuration. (I took the easy path instead.)
       </li>
      </ul>
      <p>
       <b>
        Tomcat Test:
       </b>
       <a href="http://localhost:8180/examples/servlet/MyHelloWorld" target="_blank">
        http://localhost:8180/examples/servlet/MyHelloWorld
       </a>
       <br/>
       Don't expect a lot. It just generates a web page dynamically which 
states "Hello World".
      </p>
      <p>
       Note:
      </p>
      <ul>
       <li>
        The mapping of path
        <tt>
         /var/tomcat4/webapps/examples/WEB-INF/classes/
        </tt>
        to the URL
        <tt>
         /examples/servlet/
        </tt>
        is defined in
        <tt>
         /var/tomcat4/conf/web.xml
        </tt>
        . Look for the XML tag "
        <tt>
         &lt;servlet-mapping&gt;
        </tt>
        ".
       </li>
       <li>
        Many examples with source code are included with Tomcat.
    See:
        <a href="http://localhost:8180/examples/servlets/index.html" target="_blank">
         http://localhost:8180/examples/servlets/index.html
        </a>
       </li>
      </ul>
      <a name="APACHETOMCAT">
      </a>
      <p>
      </p>
      <hr/>
      <table border="0" cellpadding="2" cellspacing="0" width="100%">
       <tbody>
        <tr bgcolor="#ffcc33">
         <td>
          <b>
           <big>
            Apache - Tomcat Configuration:
           </big>
          </b>
         </td>
        </tr>
       </tbody>
      </table>
      <p>
       Apache is a fast and configurable web server. This section
covers using Apache as the primary web server but using Tomcat to 
process JSP and Servlets. 
This configuration uses the AJP (Apache JServ Protocol) connector element
(mod_jk) to perform this task. The Apache module
       <tt>
        mod_jk
       </tt>
       will send 
servlet requests to Tomcat using TCP/IP sockets for communications. 
Module
       <tt>
        mod_jk
       </tt>
       works with Tomcat versions 3.x and 4.x.
      </p>
      <p>
       There are numerous Apache connection modules:
      </p>
      <dl>
       <dd>
        <table border="1">
         <tbody>
          <tr bgcolor="#c0c0c0">
           <th>
            Connector Name
           </th>
           <th>
            Apache Module Name
           </th>
           <th>
            Connection Protocol
           </th>
           <th>
            Tomcat Version
           </th>
          </tr>
          <tr>
           <td>
            AJP
           </td>
           <td>
            mod_jk
           </td>
           <td>
            AJP1.2,AJP1.3
           </td>
           <td>
            3, 4
           </td>
          </tr>
          <tr>
           <td>
            Coyote JK2
           </td>
           <td>
            mod_jk
           </td>
           <td>
            AJP/JK1.3,AJP/JK1.4
           </td>
           <td>
            4.1
           </td>
          </tr>
          <tr>
           <td>
            WARP
           </td>
           <td>
            mod_webapp
           </td>
           <td>
            WARP
           </td>
           <td>
            4
           </td>
          </tr>
          <tr>
           <td>
            JSERV
           </td>
           <td>
            mod_jserv
           </td>
           <td>
            ??
           </td>
           <td>
            old
           </td>
          </tr>
         </tbody>
        </table>
       </dd>
      </dl>
      <p>
      </p>
      <hr/>
      <p>
      </p>
      <h4>
       AJP mod_jk Installation:
      </h4>
      <p>
      </p>
      <ul>
       <li>
        First check to see if Apache is compiled to support DSO:
        <tt>
         /usr/sbin/httpd -l
        </tt>
        <br/>
        If one of the lines contains the result
        <tt>
         mod_so.c
        </tt>
        then support 
    is available.
        <p>
        </p>
       </li>
       <li>
        Download mod_jk RPM:
        <small>
         http://jakarta.apache.org/builds/jakarta-tomcat-4.0/release/v4.0.3/rpms/mod_jk-1.3-1.0-1.4.0.2.i386.rpm
        </small>
        <dl>
         <dd>
          This module is dependent on the version of Apache one is using. For
this tutorial I am using Apache 1.3.
         </dd>
        </dl>
        <p>
        </p>
       </li>
       <li>
        Download EAPI version of mod_jk:
        <small>
         <tt>
          http://jakarta.apache.org/builds/jakarta-tomcat/release/v3.3/bin/linux/i386/mod_jk-3.3-ap13-eapi.so
         </tt>
        </small>
        <dl>
         <dd>
          The default Red Hat compiled Apache uses an API called EAPI which is 
incompatible with the version of mod_jk.so included in the RPM. 
Download and rename as
          <tt>
           /usr/lib/apache/mod_jk.so
          </tt>
          .
This will overwrite the version installed by the RPM.
The RPM is still required for the configuration files.
          <p>
          </p>
         </dd>
        </dl>
       </li>
       <li>
        Or build
        <tt>
         mod_jk
        </tt>
        from source:
        <small>
         <tt>
          http://jakarta.apache.org/builds/jakarta-tomcat-4.0/release/v4.0.3/src/jakarta-tomcat-connectors-4.0.2-01-src.tar.gz
         </tt>
        </small>
        <ul>
         <li>
          Unpack:
          <tt>
           tar -xzf jakarta-tomcat-connectors-4.0.2-01-src.tar.gz
          </tt>
         </li>
         <li>
          <tt>
           cd jakarta-tomcat-connectors-4.0.2-01-src/jk/native/apache-1.3/
          </tt>
         </li>
         <li>
          Edit script:
          <tt>
           build-unix.sh
          </tt>
          <br/>
          Change lines:
          <ul>
           <li>
            JAVA_HOME=/usr/java/j2sdk1.4.0
           </li>
           <li>
            APACHE_HOME=/etc/httpd
           </li>
           <li>
            APXS=/usr/sbin/apxs
           </li>
           <li>
            cp mod_jk.so /usr/lib/apache
           </li>
          </ul>
         </li>
         <li>
          Compile:
          <tt>
           . build-unix.sh
          </tt>
         </li>
        </ul>
       </li>
      </ul>
      <p>
      </p>
      <h4>
       Configuration File Modifications:
      </h4>
      The configuration file changes discussed below relate to those released 
    with the RPM mod_jk-1.3-1.0-1.4.0.2.i386.rpm.
      <ul>
       <li>
        Define TCP/IP ports will be used for communications between Apache and Tomcat.
        <ul>
         <li>
          See Tomcat-Apache config file:
          <tt>
           /etc/httpd/conf/workers.properties
          </tt>
          <br/>
          (A separate host may also be specified.)
    (If you are defining multiple JVM's/servlet processors, used in virtual 
     hosting, each must be assigned a different port.)
         </li>
         <li>
          Tomcat services are defined in
          <tt>
           /var/tomcat4/conf/server.xml
          </tt>
          (See "
          <tt>
           Connector
          </tt>
          " definition) 
    and in the Apache include file
          <tt>
           mod_jk.conf
          </tt>
          .
    Resource parameters may also be set to control the maximum number of 
    threads which can be spawned.
         </li>
        </ul>
       </li>
       <li>
        Apache configuration to define:
        <ul>
         <li>
          module to load for communication with Tomcat. (Add to
          <tt>
           httpd.conf
          </tt>
          )
         </li>
         <li>
          path (URL of servlets) and/or file types (JSP file types)
        which are destined for Tomcat processing. 
        All requests in the given path (servlet location) or request of a given 
        file type (i.e. *.jsp) will then be processed by Tomcat. 
        (See
          <tt>
           JkMount
          </tt>
          directive in Apache include file
          <tt>
           mod_jk.conf
          </tt>
          )
        Everything else is served by Apache.
         </li>
        </ul>
       </li>
      </ul>
      <p>
       Modify:
       <tt>
        /etc/httpd/conf/
        <b>
         workers.properties
        </b>
       </tt>
      </p>
      <dl>
       <dd>
        <table>
         <tbody>
          <tr bgcolor="#c0c0c0">
           <td>
            <small>
             <pre>
              workers.tomcat_home=/var/tomcat4
              <b>
               <i>
                - Changed. Default was /var/tomcat3
               </i>
              </b>
              workers.java_home=/usr/java/j2sdk1.4.0
              <b>
               <i>
                - Changed to reflect location of JDK
               </i>
              </b>
              ps=/
worker.list=ajp12, ajp13

#
              <b>
               Define a worker named ajp12
              </b>
              and of type ajp12
              <br/>
              # Note that the name and the type do not have to match.
              <br/>
              #
              <br/>
              worker.ajp12.port=8007
              <br/>
              worker.ajp12.host=localhost
              <br/>
              worker.ajp12.type=ajp12
              <br/>
              worker.ajp12.lbfactor=1
              <br/>
              <br/>
              #
              <b>
               Define a worker named Ajp13
              </b>
              #
worker.ajp13.port=8009
worker.ajp13.host=localhost
worker.ajp13.type=ajp13
worker.ajp13.lbfactor=1

worker.loadbalancer.type=lb
worker.loadbalancer.balanced_workers=ajp12, ajp13

# Defining a worker named inprocess and of type jni
worker.inprocess.type=jni

# Additional class path components.
worker.inprocess.class_path=$(workers.tomcat_home)$(ps)server$(ps)lib$(ps)tomcat-ajp.jar
              <b>
               <i>
                - Changed this line to match location of library.
               </i>
              </b>
              worker.inprocess.cmd_line=start
worker.inprocess.class_path=$(workers.java_home)$(ps)lib$(ps)tools.jar
              <b>
               <i>
                - This line based on something I read. (Also modified to match installation)
               </i>
              </b>
              # Unix - Sun VM
worker.inprocess.jvm_lib=$(workers.java_home)$(ps)jre$(ps)lib$(ps)i386$(ps)server$(ps)libjvm.so
              <b>
               <i>
                - Changed this line to match location of library.
               </i>
              </b>
              # Setting the place for the stdout and stderr of tomcat
worker.inprocess.stdout=$(workers.tomcat_home)$(ps)logs$(ps)inprocess.stdout
worker.inprocess.stderr=$(workers.tomcat_home)$(ps)logs$(ps)inprocess.stderr
             </pre>
            </small>
           </td>
          </tr>
         </tbody>
        </table>
        The effect of this configuration is to define socket listeners and 
communication protocols between Apache and Tomcat.
       </dd>
      </dl>
      <p>
       Add to:
       <tt>
        /var/tomcat4/conf/server.xml
       </tt>
      </p>
      <dl>
       <dd>
        Within the XML tags:
        <small>
         <pre>
          &lt;Service name="Tomcat-Standalone"&gt;
          <br/>
          ...
          <br/>
          &lt;/Service&gt;
          <br/>
         </pre>
        </small>
        Define listener:
        <table>
         <tbody>
          <tr bgcolor="#c0c0c0">
           <td>
            <small>
             <pre>
              &lt;Connector className="org.apache.ajp.tomcat4.Ajp13Connector"
              <br/>
              port="8007" minProcessors="5" maxProcessors="75"
              <br/>
              acceptCount="10" debug="0"/&gt;
              <br/>
              <br/>
              &lt;Connector className="org.apache.ajp.tomcat4.Ajp13Connector"
              <br/>
              port="8009" minProcessors="5" maxProcessors="75"
              <br/>
              acceptCount="10" debug="0"/&gt;
              <br/>
             </pre>
            </small>
           </td>
          </tr>
         </tbody>
        </table>
        Add definitions for connectors on ports 8007 and 8009 for workers.
        <br/>
        For some reason the listener definition has no effect within the "Service"
tag identified as "Tomcat-Apache". (I don't know why)
       </dd>
      </dl>
      <p>
       Add to:
       <tt>
        /etc/httpd/conf/httpd.conf
       </tt>
      </p>
      <dl>
       <dd>
        <table>
         <tbody>
          <tr bgcolor="#c0c0c0">
           <td>
            <small>
             <pre>
              LoadModule jk_module /usr/lib/apache/mod_jk.so
              <b>
               OR
              </b>
              LoadModule jk_module         modules/mod_jk.so
...
...
AddModule mod_jk.c
...
...
Include /etc/httpd/conf/mod_jk.conf
             </pre>
            </small>
           </td>
          </tr>
         </tbody>
        </table>
        Notes:
        <ul>
         <li>
          I added the "
          <tt>
           LoadModule
          </tt>
          " statement after the list of all the other
"
          <tt>
           LoadModule
          </tt>
          " statements.
         </li>
         <li>
          The statement "
          <tt>
           AddModule mod_jk.c
          </tt>
          " is placed after the line
"
          <tt>
           ClearModuleList
          </tt>
          " and after all the "AddModule" declarations. Why?
I don't know why position is important, but when listed as the first 
"AddModule" entry after "
          <tt>
           ClearModuleList
          </tt>
          ", it would not work.
         </li>
         <li>
          The statement
          <tt>
           modules/mod_jk.so
          </tt>
          is a relative reference from
          <tt>
           /etc/httpd/
          </tt>
          . The directory
          <tt>
           /etc/httpd/modules/
          </tt>
          is soft linked
to
          <tt>
           /usr/lib/apache/
          </tt>
         </li>
        </ul>
       </dd>
      </dl>
      <p>
       File:
       <tt>
        /etc/httpd/conf/mod_jk.conf
       </tt>
       <b>
        <i>
         (Change references of "tomcat" to "tomcat4" throughout the file, otherwise the default file is ok.)
        </i>
       </b>
      </p>
      <dl>
       <dd>
        <table>
         <tbody>
          <tr bgcolor="#c0c0c0">
           <td>
            <small>
             <pre>
              &lt;IfModule mod_jk.c&gt;
              <br/>
              <br/>
              JkWorkersFile /etc/httpd/conf/workers.properties
              <br/>
              JkLogFile /var/log/httpd/mod_jk.log
              <br/>
              JkLogLevel info
              <br/>
              <br/>
              # Root context mounts for Tomcat
              <br/>
              # Format: JkMount URL_PREFIX
              <b>
               WORKER_NAME
              </b>
              JkMount /*.jsp
              <b>
               ajp13
              </b>
              JkMount /servlet/* ajp13

# The following line makes apache aware of the location of the /examples contextAlias /examples "/var/
              <b>
               tomcat4
              </b>
              /webapps/examples"
              <br/>
              &lt;Directory "/var/
              <b>
               tomcat4
              </b>
              /webapps/examples"&gt;
              <br/>
              Options Indexes FollowSymLinks
              <br/>
              &lt;/Directory&gt;
              <br/>
              <br/>
              # The following line mounts all JSP files and the /servlet/ uri to tomcat
              <br/>
              JkMount /examples/servlet/* ajp13
              <br/>
              JkMount /examples/*.jsp ajp13
              <br/>
              <br/>
              # The following line prohibits users from directly access WEB-INF
              <br/>
              &lt;Location "/examples/WEB-INF/"&gt;
              <br/>
              AllowOverride None
              <br/>
              deny from all
              <br/>
              &lt;/Location&gt;
              <br/>
              <br/>
              ...
              <br/>
              <br/>
              &lt;/IfModule&gt;
              <br/>
             </pre>
            </small>
           </td>
          </tr>
         </tbody>
        </table>
       </dd>
      </dl>
      <p>
       Virtual host example: (Just an FYI. I never used virtual hosting but wanted to let everyone know it is available.)
      </p>
      <dl>
       <dd>
        Configure a new JVM definition to handle requests separately.
        <small>
         <pre>
          # First Virtual Host.
          <b>
           <i>
            - Virtual Host example not in default file
           </i>
          </b>
          &lt;VirtualHost 10.0.0.1:80&gt;
DocumentRoot /web/host1
ServerName host1.yolinux.com
&lt;IfModule mod_jk.c&gt;
JkMount /*.jsp ajp13
JkMount /servlet/* ajp13
&lt;Location "/examples/WEB-INF/"&gt;
    AllowOverride None
    deny from all
&lt;/Location&gt;
&lt;/IfModule&gt;
&lt;/VirtualHost&gt;
         </pre>
        </small>
        Ajpv13 is the protocol used when Apache communicates with Tomcat.
This file establishes the sockets and enables this communication process.
        <p>
         If using a virtual host configuration then file
         <tt>
          /etc/httpd/conf/workers.properties
         </tt>
         must have the following entries added:
         <small>
          <pre>
           ...
           <br/>
           &lt;!-- Request Interceptor for jumpers --&gt;
           <br/>
           &lt;RequestInterceptor
           <br/>
           className="com.yolinux.servlet.jumpersInterceptor" /&gt;
           <br/>
           ...
           <br/>
           &lt;Host name="host1.yolinux.com" &gt;
           <br/>
           &lt;Context path=""
           <br/>
           docBase="/web/host1/html" /&gt;
           <br/>
           &lt;/Host&gt;
           <br/>
          </pre>
         </small>
        </p>
       </dd>
      </dl>
      <p>
      </p>
      <h4>
       Run:
      </h4>
      <ul>
       <li>
        Start Tomcat first:
        <tt>
         service tomcat4 start
        </tt>
       </li>
       <li>
        Start Apache:
        <tt>
         service httpd start
        </tt>
        <br/>
        After Apache has started, one may perform a syntax check of the Apache
    configuration files with the following command:
        <br/>
        <tt>
         <b>
          [root prompt]#
         </b>
         /usr/sbin/apachectl configtest
        </tt>
        <br/>
        If sucessful it should return the statement:
        <tt>
         Syntax OK
        </tt>
        <br/>
        <font color="#ff0000">
         [Potential Pitfall]
        </font>
        : If you get the following error:
        <br/>
        <tt>
         [error] Cannot remove module mod_jk.c: not found in module list
        </tt>
        <br/>
        It is most likely that the placement of the aditional lines in
        <tt>
         /etc/httpd/conf/httpd.conf
        </tt>
        is incorrect. The additional lines must 
    be placed accoring to above directions.
       </li>
       <li>
        Test with the URL:
        <ul>
         <li>
          Test Tomcat servlet:
          <a href="http://localhost/examples/servlet/MyHelloWorld" target="_blank">
           http://localhost/examples/servlet/MyHelloWorld
          </a>
         </li>
         <li>
          Test static page with Apache:
          <a href="http://localhost/" target="_blank">
           http://localhost/
          </a>
         </li>
        </ul>
        Note that we are no longer referencing port 8180 but are referencing a 
    directory which Apache defers to Tomcat for processing but Apache handles
    the request from the browser.
       </li>
      </ul>
      <p>
      </p>
      <h4>
       Log Files:
      </h4>
      <ul>
       <li>
        Apache:
        <ul>
         <li>
          <tt>
           /var/log/httpd/access_log
          </tt>
         </li>
         <li>
          <tt>
           /var/log/httpd/error_log
          </tt>
         </li>
        </ul>
       </li>
       <li>
        Tomcat:
        <tt>
         /var/tomcat4/logs/...
        </tt>
       </li>
       <li>
        Apache-Tomcat module
        <tt>
         <b>
          mod_jk
         </b>
        </tt>
        :
        <tt>
         /var/log/httpd/mod_jk.log
        </tt>
       </li>
      </ul>
      <p>
      </p>
      <h4>
       Links:
      </h4>
      <ul>
       <li>
        The AJP Connector and Tomcat 4.0:
        <a href="http://localhost:8180/tomcat-docs/config/ajp.html" target="_blank">
         http://localhost:8180/tomcat-docs/config/ajp.html
        </a>
        - [
        <a href="http://tomcat.apache.org/tomcat-4.0-doc/config/ajp.html">
         Web
        </a>
        ]
       </li>
       <li>
        <a href="http://tomcat.apache.org/tomcat-3.2-doc/mod_jk-howto.html">
         Working with mod_jk
        </a>
        - Tomcat 3.2 - By Gal Shachor
       </li>
      </ul>
      <a name="DATABASE">
      </a>
      <p>
      </p>
      <hr/>
      <table border="0" cellpadding="2" cellspacing="0" width="100%">
       <tbody>
        <tr bgcolor="#ffcc33">
         <td>
          <b>
           <big>
            The Database:
           </big>
          </b>
         </td>
        </tr>
       </tbody>
      </table>
      <p>
       We will cover connectivity to two databases:
      </p>
      <ol>
       <li>
        <a href="#POSTGRESQL">
         PostgreSQL
        </a>
       </li>
       <li>
        <a href="#MYSQL">
         MySQL
        </a>
       </li>
      </ol>
      Note: If connecting to Oracle, use the JDBC driver:
      <tt>
       oracle.jdbc.driver.OracleDriver
      </tt>
      <a name="POSTGRESQL">
      </a>
      <p>
      </p>
      <hr/>
      <p>
      </p>
      <h3>
       1) PostgreSQL:
      </h3>
      <p>
       Install and configure a database. See:
       <a href="LinuxTutorialPostgreSQL.html">
        YoLinux Tutorial: PostgreSQL and Linux
       </a>
      </p>
      <p>
       <b>
        JDBC and PostgreSQL JAR files:
       </b>
       The "
       <tt>
        CLASSPATH
       </tt>
       " variable can set the Java runtime environment
so that it will find the appropriate Java libraries (JAR files).
Environment variables for Tomcat can be set in
       <tt>
        /etc/tomcat4/conf/tomcat4.conf
       </tt>
       . One may also set the CLASSPATH variable
to include PostgreSQL JDBC JAR files.
I did not set the CLASSPATH environment variable in the configuration file
but instead employed the default path by performing the following steps:
      </p>
      <p>
       List of PostgreSQL JDBC drivers:
      </p>
      <dl>
       <dd>
        <small>
         <pre>
          <b>
           [prompt]#
          </b>
          rpm -ql postgresql-jdbc-7.1.3-2
          <br/>
          /usr/share/pgsql/jdbc7.0-1.1.jar
          <br/>
          /usr/share/pgsql/jdbc7.1-1.2.jar
          <br/>
         </pre>
        </small>
       </dd>
      </dl>
      <p>
       Place JDBC JAR libraries in path where they can be found:
      </p>
      <dl>
       <dd>
        <tt>
         cp /usr/share/pgsql/jdbc7.1-1.2.jar /var/tomcat4/lib
        </tt>
       </dd>
      </dl>
      <p>
      </p>
      <h3>
       JAVA Servlet run under Tomcat, accessing PostgreSQL using JDBC:
      </h3>
      <b>
       Java Servlet source file:
      </b>
      <dl>
       <dd>
        <table>
         <tbody>
          <tr bgcolor="#c0c0c0">
           <td>
            <pre>
             // File: ShowBedrock.java

/* A servlet to display the contents of the PostgreSQL Bedrock database */

import java.io.*;
import java.sql.*;
import java.text.*;
import java.util.*;
import javax.servlet.*;
import javax.servlet.http.*;

public class ShowBedrock extends HttpServlet 
{
    public String getServletInfo()
    {
       return "Servlet connects to PostgreSQL database and displays result of a SELECT";
    }

    private Connection dbcon;  // Connection for scope of ShowBedrock

    // "init" sets up a database connection
    public void init(ServletConfig config) throws ServletException
    {
        String loginUser = "postgres";
        String loginPasswd = "supersecret";
        String loginUrl = "jdbc:
             <b>
              postgresql
             </b>
             ://localhost/bedrock";

        // Load the PostgreSQL driver
        try 
        {
              Class.forName("
             <b>
              org.postgresql.Driver
             </b>
             ");
              dbcon = DriverManager.getConnection(loginUrl, loginUser, loginPasswd);
        }
        catch (ClassNotFoundException ex)
        {
               System.err.println("ClassNotFoundException: " + ex.getMessage());
               throw new ServletException("Class not found Error");
        }
        catch (SQLException ex)
        {
               System.err.println("SQLException: " + ex.getMessage());
        }
    }

    // Use http GET

    public void doGet(HttpServletRequest request, HttpServletResponse response)
        throws IOException, ServletException
    {
        response.setContentType("text/html");    // Response mime type

        // Output stream to STDOUT
        PrintWriter out = response.getWriter();

        out.println("&lt;HTML&gt;&lt;Head&gt;&lt;Title&gt;Bedrock&lt;/Title&gt;&lt;/Head&gt;");
        out.println("&lt;Body&gt;&lt;H1&gt;Bedrock&lt;/H1&gt;");
	    
        try
        {
                // Declare our statement
                Statement statement = dbcon.createStatement();

                String query = "SELECT name, dept, ";
                query +=       "       jobtitle ";
                query +=       "FROM   employee ";

                // Perform the query
                ResultSet rs = statement.executeQuery(query);

                out.println("&lt;table border&gt;");

                // Iterate through each row of rs
                while (rs.next())
                {
                   String m_name = rs.getString("name");
                   String m_dept = rs.getString("dept");
                   String m_jobtitle = rs.getString("jobtitle");
                   out.println("&lt;tr&gt;" + 
                               "&lt;td&gt;" + m_name + "&lt;/td&gt;" +
                               "&lt;td&gt;" + m_dept + "&lt;/td&gt;" +
                               "&lt;td&gt;" + m_jobtitle + "&lt;/td&gt;" +
                               "&lt;/tr&gt;");
                }

                out.println("&lt;/table&gt;&lt;/body&gt;&lt;/html&gt;");
                statement.close();
        }
        catch(Exception ex)
        {
                out.println("&lt;HTML&gt;" +
                            "&lt;Head&gt;&lt;Title&gt;" +
                            "Bedrock: Error" +
                            "&lt;/Title&gt;&lt;/Head&gt;\n&lt;Body&gt;" +
                            "&lt;P&gt;SQL error in doGet: " +
                            ex.getMessage() + "&lt;/P&gt;&lt;/Body&gt;&lt;/HTML&gt;");
                return;
        }
        out.close();
    }
}
            </pre>
           </td>
          </tr>
         </tbody>
        </table>
       </dd>
      </dl>
      <p>
       <b>
        Notes:
       </b>
      </p>
      <ul>
       <li>
        <tt>
         String loginUrl = "jdbc:postgresql://localhost/bedrock";
        </tt>
        <br/>
        The format for this is
        <tt>
         jdbc:postgresql:host-name-of-server:port/database-name
        </tt>
        <br/>
        Examples:
        <ul>
         <li>
          jdbc:postgresql:bedrock  - bedrock is the PostgreSQL database name. See PostgreSQL tutorial.
         </li>
         <li>
          jdbc:postgresql://localhost/bedrock
         </li>
         <li>
          jdbc:postgresql://localhost:5432/bedrock - Default PostgreSQL standard port number is 5432
         </li>
        </ul>
       </li>
       <li>
        <tt>
         public void doGet(...
        </tt>
        <br/>
        Using http GET request. For http POST operations use
        <tt>
         doPost
        </tt>
       </li>
       <li>
        <tt>
         String m_name = rs.getString("name");
        </tt>
        <br/>
        One may also use database field names or field numbers. i.e.
        <br/>
        <tt>
         String m_name = rs.getString(1);
        </tt>
        <br/>
        <tt>
         String m_dept = rs.getString(2);
        </tt>
       </li>
      </ul>
      <p>
       <b>
        Set
        <tt>
         CLASSPATH
        </tt>
        environment variable:
       </b>
       <small>
        <pre>
         export CLASSPATH=$CLASSPATH:/var/tomcat4/lib/jdbc7.1-1.2.jar
         <br/>
         <br/>
         <b>
          OR
         </b>
         export CLASSPATH=/usr/java/j2sdk1.4.0/lib/tools.jar:/usr/java/j2sdk1.4.0/jre/lib/rt.jar:/var/tomcat4/common/lib/servlet.jar:/var/tomcat4/lib/jdbc7.1-1.2.jar
        </pre>
       </small>
      </p>
      <p>
       <b>
        Compile:
       </b>
      </p>
      <dl>
       <dd>
        <small>
         <pre>
          <b>
           [prompt]#
          </b>
          cd /var/tomcat4/webapps/examples/WEB-INF/classes
          <br/>
          <b>
           [prompt]#
          </b>
          javac ShowBedrock.java
          <br/>
          <br/>
          (
          <b>
           OR
          </b>
          /usr/java/j2sdk1.4.0/bin/javac ShowBedrock.java )
          <br/>
         </pre>
        </small>
       </dd>
      </dl>
      <b>
       PostgreSQL Configuration:
      </b>
      <tt>
       /var/lib/pgsql/data/postgresql.conf
      </tt>
      <dl>
       <dd>
        Set:
        <tt>
         tcpip_socket = true
        </tt>
        <br/>
        This allows JDBC to connect to PostgreSQL.
       </dd>
      </dl>
      <p>
       <b>
        Test:
       </b>
      </p>
      <ul>
       <li>
        Tomcat only:
        <a href="http://localhost:8180/examples/servlet/ShowBedrock" target="_blank">
         http://localhost:8180/examples/servlet/ShowBedrock
        </a>
       </li>
       <li>
        Apache Request:
        <a href="http://localhost/examples/servlet/ShowBedrock" target="_blank">
         http://localhost/examples/servlet/ShowBedrock
        </a>
       </li>
      </ul>
      <p>
       <b>
        Results:
       </b>
      </p>
      <dl>
       <dd>
        <h1>
         Bedrock
        </h1>
        <table border="1">
         <tbody>
          <tr>
           <td>
            Fred Flinstone
           </td>
           <td>
            Quarry Worker
           </td>
           <td>
            Rock Digger
           </td>
          </tr>
          <tr>
           <td>
            Wilma Flinstone
           </td>
           <td>
            Finance
           </td>
           <td>
            Analyst
           </td>
          </tr>
          <tr>
           <td>
            Barney Rubble
           </td>
           <td>
            Sales
           </td>
           <td>
            Neighbor
           </td>
          </tr>
          <tr>
           <td>
            Betty Rubble
           </td>
           <td>
            IT
           </td>
           <td>
            Neighbor
           </td>
          </tr>
         </tbody>
        </table>
       </dd>
      </dl>
      <p>
      </p>
      <hr/>
      <p>
      </p>
      <h4>
       JDBC/PostgreSQL Links:
      </h4>
      <ul>
       <li>
        <a href="http://wiki.postgresql.org/wiki/JDBC">
         PostgreSQL.org: JDBC
        </a>
       </li>
      </ul>
      <a name="MYSQL">
      </a>
      <p>
      </p>
      <hr/>
      <p>
      </p>
      <h3>
       2) MySQL:
      </h3>
      <p>
       Install and configure a database:
       <a href="LinuxTutorialMySQL.html">
        YoLinux Tutorial: MySQL and Linux
       </a>
      </p>
      <p>
       <b>
        Download JDBC MM.MySQL JAR file:
       </b>
      </p>
      <ul>
       <li>
        <a href="http://sourceforge.net/projects/mmmysql/">
         MM.MySQL Downloads
        </a>
       </li>
       <li>
        sourceforge.net: mm.mysql-2.0.13-you-must-unjar-me.jar - Actual JAR file I used
       </li>
      </ul>
      <p>
       Un-JAR and place MM.MySQL JDBC JAR libraries in path where they can be found:
      </p>
      <dl>
       <dd>
        <small>
         <pre>
          <b>
           [prompt]#
          </b>
          /usr/java/j2sdk1.4.0/bin/jar xf mm.mysql-2.0.13-you-must-unjar-me.jar
          <br/>
          <b>
           OR
          </b>
          if your paths are set properly:
          <br/>
          <b>
           [prompt]#
          </b>
          jar xf mm.mysql-2.0.13-you-must-unjar-me.jar
          <br/>
          <br/>
          <b>
           [prompt]#
          </b>
          cd mm.mysql-2.0.13/
          <br/>
          <b>
           [prompt]#
          </b>
          cp mm.mysql-2.0.13-bin.jar  /var/tomcat4/lib
          <br/>
         </pre>
        </small>
       </dd>
      </dl>
      "GRANT ALL PRIVILEGES ON bedrock to 'user@hostname' identified by 'password';
      <br/>
      FLUSH PRIVILEGES
      <p>
       where hostname is localhost.localdomain (not localhost on default Red Hat installation)
      </p>
      <p>
      </p>
      <h3>
       JAVA Servlet run under Tomcat, accessing MySQL using JDBC:
      </h3>
      <b>
       Java Servlet source file:
      </b>
      (Note that it does the same thing as the
PostgrSQL example above but it is written with a different style.)
      <dl>
       <dd>
        <table>
         <tbody>
          <tr bgcolor="#c0c0c0">
           <td>
            <small>
             <pre>
              // File: ShowBedrock.java
              <br/>
              <br/>
              /* A servlet to display the contents of the MySQL Bedrock database */
              <br/>
              <br/>
              import java.io.*;
              <br/>
              import java.net.*;
              <br/>
              import java.sql.*;
              <br/>
              import java.text.*;
              <br/>
              import java.util.*;
              <br/>
              import javax.servlet.*;
              <br/>
              import javax.servlet.http.*;
              <br/>
              <br/>
              public class ShowBedrock extends HttpServlet
              <br/>
              {
              <br/>
              public String getServletInfo()
              <br/>
              {
              <br/>
              return "Servlet connects to MySQL database and displays result of a SELECT";
              <br/>
              }
              <br/>
              <br/>
              // Use http GET
              <br/>
              <br/>
              public void doGet(HttpServletRequest request, HttpServletResponse response)
              <br/>
              throws IOException, ServletException
              <br/>
              {
              <br/>
              String loginUser = "
              <b>
               <i>
                Dude1
               </i>
              </b>
              ";
              <br/>
              String loginPasswd = "
              <b>
               <i>
                SuperSecret
               </i>
              </b>
              ";
              <br/>
              String loginUrl = "jdbc:mysql://localhost:3306/bedrock";
              <br/>
              <br/>
              response.setContentType("text/html");    // Response mime type
              <br/>
              <br/>
              // Output stream to STDOUT
              <br/>
              PrintWriter out = response.getWriter();
              <br/>
              <br/>
              out.println("&lt;HTML&gt;&lt;HEAD&gt;&lt;TITLE&gt;Bedrock&lt;/TITLE&gt;&lt;/HEAD&gt;");
              <br/>
              out.println("&lt;BODY&gt;&lt;H1&gt;Bedrock&lt;/H1&gt;");
              <br/>
              <br/>
              // Load the mm.MySQL driver
              <br/>
              try
              <br/>
              {
              <br/>
              Class.forName("org.gjt.mm.mysql.Driver");
              <br/>
              Connection dbcon = DriverManager.getConnection(loginUrl, loginUser, loginPasswd);
              <br/>
              // Declare our statement
              <br/>
              Statement statement = dbcon.createStatement();
              <br/>
              <br/>
              String query = "SELECT name, dept, ";
              <br/>
              query +=       "       jobtitle ";
              <br/>
              query +=       "FROM   employee ";
              <br/>
              <br/>
              // Perform the query
              <br/>
              ResultSet rs = statement.executeQuery(query);
              <br/>
              <br/>
              out.println("&lt;TABLE border&gt;");
              <br/>
              <br/>
              // Iterate through each row of rs
              <br/>
              while (rs.next())
              <br/>
              {
              <br/>
              String m_name = rs.getString("name");
              <br/>
              String m_dept = rs.getString("dept");
              <br/>
              String m_jobtitle = rs.getString("jobtitle");
              <br/>
              out.println("&lt;tr&gt;" +
              <br/>
              "&lt;td&gt;" + m_name + "&lt;/td&gt;" +
              <br/>
              "&lt;td&gt;" + m_dept + "&lt;/td&gt;" +
              <br/>
              "&lt;td&gt;" + m_jobtitle + "&lt;/td&gt;" +
              <br/>
              "&lt;/tr&gt;");
              <br/>
              }
              <br/>
              <br/>
              out.println("&lt;/TABLE&gt;");
              <br/>
              <br/>
              rs.close();
              <br/>
              statement.close();
              <br/>
              dbcon.close();
              <br/>
              }
              <br/>
              catch (SQLException ex) {
              <br/>
              while (ex != null) {
              <br/>
              System.out.println ("SQL Exception:  " + ex.getMessage ());
              <br/>
              ex = ex.getNextException ();
              <br/>
              }  // end while
              <br/>
              }  // end catch SQLException
              <br/>
              <br/>
              catch(java.lang.Exception ex)
              <br/>
              {
              <br/>
              out.println("&lt;HTML&gt;" +
              <br/>
              "&lt;HEAD&gt;&lt;TITLE&gt;" +
              <br/>
              "Bedrock: Error" +
              <br/>
              "&lt;/TITLE&gt;&lt;/HEAD&gt;\n&lt;BODY&gt;" +
              <br/>
              "&lt;P&gt;SQL error in doGet: " +
              <br/>
              ex.getMessage() + "&lt;/P&gt;&lt;/BODY&gt;&lt;/HTML&gt;");
              <br/>
              return;
              <br/>
              }
              <br/>
              out.close();
              <br/>
              }
              <br/>
              }
              <br/>
             </pre>
            </small>
           </td>
          </tr>
         </tbody>
        </table>
       </dd>
      </dl>
      <b>
       Compile:
      </b>
      <dl>
       <dd>
        <small>
         <pre>
          <b>
           [prompt]#
          </b>
          export CLASSPATH=/var/tomcat4/common/lib/mm.mysql-2.0.13-bin.jar:$CLASSPATH
          <br/>
          <b>
           [prompt]#
          </b>
          cd /var/tomcat4/webapps/examples/WEB-INF/classes
          <br/>
          <b>
           [prompt]#
          </b>
          javac ShowBedrock.java
          <br/>
          <br/>
          (
          <b>
           OR
          </b>
          export CLASSPATH=/usr/java/j2sdk1.4.0/lib/tools.jar:/usr/java/j2sdk1.4.0/jre/lib/rt.jar:/var/tomcat4/common/lib/servlet.jar:/var/tomcat4/lib/mm.mysql-2.0.13-bin.jar )
          <br/>
          (
          <b>
           OR
          </b>
          /usr/java/j2sdk1.4.0/bin/javac ShowBedrock.java )
          <br/>
         </pre>
        </small>
       </dd>
      </dl>
      <p>
       <b>
        Test:
       </b>
      </p>
      <ul>
       <li>
        Tomcat only:
        <a href="http://localhost:8180/examples/servlet/ShowBedrock" target="_blank">
         http://localhost:8180/examples/servlet/ShowBedrock
        </a>
       </li>
       <li>
        Apache Request:
        <a href="http://localhost/examples/servlet/ShowBedrock" target="_blank">
         http://localhost/examples/servlet/ShowBedrock
        </a>
       </li>
      </ul>
      <p>
      </p>
      <p>
       <b>
        Notes:
       </b>
      </p>
      <ul>
       <li>
        <font color="#ff0000">
         [Potential Pitfall]
        </font>
        : The MySQL "user" table
will define users and their host. I made the mistake of using "localhost"
when the host name returned by the Unix command "hostname" was different.
When the servlet tried to connect to the database it was refused.
        <dl>
         <dd>
          <small>
           <pre>
            <b>
             [prompt]$
            </b>
            hostname
            <br/>
            <b>
             <i>
              superserver
             </i>
            </b>
            <b>
             [prompt]$
            </b>
            mysql -h localhost -u root -p
            <br/>
            ...
            <br/>
            <b>
             mysql&gt;
            </b>
            use mysql
            <br/>
            <b>
             mysql&gt;
            </b>
            select user,host from user;
            <br/>
            +-------+------------+
            <br/>
            | user  | host       |
            <br/>
            +-------+------------+
            <br/>
            | root  |            |
            <br/>
            | Dude1 | localhost  |
            <br/>
            +-------+------------+
            <br/>
            <b>
             mysql&gt;
            </b>
            update user set Host='
            <b>
             <i>
              superserver
             </i>
            </b>
            ' where User='Dude1';
            <br/>
            Query OK, 1 row affected (0.00 sec)
            <br/>
            Rows matched: 1  Changed: 1  Warnings: 0
            <br/>
           </pre>
          </small>
         </dd>
        </dl>
       </li>
      </ul>
      <p>
      </p>
      <hr/>
      <p>
      </p>
      <h4>
       Links:
      </h4>
      <ul>
       <li>
        <a href="http://mmmysql.sourceforge.net/">
         JDBC MySQL driver "mm"
        </a>
       </li>
       <li>
        <a href="http://www.nusphere.com/products/library/writing_jdbc_mysql.pdf">
         Nusphere.com: Discussion and explanation of simple JDBC mm.MySQL servlet
        </a>
       </li>
       <li>
        <a href="http://tecfa.unige.ch/guides/java/staf2x/ex/jdbc/coffee-break/">
         MySQL JDBC Examples
        </a>
       </li>
       <li>
        <a href="http://tecfa.unige.ch/guides/mysql/">
         MySQL Links
        </a>
        - Lots of JDBC links as well.
       </li>
       <li>
        <a href="http://mmmysql.sourceforge.net/doc/mm.doc/x30.htm">
         mm.MySQL guide
        </a>
       </li>
      </ul>
      <p>
      </p>
      <hr/>
      <table border="0" cellpadding="2" cellspacing="0" width="100%">
       <tbody>
        <tr bgcolor="#ffcc33">
         <td>
          <b>
           <big>
            JAVA JDBC:
           </big>
          </b>
         </td>
        </tr>
       </tbody>
      </table>
      <p>
       JAVA JDBC programs require the package:
       <tt>
        java.sql
       </tt>
       . Contained
within this package are:
      </p>
      <ul>
       <li>
        Classes:
        <small>
         <ul>
          <li>
           Date
          </li>
          <li>
           DriverManager
          </li>
          <li>
           DriverPropertyInfo
          </li>
          <li>
           Time
          </li>
          <li>
           Timestamp
          </li>
          <li>
           Types
          </li>
         </ul>
        </small>
       </li>
       <li>
        Interfaces:
        <small>
         <ul>
          <li>
           CallableStatement
          </li>
          <li>
           Connection
          </li>
          <li>
           DatabaseMetaData
          </li>
          <li>
           Driver
          </li>
          <li>
           PreparedStatement
          </li>
          <li>
           ResultSet
          </li>
          <li>
           ResultMetaData
          </li>
          <li>
           Statement
          </li>
         </ul>
        </small>
       </li>
      </ul>
      <p>
      </p>
      <p>
       JDBC Links:
      </p>
      <ul>
       <li>
        <a href="http://download.oracle.com/javase/tutorial/jdbc/basics/index.html">
         JDBC tutorials
        </a>
       </li>
       <li>
        <a href="http://www.oracle.com/technetwork/java/index-142838.html">
         JDBC API tutorial
        </a>
       </li>
       <li>
        <a href="http://www.oracle.com/technetwork/java/index-136695.html">
         JDBC database support
        </a>
       </li>
       <li>
        <a href="http://developers.sun.com/product/jdbc/drivers">
         Sun's database of JDBC database drivers
        </a>
       </li>
      </ul>
      <hr/>
      <table border="0" cellpadding="2" cellspacing="0" width="100%">
       <tbody>
        <tr bgcolor="#ffcc33">
         <td>
          <b>
           <big>
            JAVA Server Pages (JSP):
           </big>
          </b>
         </td>
        </tr>
       </tbody>
      </table>
      <p>
       Basic JSP elements:
      </p>
      <ul>
       <li>
        <tt>
         &lt;jsp: ... %&gt;
        </tt>
        : Define/execute Java statements.
        <br/>
        Example:
        <small>
         <pre>
          <jsp:usebean class="dates.JspCalendar" id="clock" scope="page" type="dates.JspCalendar">
           Year: is  &lt;jsp:getProperty name="clock" property="year"/&gt;
   &lt;BR&gt;
   Month: is  &lt;jsp:getProperty name="clock" property="month"/&gt;
          </jsp:usebean>
         </pre>
        </small>
       </li>
       <li>
        <tt>
         &lt;% ... %&gt;
        </tt>
        : Execute Java statements. Nothing displayed.
        <br/>
        Example:
        <tt>
         &lt;% numguess.reset(); %&gt;
        </tt>
       </li>
       <li>
        <tt>
         &lt;%= ... %&gt;
        </tt>
        : Execute Java expression and place results here.
        <br/>
        Example:
        <tt>
         Calendar:&lt;%= table.getDate() %&gt;
        </tt>
       </li>
       <li>
        <tt>
         &lt;%@ ... %&gt;
        </tt>
        : Declare Java variable or method.
        <br/>
        Example:
        <small>
         <pre>
          &lt;%@ page language="java" import="cal.*" %&gt;
          <br/>
          &lt;jsp:useBean id="table" scope="session" class="cal.TableBean" /&gt;
          <br/>
         </pre>
        </small>
       </li>
      </ul>
      JSP's are rarely self contained. JSP's most often require use of classes and 
methods defined in Java programs.
      <p>
       The samples delivered with Tomcat show numerous JSP examples and the source code:
      </p>
      <ul>
       <li>
        <a href="http://localhost:8180/examples/jsp/index.html" target="_blank">
         http://localhost:8180/examples/jsp/index.html
        </a>
       </li>
      </ul>
      <p>
       <a name="LINKS">
       </a>
      </p>
      <p>
      </p>
      <hr/>
      <table border="0" cellpadding="2" cellspacing="0" width="100%">
       <tbody>
        <tr bgcolor="#ffcc33">
         <td>
          <b>
           <big>
            Links:
           </big>
          </b>
         </td>
        </tr>
       </tbody>
      </table>
      <p>
      </p>
      <ul>
       <li>
        <a href="http://jakarta.apache.org/tomcat/index.html">
         Jakarta Project: Tomcat
        </a>
       </li>
       <li>
        <a href="http://www.sun.com">
         Sun
        </a>
        <ul>
         <li>
          <a href="http://java.sun.com/products/jsp/">
           Java Server Pages
          </a>
         </li>
         <li>
          <a href="http://java.sun.com/products/servlet/">
           Java Servlet Technology
          </a>
         </li>
         <li>
          <a href="http://java.sun.com/docs/books/tutorial/index.html">
           Sun.com: Java Tutorial
          </a>
         </li>
        </ul>
       </li>
       <li>
        <a href="http://jakarta.apache.org/tomcat/tomcat-3.2-doc/uguide/tomcat_ug.html">
         Tomcat - A Minimalistic User's Guide
        </a>
        - Tomcat V3.2 (older) configuration.
       </li>
       <li>
        <a href="http://www.dougsparling.com/comp/howto/linux_java.html">
         Setting Up a Java 2 Environment on Linux
        </a>
       </li>
       <li>
        <a href="http://www.onjava.com/pub/a/onjava/2001/04/19/tomcat.html">
         Deploying Web Applications to Tomcat
        </a>
       </li>
       <li>
        <b>
         J2EE:
        </b>
        <ul>
         <li>
          <a href="LinuxTutorialWebSphere.html">
           <b>
            YoLinux: Installing/configuring IBM WebSphere and DB2 on Linux
           </b>
          </a>
         </li>
         <li>
          <a href="http://jboss.org/">
           JBoss.org
          </a>
          - J2EE Java Enterprise application server - Want to define Java Enterprise Bean services which a servlet
        may invoke, use JBoss (or WebSphere).
         </li>
         <li>
          <a href="LinuxTutorialJava.html#MIDDLEWARE">
           <b>
            YoLinux: List of Java middleware servers
           </b>
          </a>
         </li>
        </ul>
       </li>
       <li>
        <a href="LinuxTutorialC++CGI.html">
         <b>
          YoLinux Tutorial: CGI programming with C++ and GNU GciCc
         </b>
        </a>
        - Perform the same functionality as this Java servlet tutorial but use CGI and C++.
       </li>
      </ul>
      <a name="BOOKS">
      </a>
      <p>
      </p>
      <hr/>
      <table border="0" cellpadding="2" cellspacing="0" width="100%">
       <tbody>
        <tr bgcolor="#ffcc33">
         <td valign="top">
          <img src="images/book40.gif"/>
          <b>
           <big>
            Books:
           </big>
          </b>
         </td>
        </tr>
       </tbody>
      </table>
      <p>
      </p>
      <dl>
       <dd>
        <table border="1" cellpadding="5">
         <tbody>
          <tr>
           <td>
            <img src="../BOOKS/0130894680.01.MZZZZZZZ.jpg"/>
           </td>
           <td valign="top">
            "Core Java 2, Volume 1: Fundamentals "
            <br/>
            by Cay S. Horstmann, Gary Cornell
            <br/>
            ISBN # 0130894680, Prentice Hall PTR
            <p>
             The industry standard. Need I say more?
            </p>
           </td>
           <td valign="top">
            <a href="http://www.amazon.com/gp/redirect.html?ie=UTF8&amp;location=http://www.amazon.com/exec/obidos/ASIN/0130894680/&amp;tag=yolinux-20" rel="nofollow">
             <img alt="Amazon.com" src="images/Amazon-BuyABook88x31.gif"/>
            </a>
            <br/>
           </td>
          </tr>
          <tr>
           <td>
            <img src="../BOOKS/0130268615.01.MZZZZZZZ.jpg"/>
           </td>
           <td valign="top">
            "Distributed Java 2 Platform Database Development "
            <br/>
            by Stewart Birnam
            <br/>
            ISBN # 0130268615, Prentice Hall PTR
            <p>
             The industry standard. Need I say more?
            </p>
           </td>
           <td valign="top">
            <a href="http://www.amazon.com/gp/redirect.html?ie=UTF8&amp;location=http://www.amazon.com/exec/obidos/ASIN/0130268615/&amp;tag=yolinux-20" rel="nofollow">
             <img alt="Amazon.com" src="images/Amazon-BuyABook88x31.gif"/>
            </a>
            <br/>
           </td>
          </tr>
          <tr>
           <td>
            <img src="../BOOKS/0130893404.01.MZZZZZZZ.gif"/>
           </td>
           <td valign="top">
            "Core Servlets and JavaServer Pages (JSP) "
            <br/>
            by Marty Hall
            <br/>
            ISBN # 0130893404, Prentice Hall
            <p>
            </p>
           </td>
           <td valign="top">
            <a href="http://www.amazon.com/gp/redirect.html?ie=UTF8&amp;location=http://www.amazon.com/exec/obidos/ASIN/0130893404/&amp;tag=yolinux-20" rel="nofollow">
             <img alt="Amazon.com" src="images/Amazon-BuyABook88x31.gif"/>
            </a>
            <br/>
           </td>
          </tr>
          <tr>
           <td>
            <img src="../BOOKS/0130676144.01.MZZZZZZZ.gif"/>
           </td>
           <td valign="top">
            "More Servlets and JavaServer Pages (JSP) "
            <br/>
            by Marty Hall
            <br/>
            ISBN # 0130676144, Prentice Hall
            <p>
            </p>
           </td>
           <td valign="top">
            <a href="http://www.amazon.com/gp/redirect.html?ie=UTF8&amp;location=http://www.amazon.com/exec/obidos/ASIN/0130676144/&amp;tag=yolinux-20" rel="nofollow">
             <img alt="Amazon.com" src="images/Amazon-BuyABook88x31.gif"/>
            </a>
            <br/>
           </td>
          </tr>
          <tr>
           <td>
            <img src="../BOOKS/0596003188.01.MZZZZZZZ.jpg"/>
           </td>
           <td valign="top">
            Tomcat: The Definitive Guide
            <br/>
            by Jason Brittain, Ian F. Darwin
            <br/>
            ISBN # 0596003188 O'Reilly &amp; Associates; 1st Edition edition
            <p>
            </p>
           </td>
           <td valign="top">
            <a href="http://www.amazon.com/gp/redirect.html?ie=UTF8&amp;location=http://www.amazon.com/exec/obidos/ASIN/0596003188/&amp;tag=yolinux-20" rel="nofollow">
             <img alt="Amazon.com" src="images/Amazon-BuyABook88x31.gif"/>
            </a>
            <br/>
           </td>
          </tr>
          <tr>
           <td>
            <img src="../BOOKS/0764543725.01.MZZZZZZZ.jpg"/>
           </td>
           <td valign="top">
            "Professional Apache Tomcat"
            <br/>
            by Chanoch Wiggers, Ben Galbraith, Vivek Chopra, Sing Li, Debashish
Bhattacharjee, Amit Bakore, Romin Irani, Sandip Bhattacharya, Chad
Fowler
            <br/>
            ISBN # 0764543725 Wrox
            <p>
            </p>
           </td>
           <td valign="top">
            <a href="http://www.amazon.com/gp/redirect.html?ie=UTF8&amp;location=http://www.amazon.com/exec/obidos/ASIN/0764543725/&amp;tag=yolinux-20" rel="nofollow">
             <img alt="Amazon.com" src="images/Amazon-BuyABook88x31.gif"/>
            </a>
            <br/>
           </td>
          </tr>
          <tr>
           <td>
            <img src="../BOOKS/1893115364.01.MZZZZZZZ.jpg"/>
           </td>
           <td valign="top">
            Apache Jakarta-Tomcat
            <br/>
            by James Goodwill
            <br/>
            ISBN # 1893115364, APress
            <p>
            </p>
           </td>
           <td valign="top">
            <a href="http://www.amazon.com/gp/redirect.html?ie=UTF8&amp;location=http://www.amazon.com/exec/obidos/ASIN/1893115364/&amp;tag=yolinux-20" rel="nofollow">
             <img alt="Amazon.com" src="images/Amazon-BuyABook88x31.gif"/>
            </a>
            <br/>
           </td>
          </tr>
          <tr>
           <td>
            <img src="../BOOKS/1861008309.01.MZZZZZZZ.jpg"/>
           </td>
           <td valign="top">
            Apache Tomcat Security Handbook
            <br/>
            by Vivek Chopra, Ben Galbriaths, Brian Rickabaugh, Gotham Pollysetty, John Turner
            <br/>
            ISBN # 1861008309, Wrox Press
            <p>
            </p>
           </td>
           <td valign="top">
            <a href="http://www.amazon.com/gp/redirect.html?ie=UTF8&amp;location=http://www.amazon.com/exec/obidos/ASIN/1861008309/&amp;tag=yolinux-20" rel="nofollow">
             <img alt="Amazon.com" src="images/Amazon-BuyABook88x31.gif"/>
            </a>
            <br/>
           </td>
          </tr>
          <tr>
           <td>
            <img src="../BOOKS/0764547879.01.MZZZZZZZ.jpg"/>
           </td>
           <td valign="top">
            "JSP, Servlets, and MySQL"
            <br/>
            by David Harms
            <br/>
            ISBN # 0764547879, Hungry Minds, Inc
            <p>
            </p>
           </td>
           <td valign="top">
            <a href="http://www.amazon.com/gp/redirect.html?ie=UTF8&amp;location=http://www.amazon.com/exec/obidos/ASIN/0764547879/&amp;tag=yolinux-20" rel="nofollow">
             <img alt="Amazon.com" src="images/Amazon-BuyABook88x31.gif"/>
            </a>
            <br/>
           </td>
          </tr>
          <tr>
           <td>
            <img src="../BOOKS/0735709211.01.MZZZZZZZ.jpg"/>
           </td>
           <td valign="top">
            "MySQL"
            <br/>
            by  Paul DuBois, Michael Widenius
            <br/>
            ISBN # 0735709211, New Riders Publishing
            <p>
            </p>
           </td>
           <td valign="top">
            <a href="http://www.amazon.com/gp/redirect.html?ie=UTF8&amp;location=http://www.amazon.com/exec/obidos/ASIN/0735709211/&amp;tag=yolinux-20" rel="nofollow">
             <img alt="Amazon.com" src="images/Amazon-BuyABook88x31.gif"/>
            </a>
            <br/>
           </td>
          </tr>
          <tr>
           <td>
            <img src="../BOOKS/0596002114.01.MZZZZZZZ.jpg"/>
           </td>
           <td valign="top">
            "Manageing and Using MySQL"
            <br/>
            by George Reese, Randy Jay Yarger, Tim King
            <br/>
            ISBN # 0596002114, O'Reilly
            <p>
            </p>
           </td>
           <td valign="top">
            <a href="http://www.amazon.com/gp/redirect.html?ie=UTF8&amp;location=http://www.amazon.com/exec/obidos/ASIN/0596002114/&amp;tag=yolinux-20" rel="nofollow">
             <img alt="Amazon.com" src="images/Amazon-BuyABook88x31.gif"/>
            </a>
            <br/>
           </td>
          </tr>
          <tr>
           <td>
            <img src="../BOOKS/0735711216.01.MZZZZZZZ.jpg"/>
           </td>
           <td valign="top">
            PostgreSQL Essential Reference
            <br/>
            by Barry Stinson
            <br/>
            ISBN  #0735711216, New Riders
            <p>
            </p>
           </td>
           <td valign="top">
            <a href="http://www.amazon.com/gp/redirect.html?ie=UTF8&amp;location=http://www.amazon.com/exec/obidos/ASIN/0735711216/&amp;tag=yolinux-20" rel="nofollow">
             <img alt="Amazon.com" src="images/Amazon-BuyABook88x31.gif"/>
            </a>
            <br/>
           </td>
          </tr>
          <tr>
           <td>
            <img src="../BOOKS/0672322609.01.MZZZZZZZ.jpg"/>
           </td>
           <td valign="top">
            PostgreSQL: Developer's Handbook
            <br/>
            by Ewald Geschwinde, Hans-Juergen Schoenig, Hans-Jurgen Schonig
            <br/>
            ISBN  #0672322609, SAMS
            <p>
            </p>
           </td>
           <td valign="top">
            <a href="http://www.amazon.com/gp/redirect.html?ie=UTF8&amp;location=http://www.amazon.com/exec/obidos/ASIN/0672322609/&amp;tag=yolinux-20" rel="nofollow">
             <img alt="Amazon.com" src="images/Amazon-BuyABook88x31.gif"/>
            </a>
            <br/>
           </td>
          </tr>
          <tr>
           <td>
            <img src="../BOOKS/1565928466.01.MZZZZZZZ.jpg"/>
           </td>
           <td valign="top">
            Practical PostgreSQL
            <br/>
            John C. Worsley, Joshua D. Drake
            <br/>
            ISBN  #1565928466, O'Reilly
            <p>
            </p>
           </td>
           <td valign="top">
            <a href="http://www.amazon.com/gp/redirect.html?ie=UTF8&amp;location=http://www.amazon.com/exec/obidos/ASIN/1565928466/&amp;tag=yolinux-20" rel="nofollow">
             <img alt="Amazon.com" src="images/Amazon-BuyABook88x31.gif"/>
            </a>
            <br/>
           </td>
          </tr>
          <tr>
           <td>
            <img src="../BOOKS/1861005156.01.MZZZZZZZ.jpg"/>
           </td>
           <td valign="top">
            Beginning Databases with PostgreSQL
            <br/>
            by Richard Stones, Neil Matthew
            <br/>
            ISBN  #1861005156, Wrox Press Inc
            <p>
            </p>
           </td>
           <td valign="top">
            <a href="http://www.amazon.com/gp/redirect.html?ie=UTF8&amp;location=http://www.amazon.com/exec/obidos/ASIN/1861005156/&amp;tag=yolinux-20" rel="nofollow">
             <img alt="Amazon.com" src="images/Amazon-BuyABook88x31.gif"/>
            </a>
            <br/>
           </td>
          </tr>
         </tbody>
        </table>
       </dd>
      </dl>
      <p>
      </p>
     </td>
    </tr>
   </tbody>
  </table>
  <div id="footer">
   <table background="http://www.yolinux.com/TUTORIALS/images/footer_pattern.png" bgcolor="#646664" cellpadding="4" width="100%">
    <tbody>
     <tr>
      <td valign="bottom">
       <font color="#ffcc33" size="-1">
        <b>
         <a class="footer" href="http://www.yolinux.com">
          YoLinux.com Home Page
         </a>
         <br/>
         <a class="footer" href="http://www.yolinux.com/TUTORIALS/">
          YoLinux Tutorial Index
         </a>
         |
         <a class="footer" href="http://www.yolinux.com/YoLinux-Terms.html">
          Terms
         </a>
         <br/>
         <a class="footer" href="http://www.yolinux.com/privacy.html">
          Privacy Policy
         </a>
         |
         <a class="footer" href="http://www.yolinux.com/YoLinux-Advertising.html">
          Advertise with us
         </a>
         |
         <a class="footer" href="http://www.yolinux.com/YoLinuxEmailForm.html">
          Feedback Form
         </a>
         |
         <br/>
         Unauthorized copying or redistribution prohibited.
        </b>
       </font>
      </td>
      <td align="center" valign="bottom">
       <script src="http://www.stumbleupon.com/hostedbadge.php?s=5">
       </script>
      </td>
      <td align="center" valign="bottom">
       <!-- Place this tag where you want the +1 button to render -->
       <div class="g-plusone" data-count="true" data-size="tall">
       </div>
      </td>
      <td align="center" valign="bottom">
       <script src="http://widgets.digg.com/buttons.js" type="text/javascript">
       </script>
       <a class="DiggThisButton DiggMedium" rev="linux_unix">
        <span style="display:none">
         YoLinux Tutorials. Linux Information Portal includes informative tutorials and links to many Linux sites.
        </span>
       </a>
      </td>
      <td align="center" valign="bottom">
       <p>
       </p>
       <!-- AddThis Button BEGIN -->
       <a href="http://www.addthis.com/bookmark.php?v=250&amp;pub=yolinux" onclick="return addthis_sendto()" onmouseout="addthis_close()" onmouseover="return addthis_open(this, '', '[URL]', '[TITLE]')" rel="nofollow">
        <img alt="Bookmark and Share" height="16" src="http://s7.addthis.com/static/btn/lg-bookmark-en.gif" style="border:0" width="125"/>
       </a>
       <script src="http://s7.addthis.com/js/250/addthis_widget.js?pub=yolinux" type="text/javascript">
       </script>
       <!-- AddThis Button END -->
      </td>
      <td valign="top">
       <div align="right">
        <font color="#ffcc33" size="-1">
         <a class="footer" href="#TOP">
          to top of page
         </a>
        </font>
        <br/>
        <script type="text/javascript">
         &lt;!--
google_ad_client = "pub-8567479315106986";
/* 234x60, created 4/23/10 */
google_ad_slot = "8214196957";
google_ad_width = 234;
google_ad_height = 60;
//--&gt;
        </script>
        <script src="http://pagead2.googlesyndication.com/pagead/show_ads.js" type="text/javascript">
        </script>
       </div>
      </td>
     </tr>
    </tbody>
   </table>
  </div>
  <p>
  </p>
  <small>
   Copyright  2002 by
   <i>
    Greg Ippolito
   </i>
  </small>
  <!-- Start Quantcast tag -->
  <script type="text/javascript">
   var _qevents = _qevents || [];

  (function() {
   var elem = document.createElement('script');

   elem.src = (document.location.protocol == "https:" ? "https://secure" : "http://edge") + ".quantserve.com/quant.js";
   elem.async = true;
   elem.type = "text/javascript";
   var scpt = document.getElementsByTagName('script')[0];
   scpt.parentNode.insertBefore(elem, scpt);  
  })();
  </script>
  <script type="text/javascript">
   _qevents.push( { qacct:"p-ebIBcaVUngFBQ"} );
  </script>
  <noscript>
   <div style="display: none;">
    <img alt="Quantcast" height="1" src="//pixel.quantserve.com/pixel/p-ebIBcaVUngFBQ.gif" width="1"/>
   </div>
  </noscript>
  <!-- End Quantcast tag -->
  <!-- Start Google +1 tag -->
  <!-- Place this tag in your head or just before your close body tag -->
  <script src="https://apis.google.com/js/plusone.js" type="text/javascript">
  </script>
  <!-- End Google +1 tag -->
  <!-- Start Google Analytics tag -->
  <script type="text/javascript">
   var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
  </script>
  <script type="text/javascript">
   var pageTracker = _gat._getTracker("UA-3317450-1");
pageTracker._initData();
pageTracker._trackPageview();
  </script>
  <!-- End Google Analytics tag -->
 </body>
</html>