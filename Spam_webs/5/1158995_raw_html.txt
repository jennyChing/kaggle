<html>
 <head>
  <link href="/dreamsys.css" rel="stylesheet"/>
  <link href="menu.css" rel="stylesheet"/>
  <link href="../prettify/tomorrow.css" rel="stylesheet" type="text/css"/>
  <script src="../prettify/prettify.js" type="text/javascript">
  </script>
  <meta content="width=device-width, initial-scale=1.0" name="viewport"/>
  <meta content="Python Scripting (Programming) Tutorial" name="description"/>
  <meta content="unix, linux, python, shell, script, scripting, programming, tutorial, help" name="keywords"/>
  <title>
   Python Scripting Tutorial (Classes)
  </title>
 </head>
 <body bgcolor="ffffff" bgproperties="fixed" leftmargin="0" topmargin="0">
  <script src="../prettify/run_prettify.js?skin=sunburstnew">
  </script>
  <table border="0" cellpadding="0" cellspacing="0" style="background-color: dddddd; border-bottom: 1px solid #999999;" width="100%">
   <tr>
    <td align="left">
     <br/>
     <div id="dss-header">
      <b>
       dreamsys
      </b>
      software
     </div>
     <br/>
    </td>
    <td align="right">
     <!-- SiteSearch Google -->
     <form action="http://www.google.com/custom" method="get" target="google_window">
      <input name="domains" type="hidden" value="dreamsyssoft.com"/>
      <input maxlength="255" name="q" size="20" type="text" value=""/>
      <input name="sa" type="submit" value="Search"/>
      <input name="sitesearch" type="hidden" value="dreamsyssoft.com"/>
      <input name="client" type="hidden" value="pub-5964068028036664"/>
      <input name="forid" type="hidden" value="1"/>
      <input name="ie" type="hidden" value="ISO-8859-1"/>
      <input name="oe" type="hidden" value="ISO-8859-1"/>
      <input name="cof" type="hidden" value="GALT:#008000;GL:1;DIV:#336699;VLC:663399;AH:center;BGC:FFFFFF;LBGC:336699;ALC:0000FF;LC:0000FF;T:000000;GFNT:0000FF;GIMP:0000FF;FORID:1;"/>
      <input name="hl" type="hidden" value="en"/>
     </form>
     <!-- SiteSearch Google -->
    </td>
   </tr>
  </table>
  <table border="0" cellpadding="5" cellspacing="0" width="100%">
   <tr>
    <td id="NavTd" valign="top">
     <div id="Nav">
      <div class="section">
       <h3 class="section-header">
        <a href="/index.php" id="home-header">
         Home
        </a>
       </h3>
      </div>
      <div class="section" id="product-list">
       <h3 class="section-header">
        Products
       </h3>
       <div class="section-body">
        <ul>
         <li>
          <a href="/hextreme-hex-editor">
           Hextreme Hex Editor
          </a>
         </li>
         <li>
          <a href="/tiff-to-pdf">
           Tiff to PDF Converter
          </a>
         </li>
         <li>
          <a href="/image-to-pdf-library">
           Image to PDF Library
          </a>
         </li>
         <li>
          <a href="/math-dungeon-iphone-game/math-dungeon.php">
           Math Dungeon iPhone Game
          </a>
         </li>
        </ul>
       </div>
      </div>
      <div class="section" id="product-list">
       <h3 class="section-header">
        Tutorials
       </h3>
       <div class="section-body">
        <ul>
         <li>
          <a href="/java-8-lambda-tutorial">
           Java 8 Lambda Expressions
          </a>
         </li>
         <li>
          <a href="/unix-shell-scripting/tutorial.php">
           UNIX Shell Scripting
          </a>
         </li>
         <li>
          <a href="/python-scripting-tutorial">
           Python Shell Scripting
          </a>
         </li>
         <li>
          <a href="/javascript-shell-scripting">
           JavaScript Shell Scripting
          </a>
         </li>
         <li>
          <a href="/ruby-scripting-tutorial">
           Ruby Shell Scripting
          </a>
         </li>
        </ul>
       </div>
      </div>
      <div class="section" id="product-list">
       <h3 class="section-header">
        Resources
       </h3>
       <div class="section-body">
        <ul>
         <li>
          <a href="/blog">
           Blog
          </a>
         </li>
         <!-- &lt;li&gt;&lt;a href="/contact.php"&gt;contact us&lt;/a&gt;&lt;/li&gt; -->
         <li>
          <a href="/download.php">
           Downloads
          </a>
         </li>
         <!--
	&lt;li&gt;&lt;a href="/custapps.php"&gt;Custom Applications&lt;/a&gt;&lt;/li&gt; -->
        </ul>
       </div>
      </div>
      <div id="fb-root">
      </div>
      <script>
       (function(d, s, id) {
  var js, fjs = d.getElementsByTagName(s)[0];
  if (d.getElementById(id)) return;
  js = d.createElement(s); js.id = id;
  js.src = "//connect.facebook.net/en_US/all.js#xfbml=1";
  fjs.parentNode.insertBefore(js, fjs);
}(document, 'script', 'facebook-jssdk'));
      </script>
      <div class="section" id="product-list">
       <h3 class="section-header">
        Share
       </h3>
       <div class="section-body">
        <ul>
         <li>
          <div class="share">
           <div class="g-plusone" data-size="small">
           </div>
          </div>
         </li>
         <li>
          <div class="share">
           <div class="fb-like" data-href="http://www.dreamsyssoft.com/python-scripting-tutorial/classes-tutorial.php" data-layout="button_count" data-send="false" data-show-faces="true" data-width="100">
           </div>
          </div>
         </li>
         <li>
          <div class="share">
           <a class="twitter-share-button" data-via="DreamSysSoft" href="https://twitter.com/share">
            Tweet
           </a>
          </div>
         </li>
         <li>
          <div class="share">
           <a class="twitter-follow-button" data-show-count="false" href="https://twitter.com/dreamsyssoft">
            Follow @DreamSysSoft
           </a>
          </div>
         </li>
        </ul>
       </div>
      </div>
      <!-- Place this tag after the last +1 button tag. -->
      <script type="text/javascript">
       (function() {
    var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
  })();
      </script>
      <script>
       !function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');
      </script>
      <script>
       !function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');
      </script>
     </div>
     <hr/>
     <b>
      Like Progressive Metal? Check out my band on Spotify, please follow us!
     </b>
     <a href="/spotify_fr.php">
      <img src="/fr.png"/>
     </a>
    </td>
    <td valign="top">
     <h2 class="topbanner">
      Python Scripting Tutorial
     </h2>
     <ul class="topmenu">
      <li class="topmenuitem">
       <a href="index.php">
        <b>
         TOC
        </b>
       </a>
      </li>
      <li class="topmenuitem">
       <a href="intro-tutorial.php">
        <b>
         Introduction
        </b>
       </a>
      </li>
      <li class="topmenuitem">
       <a href="variables-tutorial.php">
        <b>
         Variables
        </b>
       </a>
      </li>
      <li class="topmenuitem">
       <a href="ifelse-tutorial.php">
        <b>
         If/Else
        </b>
       </a>
      </li>
      <li class="topmenuitem">
       <a href="optionparser-tutorial.php">
        <b>
         OptionParser
        </b>
       </a>
      </li>
      <li class="topmenuitem">
       <a href="loops-tutorial.php">
        <b>
         Looping
        </b>
       </a>
      </li>
      <li class="topmenuitem">
       <a href="functions-tutorial.php">
        <b>
         Functions
        </b>
       </a>
      </li>
      <li class="topmenuitem">
       <a href="classes-tutorial.php">
        <b>
         Classes
        </b>
       </a>
      </li>
      <li class="topmenuitem">
       <a href="strings-tutorial.php">
        <b>
         Strings
        </b>
       </a>
      </li>
      <li class="topmenuitem">
       <a href="lists-maps-tutorial.php">
        <b>
         Lists &amp; Maps
        </b>
       </a>
      </li>
      <li class="topmenuitem">
       <a href="enum-tutorial.php">
        <b>
         Enums
        </b>
       </a>
      </li>
      <li class="topmenuitem">
       <a href="create-simple-rest-web-service-with-python.php">
        <b>
         REST Service
        </b>
       </a>
      </li>
      <li class="topmenuitem">
       <a href="shell-tutorial.php">
        <b>
         Shell
        </b>
       </a>
      </li>
     </ul>
     <div align="center">
      <script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js">
      </script>
      <!-- python_top -->
      <ins class="adsbygoogle" data-ad-client="ca-pub-6412610587638500" data-ad-format="auto" data-ad-slot="5830110269" style="display:block">
      </ins>
      <script>
       (adsbygoogle = window.adsbygoogle || []).push({});
      </script>
     </div>
     <p>
      <font size="3">
       <b>
        Classes
       </b>
      </font>
     </p>
     <br/>
     <p>
      When your scripts start to grow and your set of functions grow, you will start to notice that many of your
	functions are related, they work on data that is common between them and they really represent an entity collectively.
	This is where it is usually a good idea to create a class.  Let's say that our program, deals with a user name, age, 
	birth date, height, weight and variables like that and there are methods in our program such as readUserAge, readUserName,
	updateUserAge, etc.  A good place to start would be to add a class "User" which is done by using the
      <b>
       class
      </b>
      keyword.
     </p>
     <p>
      Now let's create a simple script which will ask the user for information on a user, store it to a file and load the user info
	from the file.  We will have it run with two options, one is that the user enters the info, and another is that it just loads the
	user from the file and displays it.
     </p>
     <pre class="prettyprint lang-py">
      #!/usr/bin/env python
import sys

class User:
    name = ""
    age = 0
    height = 0
    weight = 0
    
    def display(self):
        print ''
        print 'User Information:'
        print 'User Name  :', self.name
        print 'User Age   :', self.age
        print 'User Height:', self.height
        print 'User Weight:', self.weight
    
    def loadFromInput(self):
        self.name = raw_input('Enter User Name: ')
        self.age = int(raw_input('Enter Age: '))
        self.height = float(raw_input('Enter Height (in feet): '))
        self.weight = int(raw_input('Enter Weight: '))
    
    def save(self):
        f = open('user.info','w')
        f.write(self.name + '\n')
        f.write(str(self.age) + '\n')
        f.write(str(self.height) + '\n')
        f.write(str(self.weight) + '\n')
        f.close()
        
    def loadFromFile(self):
    	f = open('user.info', 'r')
    	self.name = f.readline().rstrip()
    	self.age = int(f.readline())
    	self.height = float(f.readline())
    	self.weight = int(f.readline())

        
theUser = None

if len(sys.argv) &gt; 1 and sys.argv[1] == 'READ':
    theUser = User()
    theUser.loadFromFile()
else:
    theUser = User()
    theUser.loadFromInput()
    theUser.save()
    
theUser.display()
     </pre>
     <p>
      the first new thing you will run into here is the keyword
      <b>
       class
      </b>
      , which is used to define a new class called "User".
	Under this we first create the variables which belong to the class.  What does the user have? 
	It has a name, age, height and weight.  Next we define the methods which will work on the user.  What do we want to do
	with a user?  We want to load it from a file, load it from user input, save it and display it.  So there are methods for each
	of these operations.
     </p>
     <p>
      We declare class methods the same as we do regular methods except that they are indented under the class level and they
	take at least one parameter (self), which is the instance of the class that they will be working on.  The methods can
	be declared in any order but here we have ordered them in the order that they will typically be called.
     </p>
     <p>
      In the display() function, we are simply printing the data of the class, notice that we use the
      <b>
       self
      </b>
      variable
	before the variable name.  The loadFromInput() function uses the
      <b>
       raw_input
      </b>
      function that we are already familiar with
	to load the user info from the console input.
     </p>
     <p>
      The save() method uses a new function,
      <b>
       open
      </b>
      , which can be used to open a file for reading or writing.  In the save
	method, we use 'w' as the 2nd parameter, which indicates opening the file as the first parameter in "write" mode.  Then we
	continue to call the method
      <b>
       write
      </b>
      on the file object returned to write each of the variables followed by a return.
     </p>
     <p>
      Finally, the loadFromFile() method will open the file in read mode by using the parameter 'r'.  It will then use the function
      <b>
       readline
      </b>
      to read each of the variables from the file.
     </p>
     <p>
      Below the class we show how the class is actually used.  First we initialize the "theUser" variable with the
      <b>
       None
      </b>
      keyword
	meaning that it is not yet created.  Now we check if there is a parameter sent to the script with the text "READ", if so we
	will read from the file that was created when the user was saved, if not then we will ask the console for input and create and
	save the user.
     </p>
     <p>
      So now, let's run the script once to create the user and then again to read the user from the file:
     </p>
     <pre class="prettyprint lang-py">
      $
      <b>
       ./userTest.py
      </b>
      Enter User Name:
      <b>
       Joe
      </b>
      Enter Age:
      <b>
       25
      </b>
      Enter Height (in feet):
      <b>
       5.9
      </b>
      Enter Weight:
      <b>
       170
      </b>
      User Information:
User Name  : Joe
User Age   : 25
User Height: 5.9
User Weight: 170
$
      <b>
       ./userTest.py READ
      </b>
      User Information:
User Name  : Joe
User Age   : 25
User Height: 5.9
User Weight: 170
     </pre>
     <p>
      Next you will learn how to manipulate strings.
     </p>
     <p align="center">
      <a href="functions-tutorial.php">
       <b>
        Prev
       </b>
       (Functions)
      </a>
      |
      <a href="strings-tutorial.php">
       <b>
        Next
       </b>
       (Strings)
      </a>
      <br/>
      <script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js">
      </script>
      <!-- python_bottom_resp -->
      <ins class="adsbygoogle" data-ad-client="ca-pub-6412610587638500" data-ad-format="auto" data-ad-slot="7306843462" style="display:block">
      </ins>
      <script>
       (adsbygoogle = window.adsbygoogle || []).push({});
      </script>
     </p>
    </td>
    <td id="RightTd" valign="top">
     <script type="text/javascript">
      &lt;!--
google_ad_client = "ca-pub-6412610587638500";
/* python_tall */
google_ad_slot = "1840088669";
google_ad_width = 160;
google_ad_height = 600;
//--&gt;
     </script>
     <script src="http://pagead2.googlesyndication.com/pagead/show_ads.js" type="text/javascript">
     </script>
     <hr/>
     <b>
      Blog Entries
     </b>
     <br/>
     <a href="http://www.dreamsyssoft.com/blog/blog.php?/archives/6-Create-a-simple-REST-web-service-with-Python.html">
      Blob Entry 1
     </a>
     <br/>
     <a href="http://www.dreamsyssoft.com/blog/blog.php?/archives/5-How-to-use-HBase-Hadoop-Clustered.html">
      Blob Entry 2
     </a>
     <br/>
     <a href="http://www.dreamsyssoft.com/blog/blog.php?/archives/7-Simple-REST-Web-Service-in-Java-with-Spring-and-CXF.html">
      Blob Entry 3
     </a>
     <br/>
     <a href="http://www.dreamsyssoft.com/blog/blog.php?/archives/8-Simple-REST-Service-with-Node.js-and-Express.html">
      Blob Entry 4
     </a>
     <br/>
     <a href="http://www.dreamsyssoft.com/blog/blog.php?/archives/9-REST-Service-with-Node.js,-MongoDB-and-Express.html">
      Blob Entry 5
     </a>
     <br/>
     <a href="http://www.dreamsyssoft.com/blog/blog.php?/archives/10-Web-Interface-to-a-Node.js-REST-service-using-Jade,-Stylus,-jQuery-and-AJAX..html">
      Blob Entry 6
     </a>
    </td>
   </tr>
  </table>
  <br/>
  <br/>
 </body>
</html>