<!DOCTYPE html>
<!--[if lt IE 7]&gt;      &lt;html class="no-js lt-ie9 lt-ie8 lt-ie7"&gt; &lt;![endif]-->
<!--[if IE 7]&gt;         &lt;html class="no-js lt-ie9 lt-ie8"&gt; &lt;![endif]-->
<!--[if IE 8]&gt;         &lt;html class="no-js lt-ie9"&gt; &lt;![endif]-->
<!--[if gt IE 8]&gt;&lt;!-->
<html class="no-js">
 <!--&lt;![endif]-->
 <head>
  <meta charset="utf-8"/>
  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>
  <meta content="width=device-width, initial-scale=1" name="viewport"/>
  <title>
   Front End Performance Tuning - 12 Days of Performance - REVSYS
  </title>
  <meta content="Front End Performance Tuning - 12 Days of Performance - REVSYS" property="og:title"/>
  <meta content="frontend, css, javascript, performance, tips" name="keywords"/>
  <meta content="Tips for improving front end web performance.  Part of our 12 Days of Performance Series." name="description"/>
  <meta content="Tips for improving front end web performance.  Part of our 12 Days of Performance Series." property="og:description"/>
  <meta content="website" property="og:type"/>
  <meta content="http://media.revsys.com/apple-touch-icon-144x144.png" property="og:image"/>
  <link href="http://fonts.googleapis.com/css?family=Roboto:400,500|Roboto+Condensed:400,700|Shadows+Into+Light+Two" rel="stylesheet" type="text/css"/>
  <link href="http://media.revsys.com/home/revsys.com/revsys.com/static_deploy/CACHE/css/b1fe15235db4.css" rel="stylesheet" type="text/css"/>
  <script src="http://media.revsys.com/12days/lib/modernizr/modernizr.js">
  </script>
 </head>
 <body>
  <header>
   <div class="row">
    <div class="small-12 medium-7 columns">
     <a href="/12days/" title="12 Days of Christmas Performance">
      <h1>
       12 Days of Christmas Performance
      </h1>
     </a>
    </div>
    <div class="small-12 medium-5 columns">
     <a href="/" title="Revolution Systems">
      <img alt="brought to you by REVSYS" src="http://media.revsys.com/12days/images/12-days-red-header-logo.png"/>
     </a>
    </div>
   </div>
  </header>
  <div class="row content-area" data-equalizer="">
   <div class="medium-8 small-12 columns content" data-equalizer-watch="">
    <main>
     <div class="row">
      <ul class="breadcrumbs">
       <li>
        <a href="/12days/" title="12 Days of Performance Homepage">
         About 12 Days of Performance
        </a>
       </li>
       <li class="current">
        <a href="/12days/front-end-performance/">
         Front End Performance
        </a>
       </li>
      </ul>
     </div>
     <div class="row">
      <div class="small-12 columns">
       <h1>
        Front End Performance
       </h1>
       <blockquote>
        Oh the wifi inside is frightful,
        <br/>
        But the content is so delightful,
        <br/>
        And since we've no place to go,
        <br/>
        Let It Flow! Let It Flow! Let It Flow!
        <br/>
        <cite>
         2400 baud's rendition of Let It Snow!
        </cite>
       </blockquote>
       <p>
        The holidays are a time for being thankful and forgiving the things that
    bug us.  But we can't bring ourselves to forgive this particular trespass,
    because it's so damn easy to fix. If you don't fix these things about your
    sites, we'll be putting coal in your stocking.
       </p>
       <h2>
        Less is More
       </h2>
       <p>
        The rules for front end performance boil down to this:
       </p>
       <p class="inset">
        <strong>
         Deliver smaller content and in ways that reduce the work the browser
        has to do.
        </strong>
       </p>
       <p>
        Simple right? So how do we do that? Here is the TL;DR version:
       </p>
       <ul class="list">
        <li>
         Users can feel 100ms of performance difference. Small things add up.
        </li>
        <li>
         Don't download things twice
        </li>
        <li>
         Reduce the size of your markup, CSS, and Javascript as much as possible
        </li>
        <li>
         Combine CSS and JS into as few files as possible
        </li>
        <li>
         Deliver it over an optimal number of connections
        </li>
        <li>
         Compress it whenever possible over the wire
        </li>
        <li>
         Optimize your images
        </li>
        <li>
         Use the fastest selectors
        </li>
        <li>
         Make the page redraw as little as possible
        </li>
       </ul>
       <h2>
        Far Future Expires Headers
       </h2>
       <p>
        Great we've finally loaded up your big bloated home page with the sole
    intention of clicking your 'Contact Us' link.  When we do, because your
    boss is Ebenezer Scrooge and he wouldn't let the developers put some extra
    coal in the fire, our browser is treated to having to ask if any of the
    412 CSS and JS files on your site that we
        <strong>
         JUST LOADED 2 SECONDS
    AGO
        </strong>
        has changed.
       </p>
       <p>
        Just think of the trillions of wasted bits every day. Poor bits. Don't
    be that guy.
       </p>
       <p>
        See each external resource you load is another thing the browser needs to
    check on to see if there has been an update.  So it does a HEAD request
    back to your server to look at the
        <code class="inline">
         Last-Modified
        </code>
        header. It
    then compares that time to the time it grabed it last and put it into
    the browser cache.
       </p>
       <p>
        On mostly dynamic sites, this is the worst because the last modified time is
    often
        <em>
         right now
        </em>
        so it's always changing even if the content actually
    isn't.
       </p>
       <p>
        However, if we simply tell the browser to chill out we can drastically
    improve the perceived performance of your pages. We do this by setting
    what are often called 'Far Future Expires Headers' or just 'Far Future Headers'.
       </p>
       <p>
        We do this by setting
        <code class="inline">
         Expires
        </code>
        and
        <code class="inline">
         Cache-Control
        </code>
        headers to some date/time into the future. The longer the better, but
    even short amounts help.
       </p>
       <p>
        Assuming we have our static assets like our logo, CSS, and JS in /static/,
    we add this to nginx:
       </p>
       <pre>
        <code class="language-bash">
         location /static/ {
    alias /home/our-site/public_html/static/;
    expires 1h;
}
        </code>
       </pre>
       <p>
        Now, after we've loaded up your big slow resources we at least don't have to
    check on them again for the next hour. This removes an entirely unnecessary
    HEAD request for each and every resource on your page. While they're
    pretty speedy, the browser does have to wait for them all to complete
    before rendering your inner page.
       </p>
       <p>
        Remember kids, HEAD requests aren't free.
       </p>
       <p>
        "But I need my lovely changes to take effect immediately", you say.  Well I
    asked Santa and he said that's bullshit.
       </p>
       <p>
        That bug was there for the last
    week/month/year, the fix can wait another hour. Maybe you're doing a whole
    site redesign and your old CSS is going to severely break the page. Awesome
    when exactly was the last time you did that? 2013? You can change the file
    names of your resources and boom, problem solved.  More on that below.
    Remember, we're optimizing for the browser here, not your lazy need to always
    have CSS which you change rarely, named 'styles.css'.
       </p>
       <h2>
        Reducing the size of your resources
       </h2>
       <p>
        First tip, don't load things you don't need. You likely quit using that one
    Google Font months ago, but are still telling your customers to download it.
    Quit that.
       </p>
       <p>
        If you have a few pages or sections of your site that use larger resources,
    only load those for those pages.  However, common items like your main CSS
    and JS should be loaded site wide even if not ALL of it is being used on
    every page.  Remember, we want to reduce the number of resources we're downloading.
       </p>
       <p>
        This is especially true for mobile users where making another request is
    orders of magnitude slower than when you're at the office on something
    like Google Fiber.
       </p>
       <p>
        So else can we reduce the size of our resources? Compression for one. 99.99%
    of browser support gzip/deflate, start using it. For nginx the setup is like
    this:
       </p>
       <pre>
        <code class="language-bash">
         gzip on;
gzip_disable "msie6";
gzip_min_length 1000;
gzip_http_version 1.0;
gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
        </code>
       </pre>
       <p>
        Seriously this turns a 133KB CSS file on one of our sites into a 27KB download.
       </p>
       <h3>
        Reduce the size of your CSS
       </h3>
       <p>
        If you're using a CSS framework like
        <a href="http://getbootstrap.com/">
         Bootstrap
        </a>
        or
        <a href="http://foundation.zurb.com/">
         Foundation
        </a>
        often your site is only using a
    fraction of the styles in there.  It's easy to just load up the whole thing, but you
    can often shave 50-100K off the size of these frameworks by customizing them down to
    just the parts you're actually going to use.  Sure it takes a few minutes of your time,
    but saves every user of your site some time. Both have customized download pages or
    you can only import the portions you're using in your sass or less configs.
       </p>
       <h3>
        Reduce the size of your images
       </h3>
       <p>
        This can be a big win,
        <strong>
         especially
        </strong>
        for your mobile users.
    We're talking in KBs here.
       </p>
       <p>
        There are lots of options here.  The simplest is turning down the
    quality setting in Photoshop or your thumbnailing tool chain until you can't
    see a perceptible difference. You might piss off a few Retina users, but
your mobile ones will thank you.
       </p>
       <p>
        Many people however are not aware there are lossless options available. Simply
    running your images through tools like these can reduce file sizes.  We've
    seen results from 5-50% depending on the image and format.  Be sure to
    check out:
       </p>
       <ul class="list">
        <li>
         <a href="https://imageoptim.com/">
          ImageOptim
         </a>
        </li>
        <li>
         <a href="https://tinypng.com/">
          tinypng / tinyjpg
         </a>
        </li>
        <li>
         <a href="http://www.gifreducer.com/">
          GIF Reducer
         </a>
        </li>
       </ul>
       <p>
        For thumbnailing, there are lots of different options.  Our personal favorite
    for Django is
        <a href="https://github.com/matthewwithanm/django-imagekit">
         django-imagekit
        </a>
        .
    Keep in mind, it's common to have dozens of thumbnails on list pages so reducing
    each thumbs file size multiplies the win.
       </p>
       <h2>
        Combine your CSS and JS
       </h2>
       <p>
        You've got your CSS and JS separated out into dozens of files. This makes your
    life easier, your code base more modular and easier to understand. We get that.
    But it makes the browser work harder.  Combine them into fewer files for
    production use.
       </p>
       <p>
        How you do that depends on your toolchain. If you're using Django check out
        <a href="https://github.com/django-compressor/django-compressor">
         django-compressor
        </a>
        or
        <a href="https://github.com/cyberdelia/django-pipeline">
         django-pipeline
        </a>
       </p>
       <p>
        Another option is to use
        <a href="http://gulpjs.com">
         gulp
        </a>
        and
        <a href="https://github.com/wearefractal/gulp-concat">
         gulp-concat
        </a>
        to
    do the work for you. Here's a write up on how to
        <a href="http://alfanso.com/concatinating-all-css-files-into-a-single-css-file-using-gulp-js/">
         concatenate all of your CSS files with gulp
        </a>
        .
       </p>
       <p>
        With these tool chains you can also do something nifty.  You can have them
    store the files named with a hash of the underlying components. This let's
    you put
        <strong>
         REAL
        </strong>
        Far Future Headers on them, I'm talking
    like expring them in a year.  Then when you change that one line of CSS,
    it can go out and into production immediately.  It will have a new name,
    all of your user's browsers will download the new version and keep it in
    their cache until the next change you make.
       </p>
       <h2>
        Use Faster Selectors
       </h2>
       <p>
        The selectors you use in your CSS and JS can make a big difference. Read up
    on this and just get in the habit of using the right selector for the right
    job.  It's often a micro-optimization on most sites, but why keep the bad
    habit of using slow stuff when there isn't a downside to learning a better
    way?
       </p>
       <ul class="list">
        <li>
         <a href="http://css-tricks.com/efficiently-rendering-css/">
          Efficiently
        Rendering CSS
         </a>
        </li>
        <li>
         <a href="http://learn.jquery.com/performance/optimize-selectors/">
          Optimize jQuery Selectors
         </a>
        </li>
       </ul>
       <h2>
        Use Faster Javascript
       </h2>
       <p>
        Do you have pages and pages of jQuery code? Are you making hundreds of
    decisions about what should be shown/hidden, adding/removing classes,
    etc? It might be time to rethink your approach.
       </p>
       <p>
        The browser is having to do a lot of work traversing the DOM looking for
    the bits that match your selectors.  Then changing the DOM.  Then repainting
    the page.  There are lots of ways to reduce this work, faster selectors from
    above being one.  However, at a certain point you can't go much further.
       </p>
       <p>
        Enter
        <a href="http://facebook.github.io/react/">
         ReactJS
        </a>
        .  It builds
    your DOM elements for you and keeps track of the state of things.  Then,
    when the situation/data changes, it makes your changes.  It does this
    by using a
        <em>
         Virtual DOM
        </em>
        and calculating the least number of DOM
    changes to implement what needs to happen.  We're big fans and have seen
    it drastically improve the perceived speed of Javascript heavy pages.
       </p>
       <h2>
        Naughty or Nice?
       </h2>
       <p>
        So which is it going to be? Are you going to get onto the RevSys list of
    nice fast sites or the naughty list? If you choose the later, we suppose
the one benefit of getting coal for Christmas is you can use it to help power
the steam engine you likely are still using to get to work.
       </p>
       <p>
        But seriously, none of these changes are hard or seriously work flow altering.
    We hope you choose to give
        <strong>
         YOUR USERS
        </strong>
        the gift of better
    performance this holiday season!
       </p>
      </div>
     </div>
     <div class="row">
      <div class="small-6 columns">
      </div>
      <div class="small-6 columns">
       <a class="next-button right" href="/12days/nginx-tuning/">
        Day 2 - nginx Tuning
        <i class="fa fa-arrow-right">
        </i>
       </a>
      </div>
     </div>
    </main>
   </div>
   <div class="medium-4 small-12 columns nav" data-equalizer-watch="">
    <nav id="menu" role="navigation">
     <ul id="nav" title="12 Days of Performance Links">
      <li class="active">
       <a href="/12days/front-end-performance/">
        <span>
         <i class="fa fa-angle-right fa-lg">
         </i>
         Day 1
        </span>
        Front End Performance
       </a>
      </li>
      <li>
       <a href="/12days/nginx-tuning/">
        <span>
         <i class="fa fa-angle-right fa-lg">
         </i>
         Day 2
        </span>
        nginx Tuning
       </a>
      </li>
      <li>
       <a href="/12days/finding-sources-of-slowness/">
        <span>
         <i class="fa fa-angle-right fa-lg">
         </i>
         Day 3
        </span>
        Finding Sources of Slowness
       </a>
      </li>
      <li>
       <a href="/12days/team-productivity/">
        <span>
         <i class="fa fa-angle-right fa-lg">
         </i>
         Day 4
        </span>
        Team Productivity
       </a>
      </li>
      <li>
       <a href="/12days/unix-sockets/">
        <span>
         <i class="fa fa-angle-right fa-lg">
         </i>
         Day 5
        </span>
        Unix Sockets
       </a>
      </li>
      <li>
       <a href="/12days/caching-django-sessions/">
        <span>
         <i class="fa fa-angle-right fa-lg">
         </i>
         Day 6
        </span>
        Caching Django Sessions
       </a>
      </li>
      <li>
       <a href="/12days/varnish/">
        <span>
         <i class="fa fa-angle-right fa-lg">
         </i>
         Day 7
        </span>
        Varnish
       </a>
      </li>
      <li>
       <a href="/12days/improving-testing/">
        <span>
         <i class="fa fa-angle-right fa-lg">
         </i>
         Day 8
        </span>
        Testing
       </a>
      </li>
      <li>
       <a href="/12days/automate-your-day/">
        <span>
         <i class="fa fa-angle-right fa-lg">
         </i>
         Day 9
        </span>
        Automating Common Tasks
       </a>
      </li>
      <li>
       <a href="/12days/async-workers-celery/">
        <span>
         <i class="fa fa-angle-right fa-lg">
         </i>
         Day 10
        </span>
        Message Queues and async Workers
       </a>
      </li>
      <li>
       <a href="/12days/dont-break-your-cache/">
        <span>
         <i class="fa fa-angle-right fa-lg">
         </i>
         Day 11
        </span>
        Don't Break Your Cache
       </a>
      </li>
      <li>
       <a href="/12days/ingest-data-fast/">
        <span>
         <i class="fa fa-angle-right fa-lg">
         </i>
         Day 12
        </span>
        Ingesting Data Fast
       </a>
      </li>
     </ul>
    </nav>
   </div>
  </div>
  <footer>
   <div class="row">
    <div class="footer-container">
     <div class="medium-4 columns">
      <p>
       Lovingly brought to you by the elves at
       <a href="/" title="Link to Revolution Systems homepage">
        <img alt="RevSYS Logo Small" src="http://media.revsys.com/12days/images/revsys-logo-small.png"/>
       </a>
      </p>
      <p>
       We're
       <a href="/services/django/consulting/">
        Django Consultants
       </a>
       . We help companies
       <a href="/services/django/development/">
        build
       </a>
       , manage, scale and transistion to Python.
      </p>
     </div>
     <div class="medium-4 columns">
      <h4>
       Happy Holidays!
      </h4>
      <p>
       Found a mistake or have a suggestion?
       <a href="mailto:info@revsys.com">
        Email us
       </a>
       or let us know on
       <a href="http://twitter.com/revsys">
        Twitter
       </a>
      </p>
      <p>
       You can also signup for our
       <a href="http://eepurl.com/wBHg1">
        low traffic newsletter
       </a>
       to get other tips and
                find out when we release new stuff.
      </p>
     </div>
     <div class="medium-4 columns contact">
      <h5>
       Stay in Touch
      </h5>
      <a href="http://twitter.com/revsys" title="Follow @revsys on Twitter">
       <i class="fa fa-twitter fa-3x">
       </i>
      </a>
      <a href="mailto:info@revsys.com" title="Contact us via Email">
       <i class="fa fa-envelope-o fa-3x">
       </i>
      </a>
      <a href="http://feeds.feedburner.com/RevolutionSystemsBlog" title="Subscribe to our Blog's RSS Feed">
       <i class="fa fa-rss fa-3x">
       </i>
      </a>
     </div>
    </div>
   </div>
   <div class="row black">
    <div class="small-12 columns">
     <small>
      Copyright  2015 Revolution Systems, LLC. All rights reserved.
     </small>
    </div>
   </div>
  </footer>
  <script async="" src="//platform.twitter.com/widgets.js" type="text/javascript">
  </script>
  <script src="//ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js">
  </script>
  <script src="http://media.revsys.com/home/revsys.com/revsys.com/static_deploy/CACHE/js/92a9c6a9d1ba.js" type="text/javascript">
  </script>
 </body>
</html>