<!DOCTYPE html>
<html lang="en">
 <head>
  <meta charset="utf-8"/>
  <meta content="width=device-width, initial-scale=1" name="viewport"/>
  <title>
   A Graphical Explanation Of Javascript Closures In A jQuery Context
  </title>
  <meta content="jquery,javascript,closure,scope chain,prototype chain" name="Keywords"/>
  <meta content="Ben Nadel uses code graphics in an attempt to better explain the Javascript Closure and its use in jQuery." name="Description"/>
  <link href="/favicon.png" rel="shortcut icon" type="image/ico"/>
  <link href="/index.cfm?event=blog.rss" rel="alternate" title="Ben Nadel's ColdFusion, JavaScript, User Experience (UX), and Web Development RSS" type="application/rss+xml"/>
  <link href="https://plus.google.com/108976367067760160494?rel=author" rel="publisher"/>
  <meta content="4BMHbbVgHMewa8Orm/PNkp0/RtWXuI4Fh/IKPkE2y7A=" name="verify-v1"/>
  <link href="//fonts.googleapis.com/css?family=Merriweather:300,400,700,900|Open+Sans:300,400,600,700,400italic,300italic" rel="stylesheet" type="text/css"/>
  <link href="/linked/css/bennadel.css?v=2015-05-15" rel="stylesheet" type="text/css"/>
 </head>
 <body id="body">
  <header class="l-site-header">
   <div class="masthead">
    <a class="title" href="/index.cfm" title="Ben Nadel on User Experience (UX), JavaScript, ColdFusion, Node.js, Life, and Love.">
     Ben Nadel
    </a>
    <div class="tagline">
     On User Experience (UX) Design, JavaScript, ColdFusion, Node.js, Life, and Love.
    </div>
   </div>
   <nav class="active-blog">
    <a class="root" href="#primary-navigation">
     Navigation:
    </a>
    <ul class="items" id="primary-navigation">
     <li class="blog">
      <a href="/blog/recent-blog-entries.htm" title="Ben Nadel's Blog On Obsessively Thorough Web Application Development.">
       Home
      </a>
     </li>
     <!--
-->
     <li class="projects">
      <a href="/projects/overview.htm" title="Ben Nadel's open source web development projects.">
       Projects
      </a>
     </li>
     <!--
-->
     <li class="about">
      <a href="/about/about-ben-nadel.htm" title="Learn more about Ben Nadel, Co-founder of InVision App, Inc.">
       About Me
      </a>
     </li>
     <!--
-->
     <li class="ask_ben">
      <a href="/ask-ben/ask-ben-nadel.htm" title="Ask Ben Nadel your web development questions.">
       Ask Ben
      </a>
     </li>
     <!--
-->
     <li class="contact">
      <a href="/contact/contact-ben-nadel.htm" title="Contact Ben Nadel for any web development consutling.">
       Contact
      </a>
     </li>
     <!--
-->
     <li class="jobs">
      <a href="/jobs/web-development-jobs.htm" title="Find your next web development job on Ben Nadel's job board.">
       Jobs ( 6 )
      </a>
     </li>
     <!--
-->
     <li class="people">
      <a href="/people/who-rock-my-world.htm" title="The amazing people who rock Ben Nadel's world on the daily!">
       People
      </a>
     </li>
     <!--
-->
     <li class="rss">
      <a class="rss" href="/index.cfm?event=blog.rss" title="The BenNadel.com RSS feed.">
       RSS
      </a>
     </li>
    </ul>
   </nav>
   <figure>
    <img alt="Ben Nadel at RIA Unleashed (Nov. 2009) with: Jason Delmore" data-rel="227" src="/images/header/photos/jason_delmore.jpg"/>
    <figcaption>
     Ben Nadel at RIA Unleashed (Nov. 2009) with:
     <span class="person">
      <a href="http://www.cfinsider.com/" target="_blank">
       Jason Delmore
      </a>
     </span>
    </figcaption>
   </figure>
  </header>
  <div class="l-site-body" id="site-content">
   <div class="l-site-content content">
    <article data-gist-id="" data-id="1482" id="blog-post">
     <header class="m-post-header">
      <h1>
       A Graphical Explanation Of Javascript Closures In A jQuery Context
      </h1>
      <div class="meta">
       By
       <a class="author" href="https://plus.google.com/108976367067760160494?rel=author" title="Author: Ben Nadel on Google+">
        Ben Nadel
       </a>
       on
       <time datetime="2009-02-04">
        February 4, 2009
       </time>
      </div>
      <div class="tags">
       Tags:
       <a class="tag" href="/blog/tags/6-javascript-dhtml-blog-entries.htm">
        Javascript / DHTML
       </a>
      </div>
     </header>
     <p>
      Over the weekend, I was working on my
      <a href="http://www.nycfug.com/meetings/index.cfm" target="_blank">
       in-depth jQuery presentation for the New York ColdFusion User Group
      </a>
      . As part of the presentation, I wanted to discuss the beauty of Javascript "closures" and how jQuery makes tremendous use of them. Javascript closures can be a very hard thing to wrap your head around, especially when you are faced with vague
      <a href="http://www.jibbering.com/faq/faq_notes/closures.html" target="_blank">
       definitions
      </a>
      like:
     </p>
     <p class="blockquote">
      A "closure" is an expression (typically a function) that can have free variables together with an environment that binds those variables (that "closes" the expression).
     </p>
     <p>
      I mean, come on, what the heck does that mean? I know a bit about closures and that definition doesn't make sense to me. Like I said, closures can be a hard thing to really understand. As such, I wanted to try and explain them [closures] with the help of some graphics because, as they say, a picture is worth a thousand words.
     </p>
     <p>
      First, let's look a simple jQuery demo:
     </p>
     <table border="0" cellpadding="0" cellspacing="0" class="imageborder" width="100%">
      <tr>
       <td rowspan="3" width="50%">
        <br/>
       </td>
       <td class="nw">
        <br/>
       </td>
       <td class="n">
        <br/>
       </td>
       <td class="ne">
        <br/>
       </td>
       <td rowspan="3" width="50%">
        <br/>
       </td>
      </tr>
      <tr>
       <td class="w">
        <br/>
       </td>
       <td class="c">
        <img alt="Javascript Closure Explanation - Plain Method Code." height="655" src="http://www.bennadel.com/resources/uploads/closures_plain_code.gif" width="545"/>
       </td>
       <td class="e">
        <br/>
       </td>
      </tr>
      <tr>
       <td class="sw">
        <br/>
       </td>
       <td class="s">
        <br/>
       </td>
       <td class="se">
        <br/>
       </td>
      </tr>
     </table>
     <p>
      In this code, we are adding click event handlers to all of the links in the document. These click event handlers, when triggered, will alert the index of the given link in the context of the entire set of document links. Of course, the intent of the code is secondary to the demonstration. What's of primary importance here is structure of the code. Take a look at the functions that are being defined:
     </p>
     <table border="0" cellpadding="0" cellspacing="0" class="imageborder" width="100%">
      <tr>
       <td rowspan="3" width="50%">
        <br/>
       </td>
       <td class="nw">
        <br/>
       </td>
       <td class="n">
        <br/>
       </td>
       <td class="ne">
        <br/>
       </td>
       <td rowspan="3" width="50%">
        <br/>
       </td>
      </tr>
      <tr>
       <td class="w">
        <br/>
       </td>
       <td class="c">
        <img alt="Javascript Closure Explanation - Nested Methods Outlined." height="655" src="http://www.bennadel.com/resources/uploads/closures_function_outline.gif" width="545"/>
       </td>
       <td class="e">
        <br/>
       </td>
      </tr>
      <tr>
       <td class="sw">
        <br/>
       </td>
       <td class="s">
        <br/>
       </td>
       <td class="se">
        <br/>
       </td>
      </tr>
     </table>
     <p>
      Notice that we are defining three anonymous methods in this demo. Each of these methods is defined within a parent context. The outer-most method is defined in the context of the window (theoretically based on the visible code); the middle method is defined in the context of the outer-most method; and the inner-most method is defined in the context of the middle method.
     </p>
     <p>
      In Javascript, a given context always has access to its parent context. To be honest, the mechanisms behind this visibility are a bit beyond my purview, but I know it has something to do with scope chains (or is it prototype chains - definitely some sort of chain). As such, each method in our demonstration has access not only to its locally defined variables, but also the variables available in its parent context:
     </p>
     <table border="0" cellpadding="0" cellspacing="0" class="imageborder" width="100%">
      <tr>
       <td rowspan="3" width="50%">
        <br/>
       </td>
       <td class="nw">
        <br/>
       </td>
       <td class="n">
        <br/>
       </td>
       <td class="ne">
        <br/>
       </td>
       <td rowspan="3" width="50%">
        <br/>
       </td>
      </tr>
      <tr>
       <td class="w">
        <br/>
       </td>
       <td class="c">
        <img alt="Javascript Closure Explanation - Methods Have Access To Their Parent Context." height="655" src="http://www.bennadel.com/resources/uploads/closures_variables_in_parent_context.gif" width="545"/>
       </td>
       <td class="e">
        <br/>
       </td>
      </tr>
      <tr>
       <td class="sw">
        <br/>
       </td>
       <td class="s">
        <br/>
       </td>
       <td class="se">
        <br/>
       </td>
      </tr>
     </table>
     <p>
      Notice that in the inner-most method, it has to move up one scope in the parent chain to find "intLinkIndex," but it has to move up two scopes in the chain to find the "jLinks" variable. While it might not be obvious, the two-parent-context-jump is following the same exact rules - first, the inner-most method looks for jLinks in its own context. Since it's not a local variable, it can't find it. Then, it asks its parent context (the middle method) for the variable. The middle method checks its local scope and can't find it, so it passes this request up to its parent context, the outer-most method. And, because each context has access to its parent context, this variable request is easily passed up the context chain.
     </p>
     <p>
      Ok, so far so good; now, let's really get into closures. Keeping this whole parent context concept in mind, take a look at where these defined methods are ending up:
     </p>
     <table border="0" cellpadding="0" cellspacing="0" class="imageborder" width="100%">
      <tr>
       <td rowspan="3" width="50%">
        <br/>
       </td>
       <td class="nw">
        <br/>
       </td>
       <td class="n">
        <br/>
       </td>
       <td class="ne">
        <br/>
       </td>
       <td rowspan="3" width="50%">
        <br/>
       </td>
      </tr>
      <tr>
       <td class="w">
        <br/>
       </td>
       <td class="c">
        <img alt="Javascript Closure Explanation - Each Method Definition Is Passed Out Of Its Parent Context." height="655" src="http://www.bennadel.com/resources/uploads/closures_passed_out_of_parent_context.gif" width="545"/>
       </td>
       <td class="e">
        <br/>
       </td>
      </tr>
      <tr>
       <td class="sw">
        <br/>
       </td>
       <td class="s">
        <br/>
       </td>
       <td class="se">
        <br/>
       </td>
      </tr>
     </table>
     <p>
      As we are defining these anonymous methods, we are using the each() method and the click() method to pass these functions away from their parent context. Where are they going? We don't know - they're being passing into another context altogether. Sure, from the demo code, it looks like they are getting passed to jLinks and jThis respectively; but, the fact is, once these method references are passed into those foreign contexts, we can't say with certainty how they are being used. Are they transient? Are they being cached somehow in the window object for the entire life of the page?
     </p>
     <p>
      These are questions that we can't answer; but, more importantly, these are also questions that the browser's memory management system can't answer (speaking with personification). And, because it doesn't know where these methods are ending up, it can't garbage collect (destroy) the original parent context of the method definitions. That's the power and beauty of the Javascript closure right there - see, even though the methods are being passed away from their original context, due to the scope chains in place, they still have access to their parent context and to all the variables available in their parent context.
     </p>
     <p>
      So, the real message to take away here is that when you pass a method reference out of the context in which it was defined, the method still has access to its parent context. And, once you understand and embrace this, it can be leveraged in some really cool ways (as seen in this jQuery example). This is not the most in-depth explanation of closures, but hopefully these graphics have helped you to better understand the closure mechanism.
     </p>
     <div class="m-tweet-this">
      <a href="https://twitter.com/intent/tweet?text=Deep%20thoughts%20by%20%40BenNadel%20%2D%20A%20Graphical%20Explanation%20Of%20Javascript%20Closures%20In%20A%20jQuery%20Context%20http%3A%2F%2Fbjam%2Ein%2F1482" onclick="window.open( this.href, 'tweetThis1482', 'width=600,height=425' ).focus()" target="tweetThis1482">
       <span class="label">
        Tweet This
       </span>
       <span class="message">
        Deep thoughts by @BenNadel - A Graphical Explanation Of Javascript Closures In A jQuery Context
       </span>
      </a>
      <span class="thanks">
       Thanks my man 
       <strong>
        you rock the party that rocks the body!
       </strong>
      </span>
     </div>
     <div class="hrule">
      <br/>
     </div>
     <!-- BEGIN: Related Posts. -->
     <aside class="m-related-posts">
      <h3>
       Enjoyed This? You Might Also Enjoy Reading:
      </h3>
      <ul style="overflow: auto ; height: 120px ;">
       <li>
        <a href="/blog/2798-using-method-chaining-with-the-revealing-module-pattern-in-javascript.htm">
         Using Method Chaining With The Revealing Module Pattern In JavaScript
        </a>
       </li>
       <li>
        <a href="/blog/2424-setting-prototype-properties-using-inherited-scope-methods-in-angularjs.htm">
         Setting Prototype Properties Using Inherited Scope Methods In AngularJS
        </a>
       </li>
       <li>
        <a href="/blog/2269-creating-a-private-scope-by-extending-the-public-this-scope-in-javascript.htm">
         Creating A Private Scope By Extending The Public THIS Scope In JavaScript
        </a>
       </li>
       <li>
        <a href="/blog/2134-a-random-exploration-of-closure-use-cases-in-javascript.htm">
         A Random Exploration Of Closure Use Cases In Javascript
        </a>
       </li>
       <li>
        <a href="/blog/2125-the-power-of-closures-deferred-object-bindings-in-jquery-1-5.htm">
         The Power Of Closures - Deferred Object Bindings In jQuery 1.5
        </a>
       </li>
       <li>
        <a href="/blog/2001-using-jquery-s-proxy-method-in-event-binding-and-unbinding.htm">
         Using jQuery's Proxy() Method In Event Binding And Unbinding
        </a>
       </li>
       <li>
        <a href="/blog/1989-using-named-callback-functions-in-javascript-methods.htm">
         Using Named Callback Functions In Javascript Methods
        </a>
       </li>
       <li>
        <a href="/blog/1988-using-named-functions-within-self-executing-function-blocks-in-javascript.htm">
         Using Named Functions Within Self-Executing Function Blocks In Javascript
        </a>
       </li>
       <li>
        <a href="/blog/1929-using-the-with-keyword-with-javascript-s-function-constructor.htm">
         Using The WITH Keyword With Javascript's Function() Constructor
        </a>
       </li>
       <li>
        <a href="/blog/1927-faking-context-in-javascript-s-function-constructor.htm">
         Faking Context In Javascript's Function() Constructor
        </a>
       </li>
       <li>
        <a href="/blog/1926-exploring-javascript-s-eval-capabilities-and-closure-scoping.htm">
         Exploring Javascript's eval() Capabilities And Closure Scoping
        </a>
       </li>
       <li>
        <a href="/blog/1909-javascript-function-constructor-does-not-create-a-closure.htm">
         Javascript Function() Constructor Does Not Create A Closure
        </a>
       </li>
       <li>
        <a href="/blog/1838-wrapping-the-window-object-in-a-jquery-wrapper.htm">
         Wrapping The Window Object In A jQuery Wrapper
        </a>
       </li>
       <li>
        <a href="/blog/1813-invoking-a-coldfusion-function-with-a-closure-like-caller-based-variable-binding.htm">
         Invoking A ColdFusion Function With A Closure-Like CALLER-Based Variable Binding
        </a>
       </li>
       <li>
        <a href="/blog/534-the-beauty-of-the-jquery-each-method.htm">
         The Beauty Of The jQuery Each() Method
        </a>
       </li>
       <li>
        <a href="/blog/54-javascript-scopes-and-variable-binding.htm">
         Javascript Scopes and Variable Binding
        </a>
       </li>
      </ul>
     </aside>
     <!-- END: Related Posts. -->
     <div class="hrule">
      <br/>
     </div>
     <!-- BEGIN: Job Listings. -->
     <div class="m-recent-jobs">
      <h3>
       Looking For A
       <em>
        New Job
       </em>
       ?
      </h3>
      <div class="actions">
       <a href="/jobs/web-development-jobs.htm" title="Find your next web development job on Ben Nadel's job board.">
        View All Jobs
       </a>
       |
       <a href="/jobs/post-a-job-listing.htm" title="Post a job now! Only $29!">
        Post A Job - Only $29
       </a>
       
      </div>
      <ul>
       <li>
        <a href="/jobs/313-Web-Applications-Developer.htm" title="Your new job: Web Applications Developer">
         <span class="title">
          Web Applications Developer
         </span>
         <span class="company">
          at University of California, Davis
         </span>
        </a>
       </li>
       <li>
        <a href="/jobs/312-Advanced-ColdFusion-Developer.htm" title="Your new job: Advanced ColdFusion Developer">
         <span class="title">
          Advanced ColdFusion Developer
         </span>
         <span class="company">
          at HD Web Studio
         </span>
        </a>
       </li>
       <li>
        <a href="/jobs/311-ColdFusion-Developer-Programmer.htm" title="Your new job: ColdFusion Developer / Programmer">
         <span class="title">
          ColdFusion Developer / Programmer
         </span>
         <span class="company">
          at Blue Tangerine Solutions
         </span>
        </a>
       </li>
       <li>
        <a href="/jobs/310-ColdFusion-Web-Developer-Junior-or-Mid-Level-.htm" title="Your new job: ColdFusion Web Developer (Junior or Mid-Level)">
         <span class="title">
          ColdFusion Web Developer (Junior or Mid-Level)
         </span>
         <span class="company">
          at Pomegranate
         </span>
        </a>
       </li>
       <li>
        <a href="/jobs/309-Full-Stack-Software-Developer.htm" title="Your new job: Full-Stack Software Developer">
         <span class="title">
          Full-Stack Software Developer
         </span>
         <span class="company">
          at ClearPoint Strategy
         </span>
        </a>
       </li>
      </ul>
      <div class="kiva">
       100% of job board revenue is donated to Kiva.
       <em>
        Loans that change lives
       </em>
       
       <a href="/jobs/web-development-jobs.htm#kiva">
        Find out more
       </a>
       
      </div>
     </div>
     <!-- END: Job Listings. -->
     <div class="hrule">
      <br/>
     </div>
     <!-- BEGIN: Comments. -->
     <section class="m-comments">
      <h2>
       Reader Comments
      </h2>
      <!-- BEGIN: Comment. -->
      <article class="comment " id="comments_15198">
       <div class="meta">
        <img class="avatar" src="//www.gravatar.com/avatar/5de65a5045dc655961673c4004abe5f1?s=120&amp;d=http%3A%2F%2Fwww%2Ebennadel%2Ecom%2Fimages%2Fgravatar%2Farnold%2Ejpg"/>
        <a class="author" href="/members/2822-brian-love.htm">
         Brian Love
        </a>
        <a class="date" href="#comments_15198">
         <time datetime="2009-02-04">
          Feb 4, 2009 at 10:48 AM
         </time>
        </a>
        <div class="count">
         2 Comments
        </div>
       </div>
       <div class="content">
        <p>
         Ben:  Good explanation -- one of the best explanations I've seen.
        </p>
        <p>
         There is also a great video on Advaned JS by Douglas Crockford that goes into details on how this works behind the scenes.  Check it out.. its available in the YUI theater:
         <a href="http://video.yahoo.com/watch/111585/1027823" target="_blank">
          http://video.yahoo.com/watch/111585/1027823
         </a>
        </p>
       </div>
      </article>
      <!-- END: Comment. -->
      <!-- BEGIN: Comment. -->
      <article class="comment " id="comments_15200">
       <div class="meta">
        <img class="avatar" src="//www.gravatar.com/avatar/cfe299b8de6cd787c5f99cfbe23de7bd?s=120&amp;d=http%3A%2F%2Fwww%2Ebennadel%2Ecom%2Fimages%2Fgravatar%2Farnold%2Ejpg"/>
        <a class="author" href="/members/2134-rick-o.htm">
         Rick O
        </a>
        <a class="date" href="#comments_15200">
         <time datetime="2009-02-04">
          Feb 4, 2009 at 11:00 AM
         </time>
        </a>
        <div class="count">
         153 Comments
        </div>
       </div>
       <div class="content">
        <p>
         I second Brian's comment.  As I was reading through the post I was thinking I'd have to find the same video.
        </p>
        <p>
         Pretty much all of the Crockford videos on Yahoo! are worth your time.  Some of them get mind-bendingly complex, but they'll really open your eyes.
        </p>
        <p>
         Having said all of that, I'll also say that your post is an excellent explanation of a very confusing concept.  Very nicely done.
        </p>
       </div>
      </article>
      <!-- END: Comment. -->
      <!-- BEGIN: Comment. -->
      <article class="comment ben" id="comments_15201">
       <div class="meta">
        <img class="avatar" src="//www.gravatar.com/avatar/f9bbc701ca6770ef482cc1e172344e25?s=120&amp;d=http%3A%2F%2Fwww%2Ebennadel%2Ecom%2Fimages%2Fgravatar%2Farnold%2Ejpg"/>
        <a class="author" href="/members/1851-ben-nadel.htm">
         Ben Nadel
        </a>
        <a class="date" href="#comments_15201">
         <time datetime="2009-02-04">
          Feb 4, 2009 at 11:21 AM
         </time>
        </a>
        <div class="count">
         12,287 Comments
        </div>
       </div>
       <div class="content">
        <p>
         Thanks guys. I'll have to check out the YUI videos. I think I went there once and was just overwhelmed with the amount of content :) Time to get over that fear!
        </p>
       </div>
      </article>
      <!-- END: Comment. -->
      <!-- BEGIN: Comment. -->
      <article class="comment " id="comments_15205">
       <div class="meta">
        <img class="avatar" src="//www.gravatar.com/avatar/202a9b431ab3afa93ca8571fbffbd01e?s=120&amp;d=http%3A%2F%2Fwww%2Ebennadel%2Ecom%2Fimages%2Fgravatar%2Farnold%2Ejpg"/>
        <a class="author" href="/members/2788-aaron.htm">
         Aaron
        </a>
        <a class="date" href="#comments_15205">
         <time datetime="2009-02-04">
          Feb 4, 2009 at 2:29 PM
         </time>
        </a>
        <div class="count">
         29 Comments
        </div>
       </div>
       <div class="content">
        <p>
         Looking forward to the presentation next week!
        </p>
       </div>
      </article>
      <!-- END: Comment. -->
      <!-- BEGIN: Comment. -->
      <article class="comment ben" id="comments_15206">
       <div class="meta">
        <img class="avatar" src="//www.gravatar.com/avatar/f9bbc701ca6770ef482cc1e172344e25?s=120&amp;d=http%3A%2F%2Fwww%2Ebennadel%2Ecom%2Fimages%2Fgravatar%2Farnold%2Ejpg"/>
        <a class="author" href="/members/1851-ben-nadel.htm">
         Ben Nadel
        </a>
        <a class="date" href="#comments_15206">
         <time datetime="2009-02-04">
          Feb 4, 2009 at 2:31 PM
         </time>
        </a>
        <div class="count">
         12,287 Comments
        </div>
       </div>
       <div class="content">
        <p>
         @Aaron,
        </p>
        <p>
         Oh heck yeah!
        </p>
       </div>
      </article>
      <!-- END: Comment. -->
      <!-- BEGIN: Comment. -->
      <article class="comment " id="comments_15207">
       <div class="meta">
        <img class="avatar" src="//www.gravatar.com/avatar/755c8de62a6b84adb347797f374670c9?s=120&amp;d=http%3A%2F%2Fwww%2Ebennadel%2Ecom%2Fimages%2Fgravatar%2Farnold%2Ejpg"/>
        <a class="author" href="/members/1797-marcos-placona.htm">
         Marcos Placona
        </a>
        <a class="date" href="#comments_15207">
         <time datetime="2009-02-04">
          Feb 4, 2009 at 3:28 PM
         </time>
        </a>
        <div class="count">
         14 Comments
        </div>
       </div>
       <div class="content">
        <p>
         You're a star!!! That's a really good explanation!!!!!!!! Thanks for that Ben
        </p>
       </div>
      </article>
      <!-- END: Comment. -->
      <!-- BEGIN: Comment. -->
      <article class="comment " id="comments_15216">
       <div class="meta">
        <img class="avatar" src="//www.gravatar.com/avatar/265b32c59a3233561c6cbfa25101537a?s=120&amp;d=http%3A%2F%2Fwww%2Ebennadel%2Ecom%2Fimages%2Fgravatar%2Farnold%2Ejpg"/>
        <a class="author" href="/members/2890-jim.htm">
         Jim
        </a>
        <a class="date" href="#comments_15216">
         <time datetime="2009-02-04">
          Feb 4, 2009 at 8:48 PM
         </time>
        </a>
        <div class="count">
         10 Comments
        </div>
       </div>
       <div class="content">
        <p>
         What makes most of this possible is that JavaScript is "lexically scoped."  This means that something is in the scope in which it was defined--not where it ends up.  Wherever I wrote the function, it is in (and stays in) that scope.
        </p>
        <p>
         Lexical scoping and lambda (anonymous) functions combined with JavaScript's awesome chaining capabilities also make for some brilliant ways to namespace your projects and emulate class-like method/property access-control (i.e. public and private).  It is what makes jQuery possible!
        </p>
        <p>
         Once you wrap your head around these concepts, JavaScript becomes a sexy and extremely flexible and powerful language.  Yes, I called a programming language sexy!
        </p>
       </div>
      </article>
      <!-- END: Comment. -->
      <!-- BEGIN: Comment. -->
      <article class="comment " id="comments_15217">
       <div class="meta">
        <img class="avatar" src="//www.gravatar.com/avatar/265b32c59a3233561c6cbfa25101537a?s=120&amp;d=http%3A%2F%2Fwww%2Ebennadel%2Ecom%2Fimages%2Fgravatar%2Farnold%2Ejpg"/>
        <a class="author" href="/members/2890-jim.htm">
         Jim
        </a>
        <a class="date" href="#comments_15217">
         <time datetime="2009-02-04">
          Feb 4, 2009 at 8:50 PM
         </time>
        </a>
        <div class="count">
         10 Comments
        </div>
       </div>
       <div class="content">
        <p>
         ...continued from my previous comment...
        </p>
        <p>
         I forgot to add that the chaining capabilities allow for "self executing" lambdas which is one of the coolest namespacing tools available.
        </p>
       </div>
      </article>
      <!-- END: Comment. -->
      <!-- BEGIN: Comment. -->
      <article class="comment " id="comments_15229">
       <div class="meta">
        <img class="avatar" src="//www.gravatar.com/avatar/0798df5e6e970c56326bd6ba8eb30ef3?s=120&amp;d=http%3A%2F%2Fwww%2Ebennadel%2Ecom%2Fimages%2Fgravatar%2Farnold%2Ejpg"/>
        <a class="author" href="/members/2895-cody-lindley.htm">
         cody lindley
        </a>
        <a class="date" href="#comments_15229">
         <time datetime="2009-02-05">
          Feb 5, 2009 at 10:17 AM
         </time>
        </a>
        <div class="count">
         4 Comments
        </div>
       </div>
       <div class="content">
        <p>
         Great explanation, love the images. Nice to see such a pragmatic explanation, without to much detail to confuse the topic.
        </p>
       </div>
      </article>
      <!-- END: Comment. -->
      <!-- BEGIN: Comment. -->
      <article class="comment ben" id="comments_15239">
       <div class="meta">
        <img class="avatar" src="//www.gravatar.com/avatar/f9bbc701ca6770ef482cc1e172344e25?s=120&amp;d=http%3A%2F%2Fwww%2Ebennadel%2Ecom%2Fimages%2Fgravatar%2Farnold%2Ejpg"/>
        <a class="author" href="/members/1851-ben-nadel.htm">
         Ben Nadel
        </a>
        <a class="date" href="#comments_15239">
         <time datetime="2009-02-05">
          Feb 5, 2009 at 2:04 PM
         </time>
        </a>
        <div class="count">
         12,287 Comments
        </div>
       </div>
       <div class="content">
        <p>
         @Jim,
        </p>
        <p>
         I have seen one or two examples of public/private emulation with Javascript. At the time, I didn't understand enough Javascript to see how that was working. Maybe it would be different now.
        </p>
        <p>
         Yeah, it is sexy stuff!
        </p>
       </div>
      </article>
      <!-- END: Comment. -->
      <!-- BEGIN: Comment. -->
      <article class="comment " id="comments_15326">
       <div class="meta">
        <img class="avatar" src="//www.gravatar.com/avatar/83f49a8da1dc030d9f671f521839aecc?s=120&amp;d=http%3A%2F%2Fwww%2Ebennadel%2Ecom%2Fimages%2Fgravatar%2Farnold%2Ejpg"/>
        <a class="author" href="/members/2909-zorg.htm">
         zorg
        </a>
        <a class="date" href="#comments_15326">
         <time datetime="2009-02-10">
          Feb 10, 2009 at 11:05 AM
         </time>
        </a>
        <div class="count">
         3 Comments
        </div>
       </div>
       <div class="content">
        <p>
         A very thorough explanation of Javascript closures can be found here (take a deep breath) :
         <br/>
         <a href="http://www.jibbering.com/faq/faq_notes/closures.html" target="_blank">
          http://www.jibbering.com/faq/faq_notes/closures.html
         </a>
        </p>
        <p>
         &gt; A "closure" is an expression (typically a function) that can have free
         <br/>
         &gt; variables together with an environment that binds those variables (that
         <br/>
         &gt; "closes" the expression).
         <br/>
         &gt; I mean, come on, what the heck does that mean? I know a bit about
         <br/>
         &gt; closures and that definition doesn't make sense to me.
        </p>
        <p>
         too bad, because it's exactly what a closure is !
         <br/>
         Free variables are identifiers in the function body that are not parameters.
         <br/>
         An environment is a list of names and their associated values, used to evaluate expressions.
         <br/>
         So there you have it : a closure is an expression that can look up an environment for the values of its free variables or , to use your own terms, an expression that has "access to their parent context"
        </p>
        <p>
         &gt; As we are defining these anonymous methods, we are using the each()
         <br/>
         &gt; method and the click() method to pass these functions away from their
         <br/>
         &gt; parent context. Where are they going? We don't know - they're being
         <br/>
         &gt; passing into another context altogether. Sure, from the demo code, it
         <br/>
         &gt; looks like they are getting passed to jLinks and jThis respectively; but,
         <br/>
         &gt; the fact is, once these method references are passed into those foreign
         <br/>
         &gt; contexts, we can't say with certainty how they are being used. Are
         <br/>
         &gt; they transient? Are they being cached somehow in the window object
         <br/>
         &gt; for the entire life of the page? These are questions that we can't answer...
        </p>
        <p>
         they can be answered though :
         <br/>
         in the case of jThis, the anonymous function is registered as a handler for the onclick event (think about it as being referenced by the &lt;a&gt; element itself)
         <br/>
         in the case of jLinks, the anonymous function is executed for each (index, obj) in jLinks, ... maybe that's what you call transient ? In any case once that block has executed, that function is gone...
        </p>
       </div>
      </article>
      <!-- END: Comment. -->
      <!-- BEGIN: Comment. -->
      <article class="comment ben" id="comments_15327">
       <div class="meta">
        <img class="avatar" src="//www.gravatar.com/avatar/f9bbc701ca6770ef482cc1e172344e25?s=120&amp;d=http%3A%2F%2Fwww%2Ebennadel%2Ecom%2Fimages%2Fgravatar%2Farnold%2Ejpg"/>
        <a class="author" href="/members/1851-ben-nadel.htm">
         Ben Nadel
        </a>
        <a class="date" href="#comments_15327">
         <time datetime="2009-02-10">
          Feb 10, 2009 at 11:10 AM
         </time>
        </a>
        <div class="count">
         12,287 Comments
        </div>
       </div>
       <div class="content">
        <p>
         @Zorg,
        </p>
        <p>
         That is a great link and is, in fact, where I got the original definition for closures.
        </p>
        <p>
         As far as where the functions go, I am sorry if I did not communicate well; I understand that yes, we can look into the Click event wiring and actually see where it goes; what I mean to get across in a more abstract way is that when a method is passed out of its parent context, we should not
         <strong>
          assume
         </strong>
         anything about where it goes or how long it lives. And, in doing so, we can start to become comfortable with the idea that the variables in its parent scope must be kept around in case the method reference is ever executed.
        </p>
        <p>
         I wanted to get people comfortable with the idea of closures at a high level, not so much with the specifics of the behind the scenes.
        </p>
       </div>
      </article>
      <!-- END: Comment. -->
      <!-- BEGIN: Comment. -->
      <article class="comment " id="comments_15329">
       <div class="meta">
        <img class="avatar" src="//www.gravatar.com/avatar/83f49a8da1dc030d9f671f521839aecc?s=120&amp;d=http%3A%2F%2Fwww%2Ebennadel%2Ecom%2Fimages%2Fgravatar%2Farnold%2Ejpg"/>
        <a class="author" href="/members/2909-zorg.htm">
         zorg
        </a>
        <a class="date" href="#comments_15329">
         <time datetime="2009-02-10">
          Feb 10, 2009 at 11:46 AM
         </time>
        </a>
        <div class="count">
         3 Comments
        </div>
       </div>
       <div class="content">
        <p>
         @Ben
        </p>
        <p>
         &gt; I wanted to get people comfortable with the idea of closures at a high
         <br/>
         &gt; level, not so much with the specifics of the behind the scenes.
        </p>
        <p>
         Sorry, I missed that :)
        </p>
       </div>
      </article>
      <!-- END: Comment. -->
      <!-- BEGIN: Comment. -->
      <article class="comment ben" id="comments_15330">
       <div class="meta">
        <img class="avatar" src="//www.gravatar.com/avatar/f9bbc701ca6770ef482cc1e172344e25?s=120&amp;d=http%3A%2F%2Fwww%2Ebennadel%2Ecom%2Fimages%2Fgravatar%2Farnold%2Ejpg"/>
        <a class="author" href="/members/1851-ben-nadel.htm">
         Ben Nadel
        </a>
        <a class="date" href="#comments_15330">
         <time datetime="2009-02-10">
          Feb 10, 2009 at 11:50 AM
         </time>
        </a>
        <div class="count">
         12,287 Comments
        </div>
       </div>
       <div class="content">
        <p>
         @Zorg,
        </p>
        <p>
         Nothing to be sorry about at all my friend. Closures are a really complex concept for people to get. The more insight that people such as yourself can offer, the better off we all are going to be.
        </p>
       </div>
      </article>
      <!-- END: Comment. -->
      <!-- BEGIN: Comment. -->
      <article class="comment " id="comments_15587">
       <div class="meta">
        <img class="avatar" src="//www.gravatar.com/avatar/1eedd9872286bc83daa10b755c8ae86a?s=120&amp;d=http%3A%2F%2Fwww%2Ebennadel%2Ecom%2Fimages%2Fgravatar%2Farnold%2Ejpg"/>
        <a class="author" href="/members/2965-dl.htm">
         DL
        </a>
        <a class="date" href="#comments_15587">
         <time datetime="2009-02-20">
          Feb 20, 2009 at 4:45 PM
         </time>
        </a>
        <div class="count">
         1 Comments
        </div>
       </div>
       <div class="content">
        <p>
         Too complicated.
        </p>
        <p>
         Where did you learn this? Do you know of any good resource or book for learning functional JavaScript from ground-up?
        </p>
       </div>
      </article>
      <!-- END: Comment. -->
      <!-- BEGIN: Comment. -->
      <article class="comment " id="comments_15610">
       <div class="meta">
        <img class="avatar" src="//www.gravatar.com/avatar/f0e9090c0e8eaaeef3bed04809707c95?s=120&amp;d=http%3A%2F%2Fwww%2Ebennadel%2Ecom%2Fimages%2Fgravatar%2Farnold%2Ejpg"/>
        <a class="author" href="/members/2974-fm.htm">
         FM
        </a>
        <a class="date" href="#comments_15610">
         <time datetime="2009-02-22">
          Feb 22, 2009 at 9:02 AM
         </time>
        </a>
        <div class="count">
         1 Comments
        </div>
       </div>
       <div class="content">
        <p>
         @dl
        </p>
        <p>
         JavaScript: The Good Parts
         <br/>
         Unearthing the Excellence in JavaScript
         <br/>
         By Douglas Crockford
        </p>
        <p>
         This is good to learn and many thanks to Douglas.
        </p>
       </div>
      </article>
      <!-- END: Comment. -->
      <!-- BEGIN: Comment. -->
      <article class="comment ben" id="comments_15611">
       <div class="meta">
        <img class="avatar" src="//www.gravatar.com/avatar/f9bbc701ca6770ef482cc1e172344e25?s=120&amp;d=http%3A%2F%2Fwww%2Ebennadel%2Ecom%2Fimages%2Fgravatar%2Farnold%2Ejpg"/>
        <a class="author" href="/members/1851-ben-nadel.htm">
         Ben Nadel
        </a>
        <a class="date" href="#comments_15611">
         <time datetime="2009-02-22">
          Feb 22, 2009 at 9:32 AM
         </time>
        </a>
        <div class="count">
         12,287 Comments
        </div>
       </div>
       <div class="content">
        <p>
         @FM,
        </p>
        <p>
         I've heard that that is a very good book.
        </p>
       </div>
      </article>
      <!-- END: Comment. -->
      <!-- BEGIN: Comment. -->
      <article class="comment " id="comments_17384">
       <div class="meta">
        <img class="avatar" src="//www.gravatar.com/avatar/76a1ec03910f0ed562ecc2f448749951?s=120&amp;d=http%3A%2F%2Fwww%2Ebennadel%2Ecom%2Fimages%2Fgravatar%2Farnold%2Ejpg"/>
        <a class="author" href="/members/3379-andrew.htm">
         Andrew
        </a>
        <a class="date" href="#comments_17384">
         <time datetime="2009-05-08">
          May 8, 2009 at 4:19 PM
         </time>
        </a>
        <div class="count">
         1 Comments
        </div>
       </div>
       <div class="content">
        <p>
         I've translated your article into Russian. Thought you don't mind.
         <br/>
         All the backlinks are proveded. Here is the full version: http://interpretor.ru/js_closures/
         <br/>
         Thank you for the great article!
        </p>
       </div>
      </article>
      <!-- END: Comment. -->
      <!-- BEGIN: Comment. -->
      <article class="comment ben" id="comments_17387">
       <div class="meta">
        <img class="avatar" src="//www.gravatar.com/avatar/f9bbc701ca6770ef482cc1e172344e25?s=120&amp;d=http%3A%2F%2Fwww%2Ebennadel%2Ecom%2Fimages%2Fgravatar%2Farnold%2Ejpg"/>
        <a class="author" href="/members/1851-ben-nadel.htm">
         Ben Nadel
        </a>
        <a class="date" href="#comments_17387">
         <time datetime="2009-05-08">
          May 8, 2009 at 5:48 PM
         </time>
        </a>
        <div class="count">
         12,287 Comments
        </div>
       </div>
       <div class="content">
        <p>
         @Andrew,
        </p>
        <p>
         That's awesome!! Glad you felt it was worthy :)
        </p>
       </div>
      </article>
      <!-- END: Comment. -->
      <!-- BEGIN: Comment. -->
      <article class="comment " id="comments_17423">
       <div class="meta">
        <img class="avatar" src="//www.gravatar.com/avatar/83f49a8da1dc030d9f671f521839aecc?s=120&amp;d=http%3A%2F%2Fwww%2Ebennadel%2Ecom%2Fimages%2Fgravatar%2Farnold%2Ejpg"/>
        <a class="author" href="/members/2909-zorg.htm">
         zorg
        </a>
        <a class="date" href="#comments_17423">
         <time datetime="2009-05-11">
          May 11, 2009 at 5:23 AM
         </time>
        </a>
        <div class="count">
         3 Comments
        </div>
       </div>
       <div class="content">
        <p>
         +1 Douglas Crockford : this is the best book about the functional core of JS. (don't miss his videos 7 on Javascript + 3 on DOM).
        </p>
        <p>
         for the OO model of Javascript see Liberman paper on prototype-based inheritance and see the papers on Self by Ungar.
        </p>
        <p>
         all this is freely available online
        </p>
       </div>
      </article>
      <!-- END: Comment. -->
      <!-- BEGIN: Comment. -->
      <article class="comment ben" id="comments_17429">
       <div class="meta">
        <img class="avatar" src="//www.gravatar.com/avatar/f9bbc701ca6770ef482cc1e172344e25?s=120&amp;d=http%3A%2F%2Fwww%2Ebennadel%2Ecom%2Fimages%2Fgravatar%2Farnold%2Ejpg"/>
        <a class="author" href="/members/1851-ben-nadel.htm">
         Ben Nadel
        </a>
        <a class="date" href="#comments_17429">
         <time datetime="2009-05-11">
          May 11, 2009 at 9:03 AM
         </time>
        </a>
        <div class="count">
         12,287 Comments
        </div>
       </div>
       <div class="content">
        <p>
         @Zorg,
        </p>
        <p>
         Do you have a link to the Ungar paper?
        </p>
       </div>
      </article>
      <!-- END: Comment. -->
      <!-- BEGIN: Comment. -->
      <article class="comment " id="comments_17743">
       <div class="meta">
        <img class="avatar" src="//www.gravatar.com/avatar/50a16de74b444c905a774dda5080b9db?s=120&amp;d=http%3A%2F%2Fwww%2Ebennadel%2Ecom%2Fimages%2Fgravatar%2Farnold%2Ejpg"/>
        <a class="author" href="/members/3466-zorg.htm">
         zorg
        </a>
        <a class="date" href="#comments_17743">
         <time datetime="2009-05-24">
          May 24, 2009 at 1:08 PM
         </time>
        </a>
        <div class="count">
         2 Comments
        </div>
       </div>
       <div class="content">
        <p>
         <a href="http://selflanguage.org/documentation/published/index.html" target="_blank">
          http://selflanguage.org/documentation/published/index.html
         </a>
        </p>
        <p>
         Self the power of simplicity, is a good place to start
        </p>
       </div>
      </article>
      <!-- END: Comment. -->
      <!-- BEGIN: Comment. -->
      <article class="comment " id="comments_17744">
       <div class="meta">
        <img class="avatar" src="//www.gravatar.com/avatar/50a16de74b444c905a774dda5080b9db?s=120&amp;d=http%3A%2F%2Fwww%2Ebennadel%2Ecom%2Fimages%2Fgravatar%2Farnold%2Ejpg"/>
        <a class="author" href="/members/3466-zorg.htm">
         zorg
        </a>
        <a class="date" href="#comments_17744">
         <time datetime="2009-05-24">
          May 24, 2009 at 1:12 PM
         </time>
        </a>
        <div class="count">
         2 Comments
        </div>
       </div>
       <div class="content">
        <p>
         http://web.media.mit.edu/~lieber/Lieberary/OOP/Delegation/Delegation.html
        </p>
        <p>
         for the Lieberman paper
        </p>
       </div>
      </article>
      <!-- END: Comment. -->
      <!-- BEGIN: Comment. -->
      <article class="comment " id="comments_17962">
       <div class="meta">
        <img class="avatar" src="//www.gravatar.com/avatar/fb8b7d282b18da838715531e89fc71f7?s=120&amp;d=http%3A%2F%2Fwww%2Ebennadel%2Ecom%2Fimages%2Fgravatar%2Farnold%2Ejpg"/>
        <a class="author" href="/members/3537-sanketh.htm">
         Sanketh
        </a>
        <a class="date" href="#comments_17962">
         <time datetime="2009-06-03">
          Jun 3, 2009 at 4:11 PM
         </time>
        </a>
        <div class="count">
         1 Comments
        </div>
       </div>
       <div class="content">
        <p>
         This was great to understand. Thank you
        </p>
       </div>
      </article>
      <!-- END: Comment. -->
      <!-- BEGIN: Comment. -->
      <article class="comment " id="comments_22924">
       <div class="meta">
        <img class="avatar" src="//www.gravatar.com/avatar/b632f8ddf7a9802313ada7b6212f3aed?s=120&amp;d=http%3A%2F%2Fwww%2Ebennadel%2Ecom%2Fimages%2Fgravatar%2Farnold%2Ejpg"/>
        <a class="author" href="/members/4856-adam.htm">
         adam
        </a>
        <a class="date" href="#comments_22924">
         <time datetime="2009-11-29">
          Nov 29, 2009 at 8:00 PM
         </time>
        </a>
        <div class="count">
         1 Comments
        </div>
       </div>
       <div class="content">
        <p>
         I think jQuery convert all the $("a") into objects.
        </p>
        <p>
         and then jLinks.each assign jThis.click method to each of the "a" objects.
        </p>
       </div>
      </article>
      <!-- END: Comment. -->
      <!-- BEGIN: Comment. -->
      <article class="comment " id="comments_28522">
       <div class="meta">
        <img class="avatar" src="//www.gravatar.com/avatar/8c598ac87eba19cb1c45a80770284342?s=120&amp;d=http%3A%2F%2Fwww%2Ebennadel%2Ecom%2Fimages%2Fgravatar%2Farnold%2Ejpg"/>
        <a class="author" href="/members/6377-joel-klabo.htm">
         Joel Klabo
        </a>
        <a class="date" href="#comments_28522">
         <time datetime="2010-07-08">
          Jul 8, 2010 at 6:20 PM
         </time>
        </a>
        <div class="count">
         1 Comments
        </div>
       </div>
       <div class="content">
        <p>
         Thank you, that's the best explanation I have seen.
        </p>
       </div>
      </article>
      <!-- END: Comment. -->
      <!-- BEGIN: Comment. -->
      <article class="comment " id="comments_28550">
       <div class="meta">
        <img class="avatar" src="//www.gravatar.com/avatar/59a28e11ec7cc63e164e6e8f58882885?s=120&amp;d=http%3A%2F%2Fwww%2Ebennadel%2Ecom%2Fimages%2Fgravatar%2Farnold%2Ejpg"/>
        <a class="author" href="/members/6393-julian-young.htm">
         Julian Young
        </a>
        <a class="date" href="#comments_28550">
         <time datetime="2010-07-10">
          Jul 10, 2010 at 5:45 PM
         </time>
        </a>
        <div class="count">
         1 Comments
        </div>
       </div>
       <div class="content">
        <p>
         Thanks for this, nice bit of graphical explanation but now I need to know more... :)
        </p>
       </div>
      </article>
      <!-- END: Comment. -->
      <!-- BEGIN: Comment. -->
      <article class="comment ben" id="comments_28566">
       <div class="meta">
        <img class="avatar" src="//www.gravatar.com/avatar/f9bbc701ca6770ef482cc1e172344e25?s=120&amp;d=http%3A%2F%2Fwww%2Ebennadel%2Ecom%2Fimages%2Fgravatar%2Farnold%2Ejpg"/>
        <a class="author" href="/members/1851-ben-nadel.htm">
         Ben Nadel
        </a>
        <a class="date" href="#comments_28566">
         <time datetime="2010-07-12">
          Jul 12, 2010 at 10:49 AM
         </time>
        </a>
        <div class="count">
         12,287 Comments
        </div>
       </div>
       <div class="content">
        <p>
         @Joel, @Julian,
        </p>
        <p>
         Glad you guys are liking it.
        </p>
       </div>
      </article>
      <!-- END: Comment. -->
      <!-- BEGIN: Comment. -->
      <article class="comment " id="comments_29494">
       <div class="meta">
        <img class="avatar" src="//www.gravatar.com/avatar/3f5288b3c23ce0a281a9bafe49bf9d5b?s=120&amp;d=http%3A%2F%2Fwww%2Ebennadel%2Ecom%2Fimages%2Fgravatar%2Farnold%2Ejpg"/>
        <a class="author" href="/members/290-richard.htm">
         Richard
        </a>
        <a class="date" href="#comments_29494">
         <time datetime="2010-08-16">
          Aug 16, 2010 at 2:19 PM
         </time>
        </a>
        <div class="count">
         3 Comments
        </div>
       </div>
       <div class="content">
        <p>
         Images aren't appearing!
        </p>
       </div>
      </article>
      <!-- END: Comment. -->
      <!-- BEGIN: Comment. -->
      <article class="comment ben" id="comments_29503">
       <div class="meta">
        <img class="avatar" src="//www.gravatar.com/avatar/f9bbc701ca6770ef482cc1e172344e25?s=120&amp;d=http%3A%2F%2Fwww%2Ebennadel%2Ecom%2Fimages%2Fgravatar%2Farnold%2Ejpg"/>
        <a class="author" href="/members/1851-ben-nadel.htm">
         Ben Nadel
        </a>
        <a class="date" href="#comments_29503">
         <time datetime="2010-08-16">
          Aug 16, 2010 at 9:11 PM
         </time>
        </a>
        <div class="count">
         12,287 Comments
        </div>
       </div>
       <div class="content">
        <p>
         @Richard,
        </p>
        <p>
         My server has been having some issues lately. Try hitting this blog post again and it should work. Sorry about the dips in performance.
        </p>
       </div>
      </article>
      <!-- END: Comment. -->
      <!-- BEGIN: Comment. -->
      <article class="comment " id="comments_35178">
       <div class="meta">
        <img class="avatar" src="//www.gravatar.com/avatar/3f823579259f49c6d2e4a955c3ce9c23?s=120&amp;d=http%3A%2F%2Fwww%2Ebennadel%2Ecom%2Fimages%2Fgravatar%2Farnold%2Ejpg"/>
        <a class="author" href="/members/8350-nihat.htm">
         nihat
        </a>
        <a class="date" href="#comments_35178">
         <time datetime="2011-05-18">
          May 18, 2011 at 12:23 PM
         </time>
        </a>
        <div class="count">
         1 Comments
        </div>
       </div>
       <div class="content">
        <p>
         I especially liked your site posts, and so on through all of them beautiful
        </p>
       </div>
      </article>
      <!-- END: Comment. -->
      <!-- BEGIN: Comment. -->
      <article class="comment " id="comments_37763">
       <div class="meta">
        <img class="avatar" src="//www.gravatar.com/avatar/37edbf6b02e51156544e54d273a6c552?s=120&amp;d=http%3A%2F%2Fwww%2Ebennadel%2Ecom%2Fimages%2Fgravatar%2Farnold%2Ejpg"/>
        <a class="author" href="/members/9131-vimal-krishna.htm">
         vimal krishna
        </a>
        <a class="date" href="#comments_37763">
         <time datetime="2011-10-17">
          Oct 17, 2011 at 11:52 AM
         </time>
        </a>
        <div class="count">
         1 Comments
        </div>
       </div>
       <div class="content">
        <p>
         I loved this explanation of closure with scope-chaining. Clearest ever article on closure!!!
         <br/>
         Thanks Ben
        </p>
        <p>
         vimal
         <br/>
         Germany
        </p>
       </div>
      </article>
      <!-- END: Comment. -->
      <!-- BEGIN: Comment. -->
      <article class="comment " id="comments_38211">
       <div class="meta">
        <img class="avatar" src="//www.gravatar.com/avatar/915d219c1e45b82fd570af80573cbacd?s=120&amp;d=http%3A%2F%2Fwww%2Ebennadel%2Ecom%2Fimages%2Fgravatar%2Farnold%2Ejpg"/>
        <a class="author" href="/members/9289-seb.htm">
         seb
        </a>
        <a class="date" href="#comments_38211">
         <time datetime="2011-11-23">
          Nov 23, 2011 at 1:53 AM
         </time>
        </a>
        <div class="count">
         1 Comments
        </div>
       </div>
       <div class="content">
        <p>
         man, this was clear. As I m getting more into JavaScript seriously, I realize that I can see the big picture more easily and It makes me really damn happy.I thought that closures were more complicated than that.Man, javascript is awesome. It really is the punk rock language!
        </p>
       </div>
      </article>
      <!-- END: Comment. -->
      <!-- BEGIN: Comment. -->
      <article class="comment " id="comments_38789">
       <div class="meta">
        <img class="avatar" src="//www.gravatar.com/avatar/09b11737cb31b10c138a23c6fa86584f?s=120&amp;d=http%3A%2F%2Fwww%2Ebennadel%2Ecom%2Fimages%2Fgravatar%2Farnold%2Ejpg"/>
        <a class="author" href="/members/2652-mark-kruger.htm">
         Mark Kruger
        </a>
        <a class="date" href="#comments_38789">
         <time datetime="2012-01-27">
          Jan 27, 2012 at 10:42 AM
         </time>
        </a>
        <div class="count">
         4 Comments
        </div>
       </div>
       <div class="content">
        <p>
         Ben,
        </p>
        <p>
         Loved this.... I recommended it to several folks who (like me) tend to see closures as just out of reach mentally :)
        </p>
        <p>
         -Mark
        </p>
       </div>
      </article>
      <!-- END: Comment. -->
      <!-- BEGIN: Comment. -->
      <article class="comment " id="comments_39455">
       <div class="meta">
        <img class="avatar" src="//www.gravatar.com/avatar/b4154f1e21dee5e4ce5566ababad4902?s=120&amp;d=http%3A%2F%2Fwww%2Ebennadel%2Ecom%2Fimages%2Fgravatar%2Farnold%2Ejpg"/>
        <a class="author" href="/members/9840-kensley-lewis.htm">
         Kensley Lewis
        </a>
        <a class="date" href="#comments_39455">
         <time datetime="2012-04-16">
          Apr 16, 2012 at 10:34 AM
         </time>
        </a>
        <div class="count">
         1 Comments
        </div>
       </div>
       <div class="content">
        <p>
         Great post Ben! This is helping me to understand JavaScript more. Much appreciated.
        </p>
       </div>
      </article>
      <!-- END: Comment. -->
      <!-- BEGIN: Comment. -->
      <article class="comment " id="comments_39878">
       <div class="meta">
        <img class="avatar" src="//www.gravatar.com/avatar/95756acf903ff5dd9339e042d67592b2?s=120&amp;d=http%3A%2F%2Fwww%2Ebennadel%2Ecom%2Fimages%2Fgravatar%2Farnold%2Ejpg"/>
        <a class="author" href="/members/9972-jawwad-ahmed.htm">
         Jawwad Ahmed
        </a>
        <a class="date" href="#comments_39878">
         <time datetime="2012-05-17">
          May 17, 2012 at 10:38 AM
         </time>
        </a>
        <div class="count">
         1 Comments
        </div>
       </div>
       <div class="content">
        <p>
         Wonder full effort Ben... really opens a new dimension of js variables. Thanks Alot
        </p>
       </div>
      </article>
      <!-- END: Comment. -->
      <!-- BEGIN: Comment. -->
      <article class="comment " id="comments_39884">
       <div class="meta">
        <img class="avatar" src="//www.gravatar.com/avatar/398135f9368f4a15bd0b5bc1a1c986b9?s=120&amp;d=http%3A%2F%2Fwww%2Ebennadel%2Ecom%2Fimages%2Fgravatar%2Farnold%2Ejpg"/>
        <a class="author" href="/members/9975-perl-hacker.htm">
         Perl hacker
        </a>
        <a class="date" href="#comments_39884">
         <time datetime="2012-05-19">
          May 19, 2012 at 5:37 AM
         </time>
        </a>
        <div class="count">
         1 Comments
        </div>
       </div>
       <div class="content">
        <p>
         Thanks for this article, but I fear you missed an important point.
        </p>
        <p>
         If variables in the outer context change, these changes affect the inner anonymous functions as well. That means: if you change the outer variable at some later time, the inner function sees the changed value! Not the value the variable had when the inner functions was created. For me, that's not a closure. JavaScript do not have real closures at all in my opinion due to that!
        </p>
        <p>
         Your code just appears to do what you think it should do, because your jLinks variable isn't changed during looping over all the 'a' elements. If it would change, all inner functions would see the last value this variable had. That's mostly not what the developer expects.
        </p>
        <p>
         I am used to Perl and closures in Perl do not have this flaw. All lexical variables from the outer scope are bound (with their actual value) into the inner function. The inner function may change the variable. All other instances of the same inner function do not see this change! In JavaScript this happens.
        </p>
        <p>
         To get a "real" closure in JavaScript you have to wrap the critical code, which likes to get the outer variables enclosed with their state on function creation time, you have to wrap around another function, which gets these parameters passed, and call it immediately, passing these parameters. That's what Prototypes bind() method is doing effectively.
        </p>
        <p>
         Please refer to
         <a href="http://pastebin.com/NhnXTP5p" rel="nofollow" target="_blank">
          http://pastebin.com/NhnXTP5p
         </a>
         as an example to show the difference.
        </p>
        <p>
         You see all links in the testbed1 div share the same i variable. Even copying this variable to another lexically scoped variable inside the loop doesn't help.
        </p>
        <p>
         The links in testbed2 do not suffer from this, since the click() callback is put inside a wrapper function. Each link has its own "copy" of the variable. The callback changes this variable and you see that the state is maintained for each link separately.
        </p>
        <p>
         I hope this helps clarifying this topic. I know your posting is 3 years old, but since it shows up inside the top 10 of a Google search for "jQuery Closure" I think it's worth add some stuff to it ;)
        </p>
       </div>
      </article>
      <!-- END: Comment. -->
      <!-- BEGIN: Comment. -->
      <article class="comment " id="comments_40517">
       <div class="meta">
        <img class="avatar" src="//www.gravatar.com/avatar/45dbd83b14b886580fe0eb358e46ae06?s=120&amp;d=http%3A%2F%2Fwww%2Ebennadel%2Ecom%2Fimages%2Fgravatar%2Farnold%2Ejpg"/>
        <a class="author" href="/members/10167-olootu.htm">
         Olootu
        </a>
        <a class="date" href="#comments_40517">
         <time datetime="2012-08-02">
          Aug 2, 2012 at 7:09 AM
         </time>
        </a>
        <div class="count">
         1 Comments
        </div>
       </div>
       <div class="content">
        <p>
         I am new to Javascript and have read lots of the scary explanations of a Closure. This is the best and the most easy-to-follow explanation that I have read. Many thanks for this.
        </p>
       </div>
      </article>
      <!-- END: Comment. -->
      <!-- BEGIN: Comment. -->
      <article class="comment " id="comments_42787">
       <div class="meta">
        <img class="avatar" src="//www.gravatar.com/avatar/cb38399f7a7ddb4cd0cd40fdd62914d9?s=120&amp;d=http%3A%2F%2Fwww%2Ebennadel%2Ecom%2Fimages%2Fgravatar%2Farnold%2Ejpg"/>
        <a class="author" href="/members/11063-godfrey.htm">
         Godfrey
        </a>
        <a class="date" href="#comments_42787">
         <time datetime="2013-07-16">
          Jul 16, 2013 at 12:44 AM
         </time>
        </a>
        <div class="count">
         1 Comments
        </div>
       </div>
       <div class="content">
        <p>
         Huh, this explanation made me wonder why closures are so confusing in the first place... :P made it seem pretty elementary to me.
        </p>
        <p>
         One thing though: so when people refer to "closures" as a noun -- e.g. "create a closure" --- they basically mean create an anonymous function within a method like .each() or .click() which take themselves to a new mystical context?
        </p>
       </div>
      </article>
      <!-- END: Comment. -->
      <div class="comments-disabled">
       <div class="reason">
        <span>
         Oh my chickens, this post is old!
        </span>
       </div>
       <div class="follow-up">
        <a href="https://twitter.com/BenNadel" title="Ben Nadel's Twitter Account">
         <em>
          Hit me up on Twitter
         </em>
         if you want to discuss it further.
        </a>
       </div>
      </div>
     </section>
     <!-- END: Comments. -->
    </article>
   </div>
   <div class="l-site-aside">
    <div class="m-ad-cluster">
     <a class="nw" href="/blog/2439-My-Experience-With-AngularJS-The-Super-heroic-JavaScript-MVW-Framework.htm" title="My Experience With AngularJS - The Super-heroic JavaScript MVW Framework">
      My Experience With AngularJS - The Super Heroic JavaScript MVW Framework
     </a>
     <a class="ne" href="/jobs/web-development-jobs.htm" title="Find your next web development job on the BenNadel.com job board.">
      Find your next web development job on the BenNadel.com job board
     </a>
     <a class="sw" href="/blog/2192-One-Man-s-Search-For-Love-My-cf-Objective-2011-Lightning-Talk.htm" title="One Man's Search for Love, by Ben Nadel">
      One Man's Search for Love - Lightning Talk
     </a>
     <a class="se" href="https://github.com/BenNadel" title="Ben Nadel's open-source development projects on GitHub.">
      Fork Me on GitHub.com
     </a>
    </div>
    <div class="m-invision-ad">
     <a href="http://www.invisionapp.com?source=bennadel.com&amp;ad=large" title="UX Prototyping Made Beautiful - Create Interactive Wireframes &amp; High Fidelity Prototypes">
      UX Prototyping Made Beautiful - Create Interactive Wireframes &amp; High Fidelity Prototypes
     </a>
    </div>
   </div>
   <br clear="both"/>
  </div>
  <footer class="l-site-footer">
   <small>
    <span class="copyright">
     Ben Nadel  2015. All content is the property of Ben Nadel and BenNadel.com.
    </span>
    <a class="back-to-top" href="#body">
     Back to Top
    </a>
   </small>
   <section class="epilogue">
    <div class="mini-resume">
     <div class="avatar">
      <img alt="Ben Nadel's avatar." src="/images/global/ben-nadel-avatar.jpg" title="Ben Nadel is co-founder of InVision App, Inc. and a passionate web-applications developer."/>
     </div>
     <div class="title">
      About Ben Nadel
     </div>
     <div class="bio">
      I am the co-founder and chief technical officer at InVision App, Inc  the world's leading prototyping, 
						collaboration &amp; workflow platform. I also rock out in JavaScript and ColdFusion 24x7 and I dream about
						promise resolving asynchronously.
     </div>
     <div class="social-media">
      <a href="https://github.com/BenNadel" title="Follow Ben Nadel on GitHub.">
       GitHub
      </a>
      |
      <a href="https://www.twitter.com/BenNadel" title="Follow Ben Nadel on Twitter.">
       Twitter
      </a>
      |
      <a href="https://www.linkedin.com/in/BenNadel" title="Follow Ben Nadel on LinkedIn.">
       LinkedIn
      </a>
      |
      <a href="https://plus.google.com/108976367067760160494?rel=author" title="Follow Ben Nadel on Google Plus.">
       Google+
      </a>
      |
      <a href="https://www.facebook.com/BenNadel" title="Follow Ben Nadel on Facebook.">
       Facebook
      </a>
     </div>
    </div>
   </section>
  </footer>
  <script src="/linked/vendor/jquery/jquery-2.1.0.min.js" type="text/javascript">
  </script>
  <script src="/linked/js/standard.js?v=2015-05-26" type="text/javascript">
  </script>
  <script src="/linked/js/jquery.gist.js" type="text/javascript">
  </script>
  <script src="/linked/js/blog.js?v=42192.2491204" type="text/javascript">
  </script>
  <script type="text/javascript">
   (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
				})(window,document,'script','//www.google-analytics.com/analytics.js','ga');
				ga('create', 'UA-477521-1', 'auto');
				ga('send', 'pageview');
  </script>
 </body>
</html>