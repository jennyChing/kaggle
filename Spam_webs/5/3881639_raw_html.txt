<!DOCTYPE html>
<!--html5-->
<!--[if IE 8]&gt;    &lt;html class="no-js lt-ie9" lang="en"&gt; &lt;![endif]-->
<!--[if gt IE 8]&gt;&lt;!-->
<html class="no-js" lang="en">
 <!--&lt;![endif]-->
 <head>
  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>
  <meta charset="utf-8"/>
  <title>
   Arduino Playground - GPS
  </title>
  <link href="http://playground.arduino.cc/favicon.png" rel="shortcut icon" type="image/x-icon"/>
  <link href="http://arduino.cc/fonts/fonts.css" rel="stylesheet" type="text/css"/>
  <link href="http://arduino.cc/css/arduino-icons.css" rel="stylesheet"/>
  <link href="http://arduino.cc/css/animation.css" rel="stylesheet"/>
  <!--[if IE 7]&gt;
	&lt;link rel="stylesheet" href="http://arduino.cc/css/arduino-icons-ie7.css"&gt;&lt;![endif]-->
  <!--[if gte IE 9]&gt;&lt;!-->
  <link href="http://arduino.cc/css/foundation2.css" rel="stylesheet" type="text/css"/>
  <!--[if IE 8]&gt;
		&lt;link rel='stylesheet' href='http://arduino.cc/css/foundation_ie8.css' type='text/css' /&gt;	
	&lt;![endif]-->
  <link href="http://arduino.cc/css/arduino_code_highlight.css" rel="stylesheet" type="text/css"/>
  <link href="http://arduino.cc/css/typeplate.css" media="screen" rel="stylesheet" type="text/css"/>
  <link href="http://playground.arduino.cc/pub/skins/arduinoWide_SSO/css/arduinoWide_SSO.css" rel="stylesheet" type="text/css"/>
  <link href="http://arduino.cc/css/common.css" rel="stylesheet" type="text/css"/>
  <link href="https://plus.google.com/114839908922424087554" rel="publisher"/>
  <script src="http://arduino.cc/js/vendor/custom.modernizr.js">
  </script>
 </head>
 <body>
  <div class="fixed" id="menuWings">
  </div>
  <div id="page">
   <script>
    var userAgent = (navigator.userAgent || navigator.vendor || window.opera).toLowerCase();
	if(userAgent.indexOf('mac')&gt;0){
		$("head").append('&lt;style type="text/css"&gt;@-moz-document url-prefix() {h1 a, h2 a, h3 a, h4 a, h5 a, h1 a:hover, h2 a:hover, th a, th a:hover, h3 a:hover, h4 a:hover, h5 a:hover, #wikitext h2 a:hover, #wikitext h3 a:hover, #wikitext h4 a:hover {padding-bottom: 0.5em!important;} #pageheader .search input{font-family: "TyponineSans Regular 18";} #pagefooter .monospace{margin-top: -4px;} #navWrapper ul.left &gt; li{margin-top: -2px; padding-bottom: 2px;}#navWrapper ul.right &gt; li{margin-top: -5px; padding-bottom: 5px;}#navWrapper ul.right &gt; li ul{margin-top: 4px;} .slider-container .fixed-caption p{padding:8px 0 14px 0}}&lt;/style&gt;');
	}
   </script>
   <!--[if IE]&gt;
&lt;link rel='stylesheet' href='https://id.arduino.cc//css/ie-monospace.css' type='text/css' /&gt;
&lt;![endif]-->
   <div class="fixed" id="menuWings">
   </div>
   <!--[if IE 8]&gt;
&lt;div class="alert-box panel ie8alert"&gt;
  &lt;p&gt;&lt;strong&gt;Arduino.cc offers limited compatibility for Internet Explorer 8. Get a modern browser as Chrome, Firefox or Safari.&lt;/strong&gt;&lt;/p&gt;
  &lt;a href="" class="close"&gt;&times;&lt;/a&gt;
&lt;/div&gt;
&lt;![endif]-->
   <div id="pageheader">
    <div class="row">
     <div class="small-6 large-8 eight columns">
      <div class="title">
       <a href="http://arduino.cc">
        Arduino
       </a>
      </div>
     </div>
     <div class="small-6 large-4 four columns search">
      <div class="row collapse">
       <form action="http://www.google.com/search" method="GET">
        <div class="small-12 twelve columns">
         <i class="icon-search-2">
         </i>
         <input name="ie" type="hidden" value="UTF-8"/>
         <input name="oe" type="hidden" value="UTF-8"/>
         <input maxlength="255" name="q" placeholder="Search the Arduino Playground" size="25" type="text" value=""/>
         <input name="btnG" type="submit" value="search"/>
         <input name="domains" type="hidden" value="http://playground.arduino.cc"/>
         <input name="sitesearch" type="hidden" value="http://playground.arduino.cc"/>
        </div>
       </form>
      </div>
     </div>
    </div>
    <!--[if gte IE 9]&gt;&lt;!-->
    <div class="sticky" id="navWrapper">
     <!--[if IE 8]&gt;
		&lt;div id="navWrapper"&gt;
	&lt;![endif]-->
     <nav class="top-bar" data-options="is_hover:true">
      <ul class="title-area">
       <li class="name">
       </li>
      </ul>
      <section class="top-bar-section">
       <ul class="left">
        <li id="navLogo">
         <a href="http://arduino.cc">
          <img alt="userpicture" src="http://arduino.cc/img/logo_46.png"/>
         </a>
        </li>
        <li id="navHome">
         <a href="http://arduino.cc">
          Home
         </a>
        </li>
        <li>
         <a href="http://store.arduino.cc">
          Buy
         </a>
        </li>
        <li>
         <a href="http://arduino.cc/en/Main/Software">
          Download
         </a>
        </li>
        <li class="has-dropdown">
         <a href="http://arduino.cc/en/Main/Products">
          Products
         </a>
         <ul class="dropdown">
          <li>
           <a href="http://arduino.cc/en/Main/Products">
            Arduino
           </a>
          </li>
          <li>
           <a href="http://arduino.cc/en/ArduinoAtHeart/Products">
            AtHeart
           </a>
          </li>
          <li>
           <a href="http://arduino.cc/en/ArduinoCertified/Products">
            Certified
           </a>
          </li>
         </ul>
        </li>
        <li class="has-dropdown active">
         <a href="#">
          Learning
         </a>
         <ul class="dropdown">
          <li>
           <a href="http://arduino.cc/en/Guide/HomePage">
            Getting started
           </a>
          </li>
          <li>
           <a href="http://arduino.cc/en/Tutorial/HomePage">
            Examples
           </a>
          </li>
          <li>
           <a href="http://arduino.cc/en/Reference/HomePage">
            Reference
           </a>
          </li>
          <li>
           <a href="http://playground.arduino.cc">
            Playground
           </a>
          </li>
         </ul>
        </li>
        <li>
         <a href="http://forum.arduino.cc">
          Forum
         </a>
        </li>
        <li class="has-dropdown">
         <a href="#">
          Support
         </a>
         <ul class="dropdown">
          <li>
           <a href="http://arduino.cc/en/Main/FAQ">
            FAQ
           </a>
          </li>
          <li>
           <a href="http://arduino.cc/en/ContactUs">
            Contact Us
           </a>
          </li>
         </ul>
        </li>
        <li>
         <a href="http://blog.arduino.cc">
          Blog
         </a>
        </li>
       </ul>
       <ul class="right">
        <li>
         <a class="cart" href="https://id.arduino.cc/auth/login/?returnurl=http%3A%2F%2Fplayground.arduino.cc%2FAcoustic%2FGPS">
          LOG IN
         </a>
        </li>
        <li>
         <a class="cart" href="https://id.arduino.cc/auth/signup">
          SIGN UP
         </a>
        </li>
       </ul>
      </section>
     </nav>
    </div>
   </div>
   <br class="clear"/>
   <!--PageLeftFmt-->
   <div id="pagenav">
    <p>
     <em>
      The
      <a class="wikilink" href="http://playground.arduino.cc/Main/HomePage">
       playground
      </a>
      is a publicly-editable wiki about
      <a class="urllink" href="http://www.arduino.cc/" rel="nofollow">
       Arduino
      </a>
      .
     </em>
    </p>
    <p class="vspace">
    </p>
    <p class="sidehead">
     <a class="wikilink" href="http://playground.arduino.cc/Main/ManualsAndCurriculum">
      Manuals and Curriculum
     </a>
    </p>
    <p class="vspace">
    </p>
    <p class="sidehead">
     <a class="urllink" href="http://arduino.stackexchange.com" rel="nofollow">
      Arduino StackExchange
     </a>
    </p>
    <p class="vspace">
    </p>
    <p class="sidehead">
     <a class="wikilink" href="http://playground.arduino.cc/Main/ArduinoCoreHardware">
      Board Setup and Configuration
     </a>
    </p>
    <p class="vspace">
    </p>
    <p class="sidehead">
     <a class="wikilink" href="http://playground.arduino.cc/Main/DevelopmentTools">
      Development Tools
     </a>
    </p>
    <p class="vspace">
    </p>
    <p class="sidehead">
     <a class="wikilink" href="http://playground.arduino.cc/Main/ArduinoOnOtherAtmelChips">
      Arduino on other Atmel Chips
     </a>
    </p>
    <p class="vspace">
    </p>
    <p class="sidehead">
     <a class="wikilink" href="http://playground.arduino.cc/Main/InterfacingWithHardware">
      Interfacing With Hardware
     </a>
    </p>
    <ul>
     <li>
      <a class="wikilink" href="http://playground.arduino.cc/Main/InterfacingWithHardware#Output">
       Output
      </a>
     </li>
     <li>
      <a class="wikilink" href="http://playground.arduino.cc/Main/InterfacingWithHardware#InputTOC">
       Input
      </a>
     </li>
     <li>
      <a class="wikilink" href="http://playground.arduino.cc/Main/InterfacingWithHardware#ui">
       User Interface
      </a>
     </li>
     <li>
      <a class="wikilink" href="http://playground.arduino.cc/Main/InterfacingWithHardware#Storage">
       Storage
      </a>
     </li>
     <li>
      <a class="wikilink" href="http://playground.arduino.cc/Main/InterfacingWithHardware#Communication">
       Communication
      </a>
     </li>
     <li>
      <a class="wikilink" href="http://playground.arduino.cc/Main/IntWithHW-PwrSup">
       Power supplies
      </a>
     </li>
     <li>
      <a class="wikilink" href="http://playground.arduino.cc/Main/InterfacingWithHardware#General">
       General
      </a>
     </li>
    </ul>
    <p class="vspace">
    </p>
    <p class="sidehead">
     <a class="wikilink" href="http://playground.arduino.cc/Main/InterfacingWithSoftware">
      Interfacing with Software
     </a>
    </p>
    <p class="vspace">
    </p>
    <p class="sidehead">
     <a class="wikilink" href="http://playground.arduino.cc/Main/GeneralCodeLibrary">
      User Code Library
     </a>
    </p>
    <ul>
     <li>
      <a class="wikilink" href="http://playground.arduino.cc/Main/SketchList">
       Snippets and Sketches
      </a>
     </li>
     <li>
      <a class="wikilink" href="http://playground.arduino.cc/Main/LibraryList">
       Libraries
      </a>
     </li>
     <li>
      <a class="wikilink" href="http://playground.arduino.cc/Main/TutorialList">
       Tutorials
      </a>
     </li>
    </ul>
    <p class="vspace">
    </p>
    <p class="sidehead">
     <a class="urllink" href="http://code.google.com/p/arduino/issues/list" rel="nofollow">
      Suggestions &amp; Bugs
     </a>
    </p>
    <p class="vspace">
    </p>
    <p class="sidehead">
     <a class="wikilink" href="http://playground.arduino.cc/Main/ElectroInfoResources">
      Electronics Technique
     </a>
    </p>
    <p class="vspace">
    </p>
    <p class="sidehead">
     <a class="wikilink" href="http://playground.arduino.cc/Main/Resources">
      Sources for Electronic Parts
     </a>
    </p>
    <p class="vspace">
    </p>
    <p class="sidehead">
     <a class="wikilink" href="http://playground.arduino.cc/Main/SimilarBoards">
      Related Hardware and Initiatives
     </a>
    </p>
    <p class="vspace">
    </p>
    <p class="sidehead">
     <a class="urllink" href="http://playground.arduino.cc/Main/People" rel="nofollow">
      Arduino People/Groups &amp; Sites
     </a>
    </p>
    <p class="vspace">
    </p>
    <p class="sidehead">
     <a class="urllink" href="http://playground.arduino.cc/Projects/ArduinoUsers" rel="nofollow">
      Exhibition
     </a>
    </p>
    <p class="vspace">
    </p>
    <p class="sidehead">
     <a class="urllink" href="http://playground.arduino.cc/Projects/Ideas" rel="nofollow">
      Project Ideas
     </a>
    </p>
    <p class="vspace">
    </p>
    <p class="sidehead">
     <a class="wikilink" href="http://playground.arduino.cc/Main/Languages">
      Languages
     </a>
    </p>
    <p class="vspace">
    </p>
    <hr/>
    <p class="vspace">
    </p>
    <p class="sidehead">
     <a class="wikilink" href="http://playground.arduino.cc/Main/Participate">
      PARTICIPATE
     </a>
    </p>
    <ul>
     <li>
      <a class="urllink" href="http://code.google.com/p/arduino/issues/list" rel="nofollow">
       Suggestions
      </a>
     </li>
     <li>
      <a class="wikilink" href="http://playground.arduino.cc/Main/Participate#contribrules">
       Formatting guidelines
      </a>
     </li>
     <li>
      <a class="wikilink" href="http://playground.arduino.cc/Site/AllRecentChanges">
       All recent changes
      </a>
     </li>
     <li>
      <a class="wikilink" href="http://playground.arduino.cc/PmWiki/PmWiki">
       PmWiki
      </a>
     </li>
     <li>
      <a class="wikilink" href="http://playground.arduino.cc/Main/WikiSandbox">
       WikiSandBox training
      </a>
     </li>
     <li>
      <a class="wikilink" href="http://playground.arduino.cc/PmWiki/BasicEditing">
       Basic Editing
      </a>
     </li>
     <li>
      <a class="urllink" href="http://www.pmwiki.org/wiki/Cookbook/CookbookBasics" rel="nofollow">
       Cookbook (addons)
      </a>
     </li>
     <li>
      <a class="urllink" href="http://www.pmwiki.org/wiki/PmWiki/DocumentationIndex" rel="nofollow">
       Documentation index
      </a>
      <p class="vspace">
      </p>
     </li>
     <li>
      <a class="urllink" href="http://www.bartoloilliano.com/arduino-tutorial-costruire-un-drone-con-webcam-telecomandato-da-pc-tramite-csharp.html" rel="nofollow">
       Drone with Arduino
      </a>
      <p class="vspace">
      </p>
     </li>
     <li>
      <a class="urllink" href="http://arduinothermostat.blogspot.co.uk" rel="nofollow">
       Thermostat with Arduino
      </a>
     </li>
    </ul>
    <p class="vspace">
    </p>
   </div>
   <!--/PageLeftFmt-->
   <div class="playground" id="pagetext">
    <!--PageText-->
    <div id="wikitext">
     <h1>
      Motivation
     </h1>
     <p>
      Location of a robot to a precision of small distances (i.e. &lt;.1 inches) is valuable for navigation of small robots.  The goal of this project was to create an affordable "GPS" system that could locate a robot within .1 inches and be easy to construct from off the shelf parts and easy to setup in the field.
     </p>
     <p class="vspace">
     </p>
     <h1>
      General Theory of Operation
     </h1>
     <p>
      I cannot take credit for this idea but it is beautifully simple.  Use a radio transmitter/receiver pair on two different Arduinos.  One to transmit the request for a "ping" from a beacon, the other a beacon to receive the request and then "ping".  When the beacon gets the request for a ping over radio it "pings" by oscillating an acoustic transducer for a short period of time.  The requesting Arduino simply measures the amount of time between the request and the ping.  This is very highly correlated with the distance between the requesting Arduino and the beacon Arduino.  To multiplex this if the request is for a particular Beacon to ping then the distance to N Beacons can be measured by one requesting Arduino.  I will refer to the requesting Arduino as the GPS unit because it becomes an analogy for a "real" GPS unit after this point.
     </p>
     <p class="vspace">
     </p>
     <h1>
      Components
     </h1>
     <p>
      For each Beacon you need
     </p>
     <ol>
      <li>
       Arduino
      </li>
      <li>
       Battery
      </li>
      <li>
       Power Switch
      </li>
      <li>
       A radio receiver similar to MO-
       <span class="wikiword">
        RX3400
       </span>
       (cheap will be fine)
      </li>
      <li>
       An LED
      </li>
      <li>
       Some Jumpers
      </li>
      <li>
       A high frequency transducer (although lower might work also) like the ones from an ultra-sonic measuring device.
      </li>
     </ol>
     <p class="vspace">
     </p>
     <p>
      For the requesting Arduino (GPS Unit)
     </p>
     <ol>
      <li>
       Arduino
      </li>
      <li>
       Battery
      </li>
      <li>
       Power Switch
      </li>
      <li>
       A radio transmitter the compliment of the MO-
       <span class="wikiword">
        RX3400
       </span>
       in the receiver
      </li>
      <li>
       An LED
      </li>
      <li>
       Some Jumpers
      </li>
      <li>
       A high frequency transducer (although lower might work also) like the ones from an ultra-sonic measuring device.
      </li>
      <li>
       One
       <span class="wikiword">
        LM324
       </span>
       and some capacitors and resistors (details later)
      </li>
     </ol>
     <p class="vspace">
     </p>
     <h1>
      Block Diagram
     </h1>
     <p>
      The block diagram is basically to get a feel for the two devices.
     </p>
     <p class="vspace">
     </p>
     <p>
      In the Beacon the Transducer is connected across two digital lines, so a 10 -&gt; 01  pattern on those lines causes a 2 X 5V movement of the transducer.  Where if a single line was used only a 5V deflection would occur.  The current limited on the Arduino is relied upon so the transducer is directly connected across the two lines.  The LED is used to debug/diagnose problems.  In general it flashes when a ping request for it is received.  The output of the reciever is tied to the hardware serial input line.
Not shown are three (or more) pins used to set the "address" of the beacon.  If these pins are labeled X, Y, and Z then no short is Address 0. A short between X and Y is Address 1 and a short between Y and Z is Address 2.  The LED is nice when three beacons are used because you can see the requests cycling through the beacons.  It is kinda fun to see as well.
     </p>
     <p class="vspace">
     </p>
     <p>
      The GPS uses the same transducer but it is connected through a
      <span class="wikiword">
       LM324
      </span>
      Operation Amplifier Circuit that essentially is tuned to the frequency of the transducer and creates levels that are Digital Level (0-5V) with distances of many feet away.  The circuit is very much like the first two stages of
      <a class="urllink" href="http://efymagonline.com/data.asp?id=75" rel="nofollow">
       EFYMag February 2006 Ultrasonic Proximity Detector
      </a>
      or
      <a class="urllink" href="http://pdfserv.maxim-ic.com/en/an/AN50.pdf" rel="nofollow">
       Maxim App-notes on Proximity Detector
      </a>
      .  The detector part d1 to the rest of the left is not needed that is done with software.  Any ultrasonic range finder amplifier will do.  I used one that only needed capacitors and resistors and used a single ended power supply for the Op Amp (the
      <span class="wikiword">
       LM324
      </span>
      my favorite Op Amp).  The transmitter is tied to pins that are a software serial port.  This leaves the hardware serial port for communication with another device.  The LED blinks when a "ping" from at least one Beacon is heard through the amplifier.
     </p>
     <p class="vspace">
     </p>
     <div>
      <img alt="" src="http://playground.arduino.cc/uploads/Acoustic/AcousticGPSBlock.gif" title=""/>
     </div>
     <p class="vspace">
     </p>
     <h1>
      Code
     </h1>
     <p>
      This code was written with certain choices for connecting the LED, Jumper for setting Address, and Transducer.
The Beacon software is
     </p>
     <p class="vspace">
     </p>
     <p>
     </p>
     <div class="sourceblock " id="sourceblock1">
      <div class="sourceblocktext">
       <div class="c">
        <ol>
         <li class="li1">
          <div class="de1">
           <span class="co2">
            #define SigPin 7
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           <span class="co2">
            #define Node1Pin 6
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           <span class="co2">
            #define Node2Pin 8
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           <span class="co2">
            #define Transducer1 13
           </span>
          </div>
         </li>
         <li class="li2">
          <div class="de2">
           <span class="co2">
            #define Transducer2 9
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           <span class="co2">
            #define PacketPin 2
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           <span class="co2">
            #define LEDC 3
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           <span class="co2">
            #define LEDA 4
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
          </div>
         </li>
         <li class="li2">
          <div class="de2">
           <span class="kw4">
            int
           </span>
           beaconNumber
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           <span class="kw4">
            void
           </span>
           findBeaconNumber
           <span class="br0">
            (
           </span>
           <span class="br0">
            )
           </span>
           <span class="br0">
            {
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           pinMode
           <span class="br0">
            (
           </span>
           SigPin
           <span class="sy0">
            ,
           </span>
           OUTPUT
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           pinMode
           <span class="br0">
            (
           </span>
           Node1Pin
           <span class="sy0">
            ,
           </span>
           INPUT
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li2">
          <div class="de2">
           pinMode
           <span class="br0">
            (
           </span>
           Node2Pin
           <span class="sy0">
            ,
           </span>
           INPUT
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           digitalWrite
           <span class="br0">
            (
           </span>
           Node1Pin
           <span class="sy0">
            ,
           </span>
           HIGH
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
           <span class="co1">
            // activate pullup
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           digitalWrite
           <span class="br0">
            (
           </span>
           Node2Pin
           <span class="sy0">
            ,
           </span>
           HIGH
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
           <span class="co1">
            // activate pullup
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           digitalWrite
           <span class="br0">
            (
           </span>
           SigPin
           <span class="sy0">
            ,
           </span>
           LOW
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
          </div>
         </li>
         <li class="li2">
          <div class="de2">
           <span class="co1">
            // need to check code below
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           <span class="kw1">
            if
           </span>
           <span class="br0">
            (
           </span>
           digitalRead
           <span class="br0">
            (
           </span>
           Node1Pin
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ==
           </span>
           LOW
           <span class="br0">
            )
           </span>
           beaconNumber
           <span class="sy0">
            =
           </span>
           <span class="nu0">
            1
           </span>
           <span class="sy0">
            ;
           </span>
           <span class="co1">
            // must be connected to SigPin
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           <span class="kw1">
            else
           </span>
           <span class="kw1">
            if
           </span>
           <span class="br0">
            (
           </span>
           digitalRead
           <span class="br0">
            (
           </span>
           Node2Pin
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ==
           </span>
           LOW
           <span class="br0">
            )
           </span>
           beaconNumber
           <span class="sy0">
            =
           </span>
           <span class="nu0">
            2
           </span>
           <span class="sy0">
            ;
           </span>
           <span class="co1">
            // must be connected to SigPin
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           <span class="kw1">
            else
           </span>
           beaconNumber
           <span class="sy0">
            =
           </span>
           <span class="nu0">
            0
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           <span class="br0">
            }
           </span>
          </div>
         </li>
         <li class="li2">
          <div class="de2">
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           <span class="kw4">
            void
           </span>
           setup
           <span class="br0">
            (
           </span>
           <span class="br0">
            )
           </span>
           <span class="br0">
            {
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           pinMode
           <span class="br0">
            (
           </span>
           LEDC
           <span class="sy0">
            ,
           </span>
           OUTPUT
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           pinMode
           <span class="br0">
            (
           </span>
           LEDA
           <span class="sy0">
            ,
           </span>
           OUTPUT
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           digitalWrite
           <span class="br0">
            (
           </span>
           LEDC
           <span class="sy0">
            ,
           </span>
           LOW
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li2">
          <div class="de2">
           digitalWrite
           <span class="br0">
            (
           </span>
           LEDA
           <span class="sy0">
            ,
           </span>
           LOW
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           pinMode
           <span class="br0">
            (
           </span>
           Transducer1
           <span class="sy0">
            ,
           </span>
           OUTPUT
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           pinMode
           <span class="br0">
            (
           </span>
           Transducer2
           <span class="sy0">
            ,
           </span>
           OUTPUT
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           digitalWrite
           <span class="br0">
            (
           </span>
           Transducer1
           <span class="sy0">
            ,
           </span>
           LOW
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           digitalWrite
           <span class="br0">
            (
           </span>
           Transducer2
           <span class="sy0">
            ,
           </span>
           LOW
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li2">
          <div class="de2">
           findBeaconNumber
           <span class="br0">
            (
           </span>
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           Serial.
           <span class="me1">
            begin
           </span>
           <span class="br0">
            (
           </span>
           <span class="nu0">
            2400
           </span>
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           <span class="br0">
            }
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           <span class="kw4">
            void
           </span>
           PulseTransducer
           <span class="br0">
            (
           </span>
           <span class="br0">
            )
           </span>
           <span class="br0">
            {
           </span>
           <span class="co1">
            // 42Khz pulsing
           </span>
          </div>
         </li>
         <li class="li2">
          <div class="de2">
           <span class="kw1">
            for
           </span>
           <span class="br0">
            (
           </span>
           <span class="kw4">
            int
           </span>
           i
           <span class="sy0">
            =
           </span>
           <span class="nu0">
            0
           </span>
           <span class="sy0">
            ;
           </span>
           i
           <span class="sy0">
            &lt;
           </span>
           <span class="nu0">
            13
           </span>
           <span class="sy0">
            ;
           </span>
           i
           <span class="sy0">
            ++
           </span>
           <span class="br0">
            )
           </span>
           <span class="br0">
            {
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           digitalWrite
           <span class="br0">
            (
           </span>
           Transducer1
           <span class="sy0">
            ,
           </span>
           HIGH
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           delayMicroseconds
           <span class="br0">
            (
           </span>
           <span class="nu0">
            5
           </span>
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           digitalWrite
           <span class="br0">
            (
           </span>
           Transducer2
           <span class="sy0">
            ,
           </span>
           HIGH
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           digitalWrite
           <span class="br0">
            (
           </span>
           Transducer1
           <span class="sy0">
            ,
           </span>
           LOW
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li2">
          <div class="de2">
           delayMicroseconds
           <span class="br0">
            (
           </span>
           <span class="nu0">
            5
           </span>
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           digitalWrite
           <span class="br0">
            (
           </span>
           Transducer2
           <span class="sy0">
            ,
           </span>
           LOW
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           <span class="br0">
            }
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           <span class="br0">
            }
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
          </div>
         </li>
         <li class="li2">
          <div class="de2">
           <span class="kw4">
            void
           </span>
           loop
           <span class="br0">
            (
           </span>
           <span class="br0">
            )
           </span>
           <span class="br0">
            {
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           <span class="kw1">
            if
           </span>
           <span class="br0">
            (
           </span>
           Serial.
           <span class="me1">
            available
           </span>
           <span class="br0">
            (
           </span>
           <span class="br0">
            )
           </span>
           <span class="br0">
            )
           </span>
           <span class="br0">
            {
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           <span class="kw4">
            char
           </span>
           frame
           <span class="sy0">
            =
           </span>
           Serial.
           <span class="me1">
            read
           </span>
           <span class="br0">
            (
           </span>
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           <span class="co1">
            //  Serial.write('|');
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           <span class="kw1">
            while
           </span>
           <span class="br0">
            (
           </span>
           <span class="sy0">
            !
           </span>
           Serial.
           <span class="me1">
            available
           </span>
           <span class="br0">
            (
           </span>
           <span class="br0">
            )
           </span>
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li2">
          <div class="de2">
           <span class="kw1">
            if
           </span>
           <span class="br0">
            (
           </span>
           frame
           <span class="sy0">
            ==
           </span>
           <span class="nu12">
            0x5a
           </span>
           <span class="br0">
            )
           </span>
           <span class="br0">
            {
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           <span class="kw1">
            while
           </span>
           <span class="br0">
            (
           </span>
           <span class="sy0">
            !
           </span>
           Serial.
           <span class="me1">
            available
           </span>
           <span class="br0">
            (
           </span>
           <span class="br0">
            )
           </span>
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
           <span class="co1">
            // Wait for second byte
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           Serial.
           <span class="me1">
            write
           </span>
           <span class="br0">
            (
           </span>
           <span class="st0">
            '-'
           </span>
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           <span class="kw4">
            char
           </span>
           request
           <span class="sy0">
            =
           </span>
           Serial.
           <span class="me1">
            read
           </span>
           <span class="br0">
            (
           </span>
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           <span class="kw1">
            if
           </span>
           <span class="br0">
            (
           </span>
           request
           <span class="sy0">
            ==
           </span>
           beaconNumber
           <span class="br0">
            )
           </span>
           <span class="br0">
            {
           </span>
          </div>
         </li>
         <li class="li2">
          <div class="de2">
           PulseTransducer
           <span class="br0">
            (
           </span>
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           digitalWrite
           <span class="br0">
            (
           </span>
           LEDA
           <span class="sy0">
            ,
           </span>
           HIGH
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           <span class="br0">
            }
           </span>
           <span class="kw1">
            else
           </span>
           <span class="br0">
            {
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           digitalWrite
           <span class="br0">
            (
           </span>
           LEDA
           <span class="sy0">
            ,
           </span>
           LOW
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           <span class="br0">
            }
           </span>
          </div>
         </li>
         <li class="li2">
          <div class="de2">
           <span class="br0">
            }
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           <span class="br0">
            }
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           <span class="br0">
            }
           </span>
          </div>
         </li>
        </ol>
       </div>
      </div>
      <div class="sourceblocklink">
       <a href="http://playground.arduino.cc/Acoustic/GPS?action=sourceblock&amp;num=1" type="text/plain">
        [Get Code]
       </a>
      </div>
     </div>
     <p class="vspace">
     </p>
     <p>
      The GPS Software is
     </p>
     <p class="vspace">
     </p>
     <p>
     </p>
     <div class="sourceblock " id="sourceblock2">
      <div class="sourceblocktext">
       <div class="c">
        <ol>
         <li class="li1">
          <div class="de1">
           <span class="co2">
            #include &lt;SoftwareSerial.h&gt;
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           <span class="co2">
            #define ADDetector 5
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           <span class="co2">
            #define rxPin 3
           </span>
          </div>
         </li>
         <li class="li2">
          <div class="de2">
           <span class="co2">
            #define txPin 4
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           <span class="co2">
            #define LEDC 7
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           <span class="co2">
            #define LEDA 8
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           SoftwareSerial mySerial
           <span class="br0">
            (
           </span>
           rxPin
           <span class="sy0">
            ,
           </span>
           txPin
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li2">
          <div class="de2">
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           <span class="kw4">
            void
           </span>
           setup
           <span class="br0">
            (
           </span>
           <span class="br0">
            )
           </span>
           <span class="br0">
            {
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           Serial.
           <span class="me1">
            begin
           </span>
           <span class="br0">
            (
           </span>
           <span class="nu0">
            9600
           </span>
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           pinMode
           <span class="br0">
            (
           </span>
           rxPin
           <span class="sy0">
            ,
           </span>
           INPUT
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           pinMode
           <span class="br0">
            (
           </span>
           txPin
           <span class="sy0">
            ,
           </span>
           OUTPUT
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li2">
          <div class="de2">
           pinMode
           <span class="br0">
            (
           </span>
           LEDC
           <span class="sy0">
            ,
           </span>
           OUTPUT
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           pinMode
           <span class="br0">
            (
           </span>
           LEDA
           <span class="sy0">
            ,
           </span>
           OUTPUT
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           digitalWrite
           <span class="br0">
            (
           </span>
           LEDC
           <span class="sy0">
            ,
           </span>
           LOW
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           digitalWrite
           <span class="br0">
            (
           </span>
           LEDA
           <span class="sy0">
            ,
           </span>
           LOW
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           mySerial.
           <span class="me1">
            begin
           </span>
           <span class="br0">
            (
           </span>
           <span class="nu0">
            2400
           </span>
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li2">
          <div class="de2">
           <span class="br0">
            }
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           <span class="kw4">
            long
           </span>
           minDetectorNoise
           <span class="br0">
            (
           </span>
           <span class="br0">
            )
           </span>
           <span class="br0">
            {
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           <span class="kw4">
            long
           </span>
           val
           <span class="sy0">
            =
           </span>
           analogRead
           <span class="br0">
            (
           </span>
           ADDetector
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           <span class="kw1">
            for
           </span>
           <span class="br0">
            (
           </span>
           <span class="kw4">
            int
           </span>
           i
           <span class="sy0">
            =
           </span>
           <span class="nu0">
            0
           </span>
           <span class="sy0">
            ;
           </span>
           i
           <span class="sy0">
            &lt;
           </span>
           <span class="nu0">
            500
           </span>
           <span class="sy0">
            ;
           </span>
           i
           <span class="sy0">
            ++
           </span>
           <span class="br0">
            )
           </span>
           <span class="br0">
            {
           </span>
          </div>
         </li>
         <li class="li2">
          <div class="de2">
           <span class="kw4">
            long
           </span>
           tmp
           <span class="sy0">
            =
           </span>
           analogRead
           <span class="br0">
            (
           </span>
           ADDetector
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           <span class="kw1">
            if
           </span>
           <span class="br0">
            (
           </span>
           tmp
           <span class="sy0">
            &lt;
           </span>
           val
           <span class="br0">
            )
           </span>
           val
           <span class="sy0">
            =
           </span>
           tmp
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           <span class="br0">
            }
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           <span class="kw1">
            return
           </span>
           val
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           <span class="br0">
            }
           </span>
          </div>
         </li>
         <li class="li2">
          <div class="de2">
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           <span class="kw4">
            void
           </span>
           loop
           <span class="br0">
            (
           </span>
           <span class="br0">
            )
           </span>
           <span class="br0">
            {
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           <span class="kw4">
            long
           </span>
           start
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           <span class="kw4">
            long
           </span>
           dist
           <span class="br0">
            [
           </span>
           <span class="nu0">
            3
           </span>
           <span class="br0">
            ]
           </span>
           <span class="sy0">
            ;
           </span>
           <span class="co1">
            // in roughly tenths of a foot
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           boolean any
           <span class="sy0">
            =
           </span>
           <span class="kw2">
            false
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li2">
          <div class="de2">
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           <span class="kw1">
            for
           </span>
           <span class="br0">
            (
           </span>
           <span class="kw4">
            int
           </span>
           i
           <span class="sy0">
            =
           </span>
           <span class="nu0">
            0
           </span>
           <span class="sy0">
            ;
           </span>
           i
           <span class="sy0">
            &lt;
           </span>
           <span class="nu0">
            3
           </span>
           <span class="sy0">
            ;
           </span>
           i
           <span class="sy0">
            ++
           </span>
           <span class="br0">
            )
           </span>
           <span class="br0">
            {
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           <span class="kw4">
            long
           </span>
           ADMin
           <span class="sy0">
            =
           </span>
           <span class="br0">
            (
           </span>
           minDetectorNoise
           <span class="br0">
            (
           </span>
           <span class="br0">
            )
           </span>
           <span class="sy0">
            *
           </span>
           <span class="nu0">
            95
           </span>
           <span class="br0">
            )
           </span>
           <span class="sy0">
            /
           </span>
           <span class="nu0">
            100
           </span>
           <span class="sy0">
            ;
           </span>
           <span class="co1">
            // Below 95 percent of min of 500 samples is a signal
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           dist
           <span class="br0">
            [
           </span>
           i
           <span class="br0">
            ]
           </span>
           <span class="sy0">
            =
           </span>
           <span class="nu0">
            0
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           mySerial.
           <span class="me1">
            print
           </span>
           <span class="br0">
            (
           </span>
           <span class="br0">
            (
           </span>
           <span class="kw4">
            char
           </span>
           <span class="br0">
            )
           </span>
           <span class="nu12">
            0xff
           </span>
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li2">
          <div class="de2">
           mySerial.
           <span class="me1">
            print
           </span>
           <span class="br0">
            (
           </span>
           <span class="br0">
            (
           </span>
           <span class="kw4">
            char
           </span>
           <span class="br0">
            )
           </span>
           <span class="nu12">
            0x00
           </span>
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           mySerial.
           <span class="me1">
            print
           </span>
           <span class="br0">
            (
           </span>
           <span class="br0">
            (
           </span>
           <span class="kw4">
            char
           </span>
           <span class="br0">
            )
           </span>
           <span class="nu12">
            0x5a
           </span>
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           mySerial.
           <span class="me1">
            print
           </span>
           <span class="br0">
            (
           </span>
           <span class="br0">
            (
           </span>
           <span class="kw4">
            char
           </span>
           <span class="br0">
            )
           </span>
           i
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           start
           <span class="sy0">
            =
           </span>
           millis
           <span class="br0">
            (
           </span>
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           <span class="co1">
            //  delayMicroseconds(400); // let detector settle from radio noise
           </span>
          </div>
         </li>
         <li class="li2">
          <div class="de2">
           <span class="kw1">
            do
           </span>
           <span class="br0">
            {
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           dist
           <span class="br0">
            [
           </span>
           i
           <span class="br0">
            ]
           </span>
           <span class="sy0">
            ++;
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           <span class="br0">
            }
           </span>
           <span class="kw1">
            while
           </span>
           <span class="br0">
            (
           </span>
           dist
           <span class="br0">
            [
           </span>
           i
           <span class="br0">
            ]
           </span>
           <span class="sy0">
            &lt;
           </span>
           <span class="nu0">
            1000
           </span>
           <span class="sy0">
            &amp;&amp;
           </span>
           analogRead
           <span class="br0">
            (
           </span>
           ADDetector
           <span class="br0">
            )
           </span>
           <span class="sy0">
            &gt;
           </span>
           ADMin
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           <span class="kw1">
            if
           </span>
           <span class="br0">
            (
           </span>
           dist
           <span class="br0">
            [
           </span>
           i
           <span class="br0">
            ]
           </span>
           <span class="sy0">
            &lt;
           </span>
           <span class="nu0">
            1000
           </span>
           <span class="br0">
            )
           </span>
           <span class="br0">
            {
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           delay
           <span class="br0">
            (
           </span>
           <span class="nu0">
            100
           </span>
           <span class="sy0">
            -
           </span>
           dist
           <span class="br0">
            [
           </span>
           i
           <span class="br0">
            ]
           </span>
           <span class="sy0">
            /
           </span>
           <span class="nu0">
            10
           </span>
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li2">
          <div class="de2">
           any
           <span class="sy0">
            =
           </span>
           <span class="kw2">
            true
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           <span class="br0">
            }
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           <span class="br0">
            }
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           <span class="kw1">
            if
           </span>
           <span class="br0">
            (
           </span>
           any
           <span class="br0">
            )
           </span>
           digitalWrite
           <span class="br0">
            (
           </span>
           LEDA
           <span class="sy0">
            ,
           </span>
           HIGH
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           <span class="kw1">
            else
           </span>
           digitalWrite
           <span class="br0">
            (
           </span>
           LEDA
           <span class="sy0">
            ,
           </span>
           LOW
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li2">
          <div class="de2">
           <span class="kw1">
            for
           </span>
           <span class="br0">
            (
           </span>
           <span class="kw4">
            int
           </span>
           i
           <span class="sy0">
            =
           </span>
           <span class="nu0">
            0
           </span>
           <span class="sy0">
            ;
           </span>
           i
           <span class="sy0">
            &lt;
           </span>
           <span class="nu0">
            3
           </span>
           <span class="sy0">
            ;
           </span>
           i
           <span class="sy0">
            ++
           </span>
           <span class="br0">
            )
           </span>
           <span class="br0">
            {
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           Serial.
           <span class="me1">
            print
           </span>
           <span class="br0">
            (
           </span>
           i
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           Serial.
           <span class="me1">
            print
           </span>
           <span class="br0">
            (
           </span>
           <span class="st0">
            "|"
           </span>
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           Serial.
           <span class="me1">
            print
           </span>
           <span class="br0">
            (
           </span>
           dist
           <span class="br0">
            [
           </span>
           i
           <span class="br0">
            ]
           </span>
           <span class="sy0">
            /
           </span>
           <span class="nu0">
            10
           </span>
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           Serial.
           <span class="me1">
            print
           </span>
           <span class="br0">
            (
           </span>
           <span class="st0">
            '.'
           </span>
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li2">
          <div class="de2">
           Serial.
           <span class="me1">
            print
           </span>
           <span class="br0">
            (
           </span>
           dist
           <span class="br0">
            [
           </span>
           i
           <span class="br0">
            ]
           </span>
           <span class="sy0">
            %
           </span>
           <span class="nu19">
            10
           </span>
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           Serial.
           <span class="me1">
            print
           </span>
           <span class="br0">
            (
           </span>
           <span class="st0">
            '|'
           </span>
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           <span class="br0">
            }
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           Serial.
           <span class="me1">
            println
           </span>
           <span class="br0">
            (
           </span>
           <span class="br0">
            )
           </span>
           <span class="sy0">
            ;
           </span>
          </div>
         </li>
         <li class="li1">
          <div class="de1">
           <span class="br0">
            }
           </span>
          </div>
         </li>
        </ol>
       </div>
      </div>
      <div class="sourceblocklink">
       <a href="http://playground.arduino.cc/Acoustic/GPS?action=sourceblock&amp;num=2" type="text/plain">
        [Get Code]
       </a>
      </div>
     </div>
     <p class="vspace">
     </p>
     <p>
      I have a version of the GPS receiver that performs the Trilateralization that takes the three distances and converts to an X and Y in a plane.
     </p>
     <p class="vspace">
     </p>
     <h1>
      Next Steps
     </h1>
     <p>
      We have reproduced another set of this GPS system and experimented with cheaper radios.  The cheaper radios required and extra byte be transmitted to give the radio receivers a more data before actual data is transmitted.
     </p>
     <p class="vspace">
     </p>
     <p>
      The different Arduino had some time synchronization issues.  Most importantly is that you "tune" the delay in lines 42 and 45 of the beacon to get the most signal from the transducer on the receiver.  We did this by connecting a spare transducer to an oscilloscope and changing the loop function to just repeatedly call
      <span class="wikiword">
       PulseTransducer
      </span>
      .  We then changed the time delay to get the maximum peak on the oscilloscope.
     </p>
     <p class="vspace">
     </p>
     <p>
      Karl
      <a class="urllink" href="http://www.coloradomesa.edu/~kcastlet" rel="nofollow">
       http://www.coloradomesa.edu/~kcastlet
      </a>
     </p>
    </div>
    <!-- AddThis Button Style BEGIN -->
    <style>
     .addthis_toolbox {
    margin: 2em 0 1em;
  }
  .addthis_toolbox img {
    float: left;
    height: 25px;
    margin-right: 10px;
    width: auto;
  }
  .addthis_toolbox .social-container {
    float: left;
    height: 27px; 
    width: auto; 
  }
  .addthis_toolbox .social-container .social-content {
    float: left;
    margin-top: 2px;
    max-width: 0;
    overflow: hidden;
    -moz-transition: max-width .3s ease-out;
    -webkit-transition: max-width .3s ease-out;
    -o-transition: max-width .3s ease-out;
    transition: max-width .3s ease-out;
  }
  .addthis_toolbox .social-container:hover .social-content {
    max-width: 100px;
    -moz-transition: max-width .2s ease-in;
    -webkit-transition: max-width .2s ease-in;
    -o-transition: max-width .2s ease-in;
    transition: max-width .2s ease-in;
  }
  .addthis_toolbox .social-container .social-content a {
    float: left;
    margin-right: 5px;
  }

  .addthis_toolbox h3 {
    font-size: 24px;
    text-align: left;
  }
    </style>
    <!-- AddThis Button Style END -->
    <!-- AddThis Button BEGIN -->
    <div class="addthis_toolbox addthis_default_style">
     <h3>
      Share
     </h3>
     <!-- FACEBOOK -->
     <div class="social-container">
      <img src="/pub/skins/arduinoWide_SSO/img/facebook.png"/>
      <div class="social-content">
       <a class="addthis_button_facebook_like" fb:like:layout="button_count">
       </a>
      </div>
     </div>
     <!-- TWITTER -->
     <div class="social-container">
      <img src="/pub/skins/arduinoWide_SSO/img/twitter.png"/>
      <div class="social-content">
       <a class="addthis_button_tweet">
       </a>
      </div>
     </div>
     <!-- PINTEREST -->
     <div class="social-container">
      <img src="/pub/skins/arduinoWide_SSO/img/pinterest.png"/>
      <div class="social-content">
       <a class="addthis_button_pinterest_pinit" pi:pinit:media="http://www.addthis.com/cms-content/images/features/pinterest-lg.png" pi:pinit:url="http://www.addthis.com/features/pinterest">
       </a>
      </div>
     </div>
     <!-- G+ -->
     <div class="social-container">
      <img src="/pub/skins/arduinoWide_SSO/img/gplus.png"/>
      <div class="social-content">
       <a class="addthis_button_google_plusone" g:plusone:size="medium">
       </a>
      </div>
     </div>
     <script type="text/javascript">
      var addthis_config = {"data_track_addressbar":false};
     </script>
     <script src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-50573fab238b0d34" type="text/javascript">
     </script>
    </div>
    <!-- AddThis Button END -->
   </div>
   <!-- eof pagetext -->
  </div>
  <!-- eof page -->
  <!--PageFooterFmt-->
  <div id="pagefooter">
   <div class="pagefooter" id="pagefooter">
    <div class="row">
     <div class="large-8 eight columns">
      <div class="large-4 four columns newsletter-box">
       <!-- Begin MailChimp Signup Form -->
       <h6>
        Newsletter
       </h6>
       <form action="http://arduino.us5.list-manage.com/subscribe/post?u=0140d17584d1c002bcd94d0e8&amp;id=69a7d1abe4" class="validate" id="mc-embedded-subscribe-form" method="post" name="mc-embedded-subscribe-form" novalidate="" target="_blank">
        <input class="email" id="mce-EMAIL" name="EMAIL" placeholder="Enter your email to sign up" required="" type="email" value=""/>
        <i class="icon-right-small">
        </i>
        <input class="newsletter-button" id="mc-embedded-subscribe" name="subscribe" type="submit" value="Subscribe"/>
       </form>
       <!--End mc_embed_signup-->
      </div>
      <div class="clearfix">
      </div>
      <ul class="inline-list">
       <li class="monospace">
        2015 Arduino
       </li>
       <li>
        <a href="http://arduino.cc/en/Main/CopyrightNotice">
         Copyright Notice
        </a>
       </li>
       <li>
        <a href="http://arduino.cc/en/Main/ContactUs">
         Contact us
        </a>
       </li>
      </ul>
     </div>
     <div class="large-4 four columns">
      <ul class="arduino-social-links" id="arduinoSocialLinks">
       <li>
        <a href="https://twitter.com/arduino">
         <img src="http://arduino.cc/img/twitter.png"/>
        </a>
       </li>
       <li>
        <a href="http://www.facebook.com/official.arduino">
         <img src="http://arduino.cc/img/facebook.png"/>
        </a>
       </li>
       <li>
        <a href="https://plus.google.com/+Arduino">
         <img src="http://arduino.cc/img/gplus.png"/>
        </a>
       </li>
       <li>
        <a href="http://www.flickr.com/photos/arduino_cc">
         <img src="http://arduino.cc/img/flickr.png"/>
        </a>
       </li>
       <li>
        <a href="http://youtube.com/arduinoteam">
         <img src="http://arduino.cc/img/youtube.png"/>
        </a>
       </li>
      </ul>
     </div>
    </div>
   </div>
  </div>
  <!--/PageFooterFmt-->
  <script src="http://code.jquery.com/jquery-1.10.2.min.js">
  </script>
  <!--[if gte IE 9]&gt;&lt;!-->
  <script src="http://arduino.cc/js/foundation.min.js">
  </script>
  <script src="http://arduino.cc/js/foundation.topbar.custom.js">
  </script>
  <script>
   $(document).foundation();
  </script>
  <!--&lt;![endif]-->
  <!--[if IE 8]&gt;
	&lt;script src="http://arduino.cc/js/foundation_ie8.min.js"&gt;&lt;/script&gt;
	&lt;script src="http://arduino.cc/js/ie8/jquery.foundation.alerts.js"&gt;&lt;/script&gt;
	&lt;script src="http://arduino.cc/js/app.js"&gt;&lt;/script&gt;
	&lt;![endif]-->
  <script type="text/javascript">
   var _gaq = _gaq || [];
	  _gaq.push(['_setAccount', 'UA-22581631-3']);
	  _gaq.push(['_setDomainName', 'arduino.cc']);
	  _gaq.push(['_trackPageview']);
	
	    (function() {
	    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
	    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
	    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
	  })();
  </script>
 </body>
</html>