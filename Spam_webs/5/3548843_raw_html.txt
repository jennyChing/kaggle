<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
 <head>
  <title>
   Alice Mazes
  </title>
  <meta contents="mazes, Alice mazes, logic mazes, mazes-with-rules, puzzles, Robert Abbott" name="keywords"/>
  <meta contents="ALICE MAZES: Unlike Alice in Wonderland, you won't grow or shrink as you play these mazes. But the distance you travel will get larger or smaller." name="description"/>
  <style type="text/css">
   p {font: 18px/125% "Verdana", sans-serif; margin-top: 0; }
span {font: bold 19px/125% "Arial", "Helvetica", sans-serif; color: #fa0000;}
p.heading {font: bold 16px "Arial", sans-serif; margin-bottom: 0 }
  </style>
  <script language="JAVASCRIPT">
   /* Copyright 2001 by Robert Abbott -- www.logicmazes.com   */

var d = 1
var currentMaze = maze1
var mazeNumb = 1
var gw = 972
var savedGW = 972
var gwd = 844
var savedRedRow = 5
var savedRedCol = 4
var savedD = 1
var initSw = 0    // 0 = initial start-up, 1 = load in progress, 2 = normal
var bgChanged = 0

var board = new Array(10)

/* board: This is a two-dimensional array used to control the maze. It is 
accessed by [row number][column number].

I planned to describe the squares in each maze layout with binary numbers, where 
each bit determined if an arrow was present. These binary numbers could be 
conveniently carried as hexadecimal numbers. Unfortunately, I discovered that as 
soon as JavaScript does something with a hex number, it converts it to decimal.  
But I still could do logical ANDs on these decimal numbers to test bits. I also 
borrowed some functions that let me convert the decimal numbers back to hex, and 
that would let me use the hex numbers as part of GIF names.

Each square in the board has a three-digit hexadecimal number. The bottom two 
digits usually indicate what arrows are in the square. An arrow pointing north 
is represented by the 10 bit, east by 20, south by 40, and west by 80. NE is 01, 
SE is 02, SW is 04, and NW is 08. These numbers can be added together, so C1 
would represent three arrows that point west, south, and northeast. 00 is a 
special case, meaning this is the GOAL. 

The left-most digit is an identifier. If the 8 bit is on, the square is green, 
if 4 is on the square is blue. If the 2 bit is on, then this square has one or 
more red arrows, meaning 1 should be added to d. If the 1 bit is on, then this 
square has one or more yellow arrows, meaning 1 should be subtracted from d. If 
both the 2 and 1 bit are on, then the this is a special square that is mostly 
blank. So the left-most digit of these numbers is 3. I assigned these bits in 
such a way that there will always be at least one bit that is on.  Otherwise the 
convert-from-decimal-to-hex would lop off the leading zeros in the hex digits, 
and that would confuse my naming plans.

If the left-most digit is 3, then the middle digit indicates what type of special square this is.  If the middle digit's 1 bit is on, then this square (or rectangle in this case) is associated with a GIF that is a black line.  If the right-most digit has the 1 bit on, then this is a horizontal line; if the right-most digit has the 2 bit on, then this is a vertical line.  Therefore the hex number 311 in the board is associated with "si11.gif" ("si" means "special image") a 48x1 GIF that is a horizontal black line and 312 is associated with "si12.gif" a 1x47 GIF that is a vertical black line.

If the 2 bit of the middle digit is on, then this is an "inactive" special square, which is outside the maze.  If the 4 bit of the middle digit is on, then this is an "active" special square that is part of the maze.  The only difference between these types is if the user clicks on an "inactive" special square, then the program just ignores it.  If he clicks on an "active" special square, then an error message is displayed.

The inactive and active special squares are associated with mostly transparent GIFs with from zero to 4 black bars on the sides.  The right most digit indicates where the bars are.  The 1 bit means a bar at the top, the 2 bit means a bar at the right, the 4 bit means a bar at the bottom, and the 8 bit means a bar at the left.  More than one bit in the right digit can be on, so the hex number 34F indicates an active special square with black lines on each side.

Currently, the "active" special squares are white, not transparent. And the sides without black lines have dashed lines.

The first five numbers of each maze definition are not put in the board.
These numbers represent: the maze number, the row of the start position, 
the column of the start position, the width of the board, and a fifth position for use in the future. */


/* s: This is the mainline of the program.  When you click on a square, it links to this routine, and it passes the coordinates for the square in the board array. */

// Global variables used by s function:

var redRow = 2

var redCol = 2
var redSq = 0    // contents of red square
var row = 0      // row clicked on
var col = 0      // column clicked on
sq = 0           // contents of square clicked on

rowDif = 0
abRowDif = 0
colDif = 0
abColDif = 0
redSq = 0

function s(rowx,colx) {if (initSw &lt; 2) return

row = rowx
col = colx
rowDif = row - redRow
abRowDif = Math.abs(rowDif)
colDif = col - redCol
abColDif = Math.abs(colDif)
sq = board[row][col]
redSq = board[redRow][redCol]

if (bgChanged) restoreBG()

if (abRowDif + abColDif == 0) {alert("No, no! Don't click on the RED square.    \rClick on the square you're moving TO.");return}

if ((sq &amp; 0x100) &amp;&amp; (sq &amp; 0x200)) {if ((sq &amp; 0x040) == 0) return
else {error("You can't land on a blank square.");return}} 

if ((abRowDif * abColDif != 0) &amp;&amp; (abRowDif != abColDif)) {
error("You can't go to that square.\r\rIt is not on the same row, column,\ror diagonal line as the red square.");return}

arrow = 0
if (abRowDif == abColDif) {dMoved = abRowDif;arrow = testDiag()}
else {dMoved = abRowDif + abColDif;arrow = testNSEW()}

if (arrow == 0) {error("There is no arrow in the red square that points to the square you clicked on.");return}

if (dMoved != d) {toMove = d+" squares";if (d == 1) {toMove = "1 square"}
error("You can't go to that square.\rIt is not exactly "+toMove+" away from the red square.");return}

if (((sq &amp; 0x0FF) == 0) &amp;&amp; (mazeNumb == 11) &amp;&amp; (d &gt; 1)) {m11error(); return}

// Move is okay

setSq(redRow,redCol,"u")
redRow=rowx
redCol=colx
setSq(redRow,redCol,"r")

if (sq &amp; 0x300) changeD()
if (sq &amp; 0x0FF) return

// Maze was solved

color = currentMaze[4]
document.bgColor=color
bgChanged = 1

if (document.forms[0].sound.checked) {document.applets[0].play(1,'harp.au')}

alert("CONGRATULATIONS !!\r\rYou solved the maze !!\r\r(Code = "+gw+")")
return}

function restoreBG() {document.bgColor="#FFFFF2"; bgChanged=0; return}


function testNSEW() {
if ((rowDif &lt; 0) &amp;&amp; (redSq &amp; 0x010)) return(1) // N move okay
if ((colDif &gt; 0) &amp;&amp; (redSq &amp; 0x020)) return(1) // E move okay
if ((rowDif &gt; 0) &amp;&amp; (redSq &amp; 0x040)) return(1) // S move okay
if ((colDif &lt; 0) &amp;&amp; (redSq &amp; 0x080)) return(1) // W move okay
return(0)}

function testDiag() {
if ((rowDif &lt; 0) &amp;&amp; (colDif &gt; 0) &amp;&amp; (redSq &amp; 0x001)) return(1) // NE move okay
if ((rowDif &gt; 0) &amp;&amp; (colDif &gt; 0) &amp;&amp; (redSq &amp; 0x002)) return(1) // SE move okay
if ((rowDif &gt; 0) &amp;&amp; (colDif &lt; 0) &amp;&amp; (redSq &amp; 0x004)) return(1) // SW move okay
if ((rowDif &lt; 0) &amp;&amp; (colDif &lt; 0) &amp;&amp; (redSq &amp; 0x008)) return(1) // NW move okay
return(0)}


function changeD() {
if (sq &amp; 0x200) {++d; gw = d*103+mazeNumb*21;}
else {--d; gw = d*87+mazeNumb*34}

playCount = d; waitTime = 360
toPlay = "dink.au"
if ((d == 0) || (d &gt;= currentMaze[3])) {toPlay = "minotaur.au"; playCount = 1}
document.images["deqnumb"].src="x/d"+d+".gif"
setTimeout("playLoop()",2)

return}

var toPlay = "dink.au"
var playCount = 1
var waitTime = 300

function playLoop() {
if (!document.forms[0].sound.checked) return
document.applets[0].play(1,toPlay)
--playCount; if (playCount &lt; 1) return
setTimeout("playLoop()",waitTime)
return}

function error(msg) {
setSq(row,col,"x")
alert(msg)
setSq(row,col,"u")
return} 

/* setSq:

If param3 = "u" this sets a square to display its usual gif.
If param3 = "r" it displays a red gif.
If param3 = "u" it displays the big x.
If param3 = "k" this does not display anything. Instead it returns a gif name.
*/

function setSq(rown,coln,param3) {
var num = board[rown][coln]
var color = "s"
if (num &amp; 0x800) {color = "g"; if (param3=="r") color = "r"}
if (num &amp; 0x400) {color = "b"; if (param3=="r") color = "r"}

var type = "n"
if (num &amp; 0x200) {type = "a"}
if (num &amp; 0x100) {type = "d"; if (num &amp; 0x200) {type = "i"}} 

hexNum = toHex(num)
gifName = "x/"+color+type+hexNum.substring(1,3)+".gif"
if (param3 == "k") return(gifName)
if (param3 == "x") gifName = "x/bigx.gif"

locName = "r"+rown+"c"+coln
document.images[locName].src=gifName
return(0)}

// The next three functions convert a decimal number to hexadecimal.
// They were modified from a program in "Advanced Javascript Programming"
// by Shiran and Shiran.

function div(op1) {
return Math.round(op1 / 16 - op1 % 16 / 16)}

function getDigit(val) {
if (val == 10) return "a"
if (val == 11) return "b"
if (val == 12) return "c"
if (val == 13) return "d"
if (val == 14) return "e"
if (val == 15) return "f"
return val}

function toHex(num) {var newNum = (num == 0) ? "0" : ""
while (num &gt;= 1) {newNum = getDigit(num % 16) + newNum
;num = div(num)}
return newNum}

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

var m11Count = 0
var msgNumb = 1
var m11Array = new Array(0,0,0,0,0,0,0)

function m11error() {

if (m11Array[d] == m11Count) {
error("As was mentioned in a previous     \rpop-up window:      \r\rIn Maze 11, you may not enter\rthe goal when d = " + d)
return}
m11Array[d] = m11Count
initSw = 1
setTimeout("msg"+msgNumb+"()",550)
msgNumb++
return}

function msg1() {
error("Oh, er . . . I'm terribly sorry.  I neglected to mention that     \rthere is a special rule that applies only to Maze 11: \r\rYou may not enter the goal when d = " + d)
initSw = 2
return}

function msg2() {
error("Now, this is becoming embarrassing.  It seems     \rthere is ANOTHER special rule in Maze 11:\r\rYou may not enter the goal when d = " + d)
initSw = 2
return}

function msg3() {
error("Oh no!   I'm back.  There is YET ANOTHER     \rspecial rule for Maze 11:\r\rYou may not enter the goal when d = " + d)
initSw = 2
return}

function msg4() {
error("Okay -- I'm sure you don't want to hear another rule,     \rbut this is probably the last special rule for Maze 11:\r\rYou may not enter the goal when d = " + d)
initSw = 2
return}

function msg5() {
error("Okay, okay!   I thought the previous rule was the last one, but now I know that    \rTHIS IS ABSOLUTELY, POSITIVELY THE LAST SPECIAL RULE for Maze 11:\r\rYou may not enter the goal when d = " + d)
initSw = 2
return}

 
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

// INIT PROGRAM (started after maze number loads):

function initProg() {
initBoard(maze1)
initReds()
startMaze(maze1,'a')
return}


// START MAZE:

function startMaze(mazeLoc,param2) {

if ((initSw &lt; 2) &amp;&amp; (param2 != "a")) return
if (initSw == 2) initSw = 1

// If not initial load, display "loading" sign
if (initSw &gt; 0) document.images["loading"].src="x/loading.gif"

loadBoard(mazeLoc)

d = 1
mazeNumb = mazeLoc[0]
currentMaze = mazeLoc
redRow = mazeLoc[1]
redCol = mazeLoc[2]
if (mazeNumb == 11) {msgNumb = 1; m11Count++} 

dispGifs() // if not initial load, display board and other gifs

loadReds()
saveCur()

var wait = 10; if (initSw == 0) wait = 1000
initSw = 1
setTimeout("loadNum()",wait)
return}

function loadNum() {
if (mazeNumb &gt; 9) {highNum(); return}
document.images["mazenumber"].src="x/maze"+mazeNumb+".gif"
document.images["mazenumber2"].src="padding.gif"
return}

function highNum() {
if (mazeNumb == 20) {above20Num(); return}
document.images["mazenumber"].src="x/maze1.gif"
lowDigit = mazeNumb - 10
document.images["mazenumber2"].src="x/maze"+lowDigit+".gif"
return}

function above20Num() {
document.images["mazenumber"].src="x/maze2.gif"
lowDigit = 0
document.images["mazenumber2"].src="x/maze"+lowDigit+".gif"
return}



function numLoaded() {
if (initSw == 0) {initProg();return}
setTimeout("finalize2()",2000)
return}

function finalize2() {
playSound("dink.au")
document.images["loading"].src="x/si20.gif"  // Turn off "loading" sign
return}

function playSound(soundFile) { 
var param = 2; if (document.forms[0].sound.checked) param = 1
initSw = document.applets[0].play(param,soundFile) - gwd
if (initSw != 0 &amp;&amp; initSw != 1) initSw = 2 // fix 8/20/02
return}



function dispGifs() {
var param = "u"
for (rowu = 0; rowu &lt; 10; rowu++) {
for (colu = 0; colu &lt; 10; colu++) {
param = "u"; if ((rowu == redRow) &amp;&amp; (colu == redCol)) param = "r"
setSq(rowu,colu,param)}}
document.images["deqnumb"].src="x/d1.gif"
return}

function loadBoard(initNumbs) {
var n = 5
for (rowz = 0; rowz &lt; 10; rowz++) {
    for (colz = 0; colz &lt; 10; colz++) {
    board[rowz][colz] = initNumbs[n]
    n++
    }
}
return}

function saveCur() {
if (bgChanged) restoreBG()
savedRedRow = redRow
savedRedCol = redCol
savedD = d
savedGW = gw

return}

function goBack(param) {
if (initSw &lt; 2) return
if (bgChanged) restoreBG()
setSq (redRow,redCol,"u")
if (param == "b") {redRow = savedRedRow; redCol = savedRedCol; d = savedD}
   else {redRow = currentMaze[1]; redCol = currentMaze[2];d = 1}
setSq (redRow,redCol,"r")
document.images["deqnumb"].src="x/d"+d+".gif"
gw = savedGW
return}


function initBoard() {
for (rowi = 0; rowi &lt; 10; rowi++) {
    board[rowi] = new Array(10)
    for (coli = 0; coli &lt; 10; coli++) {
    board[rowi][coli] = 0x800
 }
}
return}

var reds = new Array(66)

function initReds() {
for (redI = 0; redI &lt; 66; redI++) {
    reds[redI] = new Image()
    reds[redI].src = "x/rn10.gif"}
return}

function loadReds() {
// First, load normal gif for square that now has red gif
gifName2 = setSq(redRow,redCol,"k"); reds[0].src = gifName2

indexNum = 1
for (rowr = 0; rowr &lt; 10; rowr++) {
for (colr = 0; colr &lt; 10; colr++) {
gifName2 = setSq(rowr,colr,"k")
if (gifName2.substring(2,3) == "s") continue
gifName3 = "x/r"+gifName2.substring(3,10)
reds[indexNum].src = gifName3
indexNum++}}

return}

// Color shown before each array is name of winning color

//aqua
var maze1 = new Array(1,1,2,5,0x00FFFF,
0x320,0x320,0x324,0x324,0x324,0x324,0x324,0x320,0x320,0x320, 0x320,0x322,0x402,0x802,0x406,0x884,0x440,0x328,0x320,0x320,
0x320,0x322,0x801,0x404,0x882,0x405,0x808,0x328,0x320,0x320,
0x320,0x322,0x402,0x80A,0x402,0x805,0x440,0x328,0x320,0x320,
0x320,0x322,0x801,0x404,0x8C0,0x420,0x840,0x328,0x320,0x320,
0x320,0x322,0x430,0x801,0x4A0,0x808,0x400,0x328,0x320,0x320,
0x320,0x320,0x321,0x321,0x321,0x321,0x321,0x320,0x320,0x320,
0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,
0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,
0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320)

//yellow, a little brighter
var maze2 = new Array(2,1,2,5,0Xffff20,
0x320,0x320,0x324,0x324,0x324,0x324,0x324,0x320,0x320,0x320,
0x320,0x322,0x402,0x820,0x406,0x880,0x400,0x328,0x320,0x320,
0x320,0x322,0x801,0x404,0x884,0x420,0x808,0x328,0x320,0x320,
0x320,0x322,0x440,0x80A,0x401,0x809,0x408,0x328,0x320,0x320,
0x320,0x322,0x802,0x401,0x806,0x410,0x850,0x328,0x320,0x320,
0x320,0x322,0x401,0x8A0,0x401,0x801,0x680,0x328,0x320,0x320,
0x320,0x320,0x321,0x321,0x321,0x321,0x321,0x320,0x320,0x320,
0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,
0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,
0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320)

// lime
var maze3 = new Array(3,1,2,5,0x00FF00,
0x320,0x320,0x324,0x324,0x324,0x324,0x324,0x320,0x320,0x320, 0x320,0x322,0x420,0x802,0x420,0x822,0x504,0x328,0x320,0x320,
0x320,0x322,0x810,0x405,0x805,0x406,0x804,0x328,0x320,0x320,
0x320,0x322,0x402,0x80C,0x428,0x80A,0x404,0x328,0x320,0x320,
0x320,0x322,0x802,0x404,0x80A,0x482,0x810,0x328,0x320,0x320,
0x320,0x322,0x400,0x801,0x410,0x808,0x610,0x328,0x320,0x320,
0x320,0x320,0x321,0x321,0x321,0x321,0x321,0x320,0x320,0x320,
0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,
0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,
0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320)

// magenta brightened
var maze4 = new Array(4,2,3,4,0xff80ff,0x320,
0x320,0x320,0x324,0x324,0x324,0x324,0x320,0x320,0x320,0x320,
0x320,0x322,0x460,0x8A0,0x4E0,0x940,0x328,0x320,0x320,0x320,
0x320,0x322,0x820,0x410,0x840,0x440,0x328,0x320,0x320,0x320,
0x320,0x322,0x410,0x8D0,0x480,0x8C0,0x328,0x320,0x320,0x320,
0x320,0x322,0xA10,0x480,0x8A0,0x400,0x328,0x320,0x320,0x320,
0x320,0x320,0x321,0x321,0x321,0x321,0x320,0x320,0x320,0x320,
0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,
0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,
0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320)

// slateblue
var maze5 = new Array(5,5,4,5,0x6a5acd,
0x320,0x320,0x324,0x324,0x324,0x324,0x324,0x320,0x320,0x320, 0x320,0x322,0x402,0x860,0x4A0,0x8C0,0x480,0x328,0x320,0x320,
0x320,0x322,0x841,0x440,0x8E0,0x402,0xAC0,0x328,0x320,0x320,
0x320,0x322,0x450,0x850,0x400,0x808,0x450,0x328,0x320,0x320,
0x320,0x322,0x801,0x408,0xA10,0x408,0x840,0x328,0x320,0x320,
0x320,0x322,0x401,0x9A0,0x410,0x810,0x680,0x328,0x320,0x320,
0x320,0x320,0x321,0x321,0x321,0x321,0x321,0x320,0x320,0x320,
0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,
0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,
0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320)

// firebrick
var maze6 = new Array(6,7,4,8,0xb22222,0x320,
0x320,0x320,0x324,0x324,0x324,0x324,0x320,0x320,0x320,0x320,
0x320,0x322,0x640,0x880,0x484,0x880,0x328,0x320,0x320,0x320,
0x320,0x322,0x800,0x4E0,0x808,0x490,0x328,0x320,0x320,0x320,
0x320,0x322,0x430,0x801,0x470,0x810,0x328,0x320,0x320,0x320,
0x320,0x322,0x840,0x412,0x80A,0x610,0x328,0x320,0x320,0x320,
0x320,0x322,0x410,0x801,0x448,0x890,0x328,0x320,0x320,0x320,
0x320,0x322,0x830,0x411,0x810,0x480,0x328,0x320,0x320,0x320,
0x320,0x322,0x510,0x8A0,0x4A0,0x810,0x328,0x320,0x320,0x320,
0x320,0x320,0x321,0x321,0x321,0x321,0x320,0x320,0x320,0x320,
0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320)

// lawngreen
var maze7 = new Array(7,4,5,7,0x7cfc00,
0x320,0x320,0x324,0x324,0x324,0x324,0x324,0x320,0x320,0x320,
0x320,0x322,0x920,0x4A0,0x802,0x420,0x800,0x328,0x320,0x320,
0x320,0x322,0x520,0x821,0x460,0x880,0x4D0,0x328,0x320,0x320,
0x320,0x322,0x34D,0x345,0x345,0x345,0x347,0x328,0x320,0x320,
0x320,0x322,0x410,0x810,0x480,0x850,0x4C0,0x328,0x320,0x320,
0x320,0x322,0xA20,0x410,0x8B0,0x4D0,0x980,0x328,0x320,0x320,
0x320,0x322,0x630,0x808,0x490,0x890,0x490,0x328,0x320,0x320,
0x320,0x320,0x321,0x321,0x321,0x321,0x321,0x320,0x320,0x320,
0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,
0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320)

// blue
var maze8 = new Array(8,5,4,5,0x0000ff,
0x320,0x320,0x324,0x324,0x324,0x324,0x324,0x320,0x320,0x320,
0x320,0x322,0x442,0x940,0x4A0,0xA04,0x480,0x328,0x320,0x320,
0x320,0x322,0x950,0x541,0x800,0x484,0x8C0,0x328,0x320,0x320,
0x320,0x322,0x450,0x820,0x40A,0x816,0x410,0x328,0x320,0x320,
0x320,0x322,0x830,0x421,0x822,0x40A,0xa10,0x328,0x320,0x320,
0x320,0x322,0x520,0x8A0,0x481,0x811,0x610,0x328,0x320,0x320,
0x320,0x320,0x321,0x321,0x321,0x321,0x321,0x320,0x320,0x320,
0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,
0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,
0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320)

// deep pink
var maze9 = new Array(9,1,2,6,0xff1493,
0x320,0x320,0x324,0x324,0x324,0x324,0x324,0x324,0x320,0x320,
0x320,0x322,0x440,0x840,0x480,0x8C0,0x480,0xA80,0x328,0x320,
0x320,0x322,0x802,0x406,0x806,0x484,0x880,0x498,0x328,0x320,
0x320,0x322,0x440,0x840,0x610,0xA80,0x510,0x950,0x328,0x320,
0x320,0x322,0x841,0x460,0xA20,0x620,0x824,0x410,0x328,0x320,
0x320,0x322,0x422,0x820,0x403,0x820,0x410,0x850,0x328,0x320,
0x320,0x322,0x801,0x620,0x828,0x4A0,0x810,0x400,0x328,0x320,
0x320,0x320,0x321,0x321,0x321,0x321,0x321,0x321,0x320,0x320,
0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,
0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320)

// dark orchid

var maze10 = new Array(10,3,4,7,0x9932cc,
0x320,0x324,0x324,0x324,0x324,0x324,0x324,0x324,0x320,0x320,
0x312,0x402,0x802,0x420,0x802,0x406,0x980,0x480,0x328,0x320,
0x312,0x860,0x411,0x9C0,0x401,0x880,0x4A0,0x884,0x328,0x320,
0x312,0x440,0x810,0x480,0x8C0,0x40A,0x860,0x680,0x328,0x320,
0x312,0x34D,0x345,0x345,0x345,0x345,0x345,0x347,0x328,0x320,
0x312,0x460,0x810,0x420,0x800,0x406,0x816,0x480,0x328,0x320,
0x312,0xA20,0x40C,0x8A0,0x420,0x814,0x410,0xA10,0x328,0x320,
0x312,0x620,0x901,0x428,0x8A8,0x408,0x810,0x410,0x328,0x320,
0x320,0x321,0x321,0x321,0x321,0x321,0x321,0x321,0x320,0x320,
0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320)

// tomato
 var maze11 = new Array(11,1,1,7,0xFF6347, 0x320,0x324,0x324,0x324,0x324,0x324,0x324,0x324,0x320,0x320, 0x312,0x460,0x820,0x460,0x820,0x422,0xA40,0x440,0x328,0x320, 0x312,0x802,0x402,0x804,0x402,0x822,0x402,0x880,0x328,0x320, 0x312,0x430,0x904,0x420,0x881,0x440,0x840,0x440,0x328,0x320, 0x312,0x850,0x501,0x805,0x480,0x8C0,0x450,0x840,0x328,0x320, 0x312,0x412,0x802,0x405,0x80A,0x408,0x808,0x404,0x328,0x320, 0x312,0x820,0x446,0x820,0x40A,0x804,0x480,0x840,0x328,0x320, 0x312,0x610,0xA01,0x610,0x880,0x4A0,0x8A0,0x400,0x328,0x320, 0x320,0x321,0x321,0x321,0x321,0x321,0x321,0x321,0x320,0x320,
0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320)

// lawngreen

var maze12 = new Array(12,1,1,8,0x7cfc00,
0x320,0x324,0x324,0x324,0x324,0x324,0x324,0x324,0x324,0x320,
0x312,0x402,0x824,0x404,0x804,0x4A0,0x804,0x4A0,0x840,0x312,
0x312,0x840,0x402,0x80E,0x408,0x880,0x40C,0x810,0x440,0x312,
0x312,0x441,0x840,0x402,0x850,0x4A0,0x809,0x408,0x840,0x312,
0x312,0x860,0x402,0x8A0,0x402,0x8A0,0x490,0x850,0x404,0x312,
0x312,0x442,0x801,0x402,0x801,0x402,0x881,0x408,0x814,0x312,
0x312,0x801,0x405,0x801,0x4A0,0x801,0x406,0x80A,0x408,0x312,
0x312,0x442,0x809,0x4A0,0x802,0x405,0x80A,0x405,0x840,0x312,
0x312,0x801,0x401,0x808,0x480,0x801,0x408,0x820,0x400,0x312,
0x320,0x311,0x311,0x311,0x311,0x311,0x311,0x311,0x311,0x320)

// red (brightened)

var maze13 = new Array(13,4,1,8,0xFF0020,
0x320,0x324,0x324,0x324,0x324,0x324,0x324,0x324,0x324,0x320,
0x312,0x620,0x840,0x424,0xAA0,0x460,0x804,0x446,0x800,0x312,
0x312,0x820,0x448,0xA02,0x42C,0x808,0x4C0,0x844,0x490,0x312,
0x312,0x420,0x840,0x450,0x8C0,0x40E,0x880,0x404,0x880,0x312,
0x312,0x810,0x440,0xAA0,0x449,0x8E0,0x4C0,0xA80,0x480,0x312,
0x312,0x450,0x8E0,0x401,0xA50,0x482,0x8C0,0x406,0x810,0x312,
0x312,0x810,0x620,0x821,0x420,0x820,0x430,0x810,0x450,0x312,
0x312,0x620,0xA20,0x420,0x820,0x420,0x830,0x608,0xA10,0x312,
0x320,0x321,0x321,0x321,0x321,0x321,0x321,0x321,0x320,0x320,
0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320)

// yellow (brightened)

var maze14 = new Array(14,4,1,
8,0xffff20,
0x320,0x324,0x324,0x324,0x324,0x324,0x324,0x324,0x324,0x320, 0x312,0x660,0x820,0x4A0,0x840,0x504,0x860,0x4C0,0x940,0x312, 0x312,0x870,0x460,0x850,0x4A0,0x902,0x440,0x804,0x410,0x312, 0x312,0x470,0x820,0x470,0x801,0x402,0x840,0x480,0x804,0x312, 0x312,0x870,0x430,0x940,0x440,0x920,0x4A0,0x800,0x404,0x312, 0x312,0x470,0x850,0x4A0,0x910,0x401,0x804,0x404,0x880,0x312, 0x312,0x870,0x510,0x902,0x480,0x880,0x508,0x820,0x410,0x312, 0x312,0x630,0x830,0x501,0x8A0,0x4A0,0x801,0x5B0,0x880,0x312, 0x320,0x321,0x321,0x321,0x321,0x321,0x321,0x321,0x320,0x320,
0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320)

// violet

var maze15 = new Array(15,7,4,7,0xee82ee,
0x320,0x324,0x324,0x324,0x324,0x324,0x324,0x324,0x320,0x320,
0x312,0x520,0x804,0x440,0x8A0,0x4A0,0x820,0x640,0x328,0x320,
0x312,0x820,0x420,0xA02,0x460,0x850,0x540,0x880,0x328,0x320,
0x312,0x450,0x802,0x4A2,0x800,0x402,0x808,0x448,0x328,0x320,
0x312,0x810,0x460,0x820,0x408,0x860,0x441,0x850,0x328,0x320,
0x312,0x410,0x801,0x481,0x840,0x680,0x880,0x448,0x328,0x320,
0x312,0x830,0x510,0x810,0x410,0x880,0x480,0x890,0x328,0x320,
0x312,0x610,0x888,0x480,0x8B0,0x4A0,0x8A0,0x490,0x328,0x320,
0x320,0x321,0x321,0x321,0x321,0x321,0x321,0x321,0x320,0x320,
0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320,0x320)

// dodgerblue
var maze16 = new Array(16,1,1,8,0x1e90ff,
0x320,0x324,0x324,0x324,0x324,0x324,0x324,0x324,0x324,0x320,
0x312,0x460,0x820,0x640,0x8A0,0x406,0x902,0x4E0,0Xa40,0x312,
0x312,0xA02,0x420,0x8A0,0x450,0x820,0x450,0x850,0x404,0x312,
0x312,0x403,0x810,0x460,0x820,0x4A0,0x80A,0x405,0x804,0x312,
0x312,0x803,0x502,0x820,0x4A0,0x850,0x450,0x90A,0x440,0x312,
0x312,0x410,0x810,0x405,0x805,0x40E,0x805,0x440,0x840,0x312,
0x312,0x850,0x405,0x80D,0x440,0x8A0,0x440,0x850,0x40C,0x312,
0x312,0x510,0x830,0x470,0x8A0,0x450,0x880,0x404,0Xa08,0x312,
0x312,0x830,0x610,0x890,0x480,0x801,0x420,0xA80,0x400,0x312,
0x320,0x311,0x311,0x311,0x311,0x311,0x311,0x311,0x311,0x320)

// blueviolet
var maze17 = new Array(17,1,1,8,0x8a2be2,
0x320,0x324,0x324,0x324,0x324,0x324,0x324,0x324,0x324,0x320,
0x312,0x460,0x840,0x420,0xAA0,0x4A0,0x802,0x440,0x8C0,0x312,
0x312,0xA60,0x460,0x820,0x490,0x860,0x480,0xAC0,0x480,0x312,
0x312,0x440,0x8C0,0x440,0x890,0x402,0x840,0x405,0x880,0x312,
0x312,0x820,0x450,0x860,0x660,0x906,0x4C0,0x840,0x410,0x312,
0x312,0x420,0x860,0x440,0x820,0x441,0x840,0x405,0x808,0x312,
0x312,0x801,0x420,0x850,0x420,0x901,0x404,0xA80,0x510,0x312,
0x312,0x440,0x8A0,0x480,0x808,0x4A0,0x8A0,0x4E0,0x810,0x312,
0x312,0xA10,0x601,0x8A0,0x4A0,0x880,0x401,0x880,0x400,0x312,
0x320,0x311,0x311,0x311,0x311,0x311,0x311,0x311,0x311,0x320)

// chartruse

var maze18 = new Array(18,6,6,5,0x7FFF00,
0x320,0x324,0x324,0x324,0x324,0x324,0x324,0x324,0x324,0x320,
0x312,0x442,0x8E0,0x4C0,0x980,0x480,0x880,0x480,0x880,0x312,
0x312,0x862,0x460,0x880,0x422,0x880,0x420,0x890,0x4C0,0x312,
0x312,0x460,0x840,0x400,0x8E0,0x402,0x810,0x480,0x810,0x312,
0x312,0xA40,0x470,0x802,0x501,0xA04,0x448,0x890,0x450,0x312,
0x312,0x410,0x860,0x410,0xA01,0x501,0x849,0x449,0xA10,0x312,
0x312,0x860,0x410,0x805,0x401,0x816,0x4A0,0x810,0x4D0,0x312,
0x312,0x430,0x8A0,0x480,0x8A0,0x4A0,0x830,0x490,0x810,0x312,
0x312,0x830,0x430,0x820,0x480,0x920,0x4A0,0x8B0,0x490,0x312,
0x320,0x311,0x311,0x311,0x311,0x311,0x311,0x311,0x311,0x320)

// lemonchiffon

var maze19 = new Array(19,1,2,6,0xfffacd,
0x320,0x320,0x324,0x324,0x324,0x324,0x324,0x324,0x320,0x320,
0x320,0x322,0x440,0xA40,0x5A0,0x802,0x404,0x804,0x328,0x320,
0x320,0x322,0x801,0x420,0x860,0x440,0x880,0x440,0x328,0x320,
0x320,0x322,0x420,0x801,0x405,0x850,0x440,0x810,0x328,0x320,
0x320,0x322,0x850,0x540,0x850,0x40D,0x910,0x410,0x328,0x320,
0x320,0x322,0x450,0x802,0x410,0x880,0x4C0,0x850,0x328,0x320,
0x320,0x322,0x850,0x420,0x80A,0x402,0x804,0x480,0x328,0x320,
0x320,0x322,0x420,0x801,0x401,0x809,0x680,0xA80,0x328,0x320,
0x320,0x322,0x801,0x402,0xA10,0x401,0x810,0x400,0x328,0x320,
0x320,0x320,0x321,0x321,0x321,0x321,0x321,0x321,0x320,0x320)

// no name

var maze20 = new Array(20,8,2,8,0xf90be7,
0x320,0x324,0x324,0x324,0x324,0x324,0x324,0x324,0x324,0x320,
0x312,0x620,0x860,0x406,0x8A0,0x520,0x802,0x440,0x9C0,0x312,
0x312,0xA02,0x440,0x844,0x460,0xAA0,0x4A0,0x840,0x404,0x312,
0x312,0x402,0x802,0x401,0x810,0x4A0,0x8C0,0x444,0x8C0,0x312,
0x312,0x870,0x501,0x841,0x409,0x809,0x440,0x840,0x490,0x312,
0x312,0x620,0x90A,0x430,0x851,0x414,0x904,0x448,0x808,0x312,
0x312,0x812,0x40D,0x808,0x404,0x840,0x408,0x848,0x480,0x312,
0x312,0x441,0x809,0x488,0x8B0,0x6A0,0x8A0,0x480,0x810,0x312,
0x312,0x800,0x430,0x808,0x428,0x980,0x420,0x890,0x610,0x312,
0x320,0x311,0x311,0x311,0x311,0x311,0x311,0x311,0x311,0x320)



// This is here just to pre-load some GIFs.
dummy1 = new Image();dummy1.src="x/bigx.gif"
dummy2 = new Image();dummy2.src="x/d0.gif"
dummy3 = new Image();dummy3.src="x/d2.gif"
dummy4 = new Image();dummy4.src="x/d3.gif"
dummya = new Image();dummya.src="x/d4.gif"
dummy5 = new Image();dummy5.src="x/d5.gif"
dummy6 = new Image();dummy6.src="x/d6.gif"
dummy7 = new Image();dummy7.src="x/d7.gif"
dummy8 = new Image();dummy8.src="x/d8.gif"
  </script>
 </head>
 <body alink="BLUE" bgcolor="#FFFFF2" link="BLUE" vlink="BLUE">
  <noscript>
   <h2>
    <font color="#F00000" face="arial">
     This maze won't work, because you need to have both Java and JavaScript enabled.
     <p>
      If you're using Internet Explorer, it can be tricky trying to figure out how to enable JavaScript. Here's a hint: IE doesn't even call it "JavaScript." Instead, they call it "active content" or "Active Scripting" or "Scripting."
     </p>
    </font>
   </h2>
  </noscript>
  <center>
   <font color="#2000ff" face="arial" size="6">
    <b>
     Alice Maze
    </b>
    <img align="BOTTOM" border="0" height="25" hspace="0" name="mazenumber" onload="numLoaded()" src="padding.gif" vspace="0" width="16"/>
    <img align="BOTTOM" border="0" height='25"' hspace="1" name="mazenumber2" src="padding.gif" vspace="0" width="16"/>
    <br/>
   </font>
  </center>
  <table align="RIGHT" border="0" cellpadding="0" cellspacing="0">
   <tr>
    <td>
     <img border="0" height="47" hspace="0" name="r0c0" src="x/si20.gif" vspace="0" width="1"/>
    </td>
    <td>
     <img border="0" height="47" hspace="0" name="r0c1" src="x/si20.gif" vspace="0" width="48"/>
    </td>
    <td>
     <img border="0" height="47" hspace="0" name="r0c2" src="x/si24.gif" vspace="0" width="48"/>
    </td>
    <td>
     <img border="0" height="47" hspace="0" name="r0c3" src="x/si24.gif" vspace="0" width="48"/>
    </td>
    <td>
     <img border="0" height="47" hspace="0" name="r0c4" src="x/si24.gif" vspace="0" width="48"/>
    </td>
    <td>
     <img border="0" height="47" hspace="0" name="r0c5" src="x/si24.gif" vspace="0" width="48"/>
    </td>
    <td>
     <img border="0" height="47" hspace="0" name="r0c6" src="x/si20.gif" vspace="0" width="48"/>
    </td>
    <td>
     <img border="0" height="47" hspace="0" name="r0c7" src="x/si20.gif" vspace="0" width="48"/>
    </td>
    <td>
     <img border="0" height="47" hspace="0" name="r0c8" src="x/si20.gif" vspace="0" width="48"/>
    </td>
    <td>
     <img border="0" height="47" hspace="0" name="r0c9" src="x/si20.gif" vspace="0" width="36"/>
    </td>
    <td>
     <img border="0" height="47" hspace="0" name="loading" src="x/loading.gif" vspace="0" width="125"/>
    </td>
    <td>
     <img border="0" height="47" hspace="0" src="padding.gif" vspace="0" width="96"/>
    </td>
   </tr>
   <tr>
    <td>
     <img border="0" height="47" hspace="0" name="r1c0" src="x/si20.gif" vspace="0" width="1"/>
    </td>
    <td>
     <a href="javascript:s(1,1)">
      <img border="0" height="47" hspace="0" name="r1c1" src="x/si22.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <a href="javascript:s(1,2)">
      <img border="0" height="47" hspace="0" name="r1c2" src="x/bn60.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <a href="javascript:s(1,3)">
      <img border="0" height="47" hspace="0" name="r1c3" src="x/gna0.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <a href="javascript:s(1,4)">
      <img border="0" height="47" hspace="0" name="r1c4" src="x/bne0.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <a href="javascript:s(1,5)">
      <img border="0" height="47" hspace="0" name="r1c5" src="x/gd40.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <a href="javascript:s(1,6)">
      <img border="0" height="47" hspace="0" name="r1c6" src="x/si28.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <a href="javascript:s(1,7)">
      <img border="0" height="47" hspace="0" name="r1c7" src="x/si20.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <a href="javascript:s(1,8)">
      <img border="0" height="47" hspace="0" name="r1c8" src="x/si20.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <img align="LEFT" border="0" height="47" hspace="0" name="r1c9" src="x/si20.gif" vspace="0" width="1"/>
    </td>
    <td>
     <img align="LEFT" border="0" height="47" hspace="0" name="deqnumb" src="x/d1.gif" vspace="0" width="60"/>
    </td>
   </tr>
   <tr>
    <td>
     <img border="0" height="47" hspace="0" name="r2c0" src="x/si20.gif" vspace="0" width="1"/>
    </td>
    <td>
     <a href="javascript:s(2,1)">
      <img border="0" height="47" hspace="0" name="r2c1" src="x/si22.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <a href="javascript:s(2,2)">
      <img border="0" height="47" hspace="0" name="r2c2" src="x/rn20.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <a href="javascript:s(2,3)">
      <img border="0" height="47" hspace="0" name="r2c3" src="x/bn10.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <a href="javascript:s(2,4)">
      <img border="0" height="47" hspace="0" name="r2c4" src="x/gn40.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <a href="javascript:s(2,5)">
      <img border="0" height="47" hspace="0" name="r2c5" src="x/bn40.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <a href="javascript:s(2,6)">
      <img border="0" height="47" hspace="0" name="r2c6" src="x/si28.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <a href="javascript:s(2,7)">
      <img border="0" height="47" hspace="0" name="r2c7" src="x/si20.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <a href="javascript:s(2,8)">
      <img border="0" height="47" hspace="0" name="r2c8" src="x/si20.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <img align="LEFT" border="0" height="47" hspace="0" name="r2c9" src="x/si20.gif" vspace="0" width="1"/>
    </td>
    <td>
     <font face="arial" size="2">
      <a href="javascript:goBack('r')">
       Restart the current maze
      </a>
     </font>
    </td>
   </tr>
   <tr>
    <td>
     <img border="0" height="47" hspace="0" name="r3c0" src="x/si20.gif" vspace="0" width="1"/>
    </td>
    <td>
     <a href="javascript:s(3,1)">
      <img border="0" height="47" hspace="0" name="r3c1" src="x/si22.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <a href="javascript:s(3,2)">
      <img border="0" height="47" hspace="0" name="r3c2" src="x/bn10.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <a href="javascript:s(3,3)">
      <img border="0" height="47" hspace="0" name="r3c3" src="x/gnd0.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <a href="javascript:s(3,4)">
      <img border="0" height="47" hspace="0" name="r3c4" src="x/bn80.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <a href="javascript:s(3,5)">
      <img border="0" height="47" hspace="0" name="r3c5" src="x/gnc0.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <a href="javascript:s(3,6)">
      <img border="0" height="47" hspace="0" name="r3c6" src="x/si28.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <a href="javascript:s(3,7)">
      <img border="0" height="47" hspace="0" name="r3c7" src="x/si20.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <a href="javascript:s(3,8)">
      <img border="0" height="47" hspace="0" name="r3c8" src="x/si20.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <img align="LEFT" border="0" height="47" hspace="0" name="r3c9" src="x/si20.gif" vspace="0" width="1"/>
    </td>
    <td>
     <font color="BLUE" face="arial" size="2">
      Start Maze
      <a href="javascript:startMaze(maze1,'u')">
       1
      </a>
      <a href="javascript:startMaze(maze2,'u')">
       2
      </a>
      <a href="javascript:startMaze(maze3,'u')">
       3
      </a>
      <a href="javascript:startMaze(maze4,'u')">
       4
      </a>
      <a href="javascript:startMaze(maze5,'u')">
       5
      </a>
      <a href="javascript:startMaze(maze6,'u')">
       6
      </a>
      <a href="javascript:startMaze(maze7,'u')">
       7
      </a>
      <a href="javascript:startMaze(maze8,'u')">
       8
      </a>
      <a href="javascript:startMaze(maze9,'u')">
       9
      </a>
      <a href="javascript:startMaze(maze10,'u')">
       10
      </a>
      <br/>
      <a href="javascript:startMaze(maze11,'u')">
       11
      </a>
      <a href="javascript:startMaze(maze12,'u')">
       12
      </a>
      <a href="javascript:startMaze(maze13,'u')">
       13
      </a>
      <a href="javascript:startMaze(maze14,'u')">
       14
      </a>
      <a href="javascript:startMaze(maze15,'u')">
       15
      </a>
      <a href="javascript:startMaze(maze16,'u')">
       16
      </a>
      <a href="javascript:startMaze(maze17,'u')">
       17
      </a>
      <a href="javascript:startMaze(maze18,'u')">
       18
      </a>
      <a href="javascript:startMaze(maze19,'u')">
       19
      </a>
      <a href="javascript:startMaze(maze20,'u')">
       20
      </a>
     </font>
    </td>
   </tr>
   <tr>
    <td>
     <img border="0" height="47" hspace="0" name="r4c0" src="x/si20.gif" vspace="0" width="1"/>
    </td>
    <td>
     <a href="javascript:s(4,1)">
      <img border="0" height="47" hspace="0" name="r4c1" src="x/si22.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <a href="javascript:s(4,2)">
      <img border="0" height="47" hspace="0" name="r4c2" src="x/ga10.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <a href="javascript:s(4,3)">
      <img border="0" height="47" hspace="0" name="r4c3" src="x/bn80.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <a href="javascript:s(4,4)">
      <img border="0" height="47" hspace="0" name="r4c4" src="x/gna0.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <a href="javascript:s(4,5)">
      <img border="0" height="47" hspace="0" name="r4c5" src="x/bn00.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <a href="javascript:s(4,6)">
      <img border="0" height="47" hspace="0" name="r4c6" src="x/si28.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <a href="javascript:s(4,7)">
      <img border="0" height="47" hspace="0" name="r4c7" src="x/si20.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <a href="javascript:s(4,8)">
      <img border="0" height="47" hspace="0" name="r4c8" src="x/si20.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <img align="LEFT" border="0" height="47" hspace="0" name="r4c9" src="x/si20.gif" vspace="0" width="1"/>
    </td>
    <td>
     <a href="javascript:saveCur()">
      <font color="BLUE" face="arial" size="2">
       Save the current position
      </font>
     </a>
    </td>
   </tr>
   <tr>
    <td>
     <img border="0" height="47" hspace="0" name="r5c0" src="x/si20.gif" vspace="0" width="1"/>
    </td>
    <td>
     <a href="javascript:s(5,1)">
      <img border="0" height="47" hspace="0" name="r5c1" src="x/si20.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <a href="javascript:s(5,2)">
      <img border="0" height="47" hspace="0" name="r5c2" src="x/si21.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <a href="javascript:s(5,3)">
      <img border="0" height="47" hspace="0" name="r5c3" src="x/si21.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <a href="javascript:s(5,4)">
      <img border="0" height="47" hspace="0" name="r5c4" src="x/si21.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <a href="javascript:s(5,5)">
      <img border="0" height="47" hspace="0" name="r5c5" src="x/si21.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <a href="javascript:s(5,6)">
      <img border="0" height="47" hspace="0" name="r5c6" src="x/si20.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <a href="javascript:s(5,7)">
      <img border="0" height="47" hspace="0" name="r5c7" src="x/si20.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <a href="javascript:s(5,8)">
      <img border="0" height="47" hspace="0" name="r5c8" src="x/si20.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <img align="LEFT" border="0" height="47" hspace="0" name="r5c9" src="x/si20.gif" vspace="0" width="1"/>
    </td>
    <td>
     <a href="javascript:goBack('b')">
      <font color="BLUE" face="arial" size="2">
       Go back to last saved position
      </font>
     </a>
    </td>
   </tr>
   <tr>
    <td>
     <img border="0" height="47" hspace="0" name="r6c0" src="x/si20.gif" vspace="0" width="1"/>
    </td>
    <td>
     <a href="javascript:s(6,1)">
      <img border="0" height="47" hspace="0" name="r6c1" src="x/si20.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <a href="javascript:s(6,2)">
      <img border="0" height="47" hspace="0" name="r6c2" src="x/si20.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <a href="javascript:s(6,3)">
      <img border="0" height="47" hspace="0" name="r6c3" src="x/si20.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <a href="javascript:s(6,4)">
      <img border="0" height="47" hspace="0" name="r6c4" src="x/si20.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <a href="javascript:s(6,5)">
      <img border="0" height="47" hspace="0" name="r6c5" src="x/si20.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <a href="javascript:s(6,6)">
      <img border="0" height="47" hspace="0" name="r6c6" src="x/si20.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <a href="javascript:s(6,7)">
      <img border="0" height="47" hspace="0" name="r6c7" src="x/si20.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <a href="javascript:s(6,8)">
      <img border="0" height="47" hspace="0" name="r6c8" src="x/si20.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <img align="LEFT" border="0" height="47" hspace="0" name="r6c9" src="x/si20.gif" vspace="0" width="1"/>
    </td>
    <td>
     <form>
      <input checked="" name="sound" type="CHECKBOX"/>
      <font color="BLUE" face="arial" size="2">
       Sound
      </font>
     </form>
    </td>
   </tr>
   <tr>
    <td>
     <img border="0" height="47" hspace="0" name="r7c0" src="x/si20.gif" vspace="0" width="1"/>
    </td>
    <td>
     <a href="javascript:s(7,1)">
      <img border="0" height="47" hspace="0" name="r7c1" src="x/si20.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <a href="javascript:s(7,2)">
      <img border="0" height="47" hspace="0" name="r7c2" src="x/si20.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <a href="javascript:s(7,3)">
      <img border="0" height="47" hspace="0" name="r7c3" src="x/si20.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <a href="javascript:s(7,4)">
      <img border="0" height="47" hspace="0" name="r7c4" src="x/si20.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <a href="javascript:s(7,5)">
      <img border="0" height="47" hspace="0" name="r7c5" src="x/si20.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <a href="javascript:s(7,6)">
      <img border="0" height="47" hspace="0" name="r7c6" src="x/si20.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <a href="javascript:s(7,7)">
      <img border="0" height="47" hspace="0" name="r7c7" src="x/si20.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <a href="javascript:s(7,8)">
      <img border="0" height="47" hspace="0" name="r7c8" src="x/si20.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <img align="LEFT" border="0" height="47" hspace="0" name="r7c9" src="x/si20.gif" vspace="0" width="1"/>
    </td>
   </tr>
   <tr>
    <td>
     <img border="0" height="47" hspace="0" name="r8c0" src="x/si20.gif" vspace="0" width="1"/>
    </td>
    <td>
     <a href="javascript:s(8,1)">
      <img border="0" height="47" hspace="0" name="r8c1" src="x/si20.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <a href="javascript:s(8,2)">
      <img border="0" height="47" hspace="0" name="r8c2" src="x/si20.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <a href="javascript:s(8,3)">
      <img border="0" height="47" hspace="0" name="r8c3" src="x/si20.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <a href="javascript:s(8,4)">
      <img border="0" height="47" hspace="0" name="r8c4" src="x/si20.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <a href="javascript:s(8,5)">
      <img border="0" height="47" hspace="0" name="r8c5" src="x/si20.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <a href="javascript:s(8,6)">
      <img border="0" height="47" hspace="0" name="r8c6" src="x/si20.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <a href="javascript:s(8,7)">
      <img border="0" height="47" hspace="0" name="r8c7" src="x/si20.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <a href="javascript:s(8,8)">
      <img border="0" height="47" hspace="0" name="r8c8" src="x/si20.gif" vspace="0" width="48"/>
     </a>
    </td>
    <td>
     <img align="LEFT" border="0" height="47" hspace="0" name="r8c9" src="x/si20.gif" vspace="0" width="1"/>
    </td>
   </tr>
   <tr>
    <td>
     <img border="0" height="1" hspace="0" name="r9c0" src="x/si20.gif" vspace="0" width="1"/>
    </td>
    <td>
     <img border="0" height="1" hspace="0" name="r9c1" src="x/si20.gif" vspace="0" width="48"/>
    </td>
    <td>
     <img border="0" height="1" hspace="0" name="r9c2" src="x/si20.gif" vspace="0" width="48"/>
    </td>
    <td>
     <img border="0" height="1" hspace="0" name="r9c3" src="x/si20.gif" vspace="0" width="48"/>
    </td>
    <td>
     <img border="0" height="1" hspace="0" name="r9c4" src="x/si20.gif" vspace="0" width="48"/>
    </td>
    <td>
     <img border="0" height="1" hspace="0" name="r9c5" src="x/si20.gif" vspace="0" width="48"/>
    </td>
    <td>
     <img border="0" height="1" hspace="0" name="r9c6" src="x/si20.gif" vspace="0" width="48"/>
    </td>
    <td>
     <img border="0" height="1" hspace="0" name="r9c7" src="x/si20.gif" vspace="0" width="48"/>
    </td>
    <td>
     <img border="0" height="1" hspace="0" name="r9c8" src="x/si20.gif" vspace="0" width="48"/>
    </td>
    <td>
     <img align="LEFT" border="0" height="1" hspace="0" name="r9c9" src="x/si20.gif" vspace="0" width="48"/>
    </td>
   </tr>
  </table>
  <br clear="ALL"/>
  <center>
   <table border="0" width="100%">
    <tr>
     <td width="60">
     </td>
     <td valign="top">
      <p>
       <br/>
       As I said on the home page . . . these are called Alice mazes because they recall the scene in
       <i>
        <b>
         Alice in Wonderland
        </b>
       </i>
       where Alice eats a piece of cake with the sign Eat Me and grows larger, then she drinks from a bottle marked Drink Me and becomes smaller. These mazes wont make you larger or smaller, but the distance you travel in a move will get larger or smaller.
      </p>
      <p>
       <span>
        Rules:
       </span>
       You start this maze on the red square, and your current position is always shown in red. You must make a series of moves that will take you to the goal. Begin each move by following one of the arrows in the red square, travel in a straight line for a distance equal to
       <i>
        <b>
         d
        </b>
       </i>
       , and then click on the square where your move ends.
      </p>
      <p>
       When the maze begins,
       <i>
        <b>
         d
        </b>
       </i>
       equals1. When you land on a square with a red arrow, 1is added to
       <i>
        <b>
         d
        </b>
       </i>
       . When you land on a square with a yellow arrow, 1is subtracted from
       <i>
        <b>
         d
        </b>
       </i>
       . Two of these mazes have blank squares, which you may not land on.
      </p>
      <p>
       <span>
        Notes:
       </span>
       There are twenty different layouts here. The rules are based on a maze called Alice in Mazeland in my 1990 book
       <a href="mad.html">
        <i>
         <b>
          Mad Mazes
         </b>
        </i>
       </a>
       . When I wrote that book it never occurred to me that it would be a good idea to have several mazes with the same rules. The layout for the original Alice in Mazeland became Maze16 in this program, and, actually, its the least interesting of the twenty mazes.
      </p>
      <p>
       I programmed eight of these mazes in 2001 and kept adding more, until the total is now twenty. In my opinion, the best of these mazes is 15. Unfortunately, it is very difficult, even though its size is only 7x7. Maze18 does interesting things with loops and is probably the most complex of these mazes, even though its shortest solution is only 57 moves. Back in 2001, that maze was a Puzzle of theWeek on mathpuzzle.com. That site still has a
       <a href="http://www.mathpuzzle.com/alicesolvers.htm">
        list of solvers
       </a>
       along with some interesting comments, as well as a diagram of the solution that was drawn by Andrea Gilbert. By the way, the comments refer to Maze7, which was the mazes number at the time.
      </p>
      <p>
      </p>
     </td>
     <td width="40">
     </td>
    </tr>
   </table>
   <table border="0" width="100%">
    <tr>
     <td width="60">
     </td>
     <td>
      <p>
       When you solve one of these mazes, the program outputs a code that looks something like: Code=842. The number doesnt mean anything, but you might use it to prove to a friend that you solved a particular maze. Or you might set up a contest where people should solve one or more of these mazes, then
       <nobr>
        e-mail
       </nobr>
       you the numbers that follow Code=.
      </p>
      <p>
       The maze design and the JavaScript program is copyright 2001 by Robert Abbott. If you are interested in programming this game for a different device (PDA, cell phone, video game controller), please see my
       <a href="terms.html">
        terms of use
       </a>
       .
      </p>
      <p>
       My thanks to
       <a href="http://www.joker-games.com/">
        Joker
       </a>
       for supplying me with a Java applet that plays the sound files (I was having trouble getting JavaScript to play sound on all browsers).
      </p>
      <hr/>
      <p>
       <br/>
       <a href="index.html">
        Back to the home page
       </a>
      </p>
     </td>
     <td width="20">
     </td>
     <td valign="bottom">
      <center>
       <img height="425" src="tenniel.gif" width="305"/>
       <br clear="all"/>
       <p class="heading">
        Drink Me, one of
        <a href="http://www.victorianweb.org/art/illustration/tenniel/alice/1.4.html">
         John Tenniels
        </a>
        illustrations for
        <i>
         Alice in Wonderland
        </i>
       </p>
      </center>
     </td>
    </tr>
   </table>
   <applet code="AbbottSP.class" height="1" width="1">
    <h1>
     <font color="RED" face="arial">
      This program won't work because you need to have Java as well as JavaScript enabled.
      <br/>
      <br/>
      <br/>
      <br/>
      <br/>
      <br/>
     </font>
    </h1>
   </applet>
  </center>
 </body>
</html>