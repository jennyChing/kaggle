<!DOCTYPE html>
<html lang="en-US">
 <head>
  <meta charset="utf-8"/>
  <title>
   Lea Verou | Life at the bleeding edge (of web standards)
  </title>
  <meta content="width=device-width" name="viewport"/>
  <link href="http://gmpg.org/xfn/11" rel="profile"/>
  <link href="http://lea.verou.me/wp-content/themes/elegant/style.css" media="all" rel="stylesheet" type="text/css"/>
  <link href="http://lea.verou.me/xmlrpc.php" rel="pingback"/>
  <!--[if lt IE 9]&gt;
&lt;script src="http://lea.verou.me/wp-content/themes/elegant/html5.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;![endif]-->
  <link href="http://lea.verou.me/feed/" rel="alternate" title="Lea Verou  Feed" type="application/rss+xml"/>
  <link href="http://lea.verou.me/comments/feed/" rel="alternate" title="Lea Verou  Comments Feed" type="application/rss+xml"/>
  <script type="text/javascript">
   window._wpemojiSettings = {"baseUrl":"http:\/\/s.w.org\/images\/core\/emoji\/72x72\/","ext":".png","source":{"concatemoji":"http:\/\/lea.verou.me\/wp-includes\/js\/wp-emoji-release.min.js?ver=4.2.2"}};
			!function(a,b,c){function d(a){var c=b.createElement("canvas"),d=c.getContext&amp;&amp;c.getContext("2d");return d&amp;&amp;d.fillText?(d.textBaseline="top",d.font="600 32px Arial","flag"===a?(d.fillText(String.fromCharCode(55356,56812,55356,56807),0,0),c.toDataURL().length&gt;3e3):(d.fillText(String.fromCharCode(55357,56835),0,0),0!==d.getImageData(16,16,1,1).data[0])):!1}function e(a){var c=b.createElement("script");c.src=a,c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var f,g;c.supports={simple:d("simple"),flag:d("flag")},c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.simple&amp;&amp;c.supports.flag||(g=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",g,!1),a.addEventListener("load",g,!1)):(a.attachEvent("onload",g),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&amp;&amp;c.readyCallback()})),f=c.source||{},f.concatemoji?e(f.concatemoji):f.wpemoji&amp;&amp;f.twemoji&amp;&amp;(e(f.twemoji),e(f.wpemoji)))}(window,document,window._wpemojiSettings);
  </script>
  <style type="text/css">
   img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
  </style>
  <link href="http://lea.verou.me/wp-content/plugins/prism-syntax-highlighter/prism/default.css?ver=1.0" id="prismjs-css" media="all" rel="stylesheet" type="text/css"/>
  <link href="http://lea.verou.me/wp-content/plugins/twitter-blackbird-pie/css/blackbirdpie.css?ver=20110416" id="blackbirdpie-css-css" media="all" rel="stylesheet" type="text/css"/>
  <script src="http://lea.verou.me/wp-content/plugins/twitter-blackbird-pie/js/blackbirdpie.js?ver=20110404" type="text/javascript">
  </script>
  <link href="http://lea.verou.me/xmlrpc.php?rsd" rel="EditURI" title="RSD" type="application/rsd+xml"/>
  <link href="http://lea.verou.me/wp-includes/wlwmanifest.xml" rel="wlwmanifest" type="application/wlwmanifest+xml"/>
  <meta content="WordPress 4.2.2" name="generator"/>
  <link href="http://wp.me/roQm" rel="shortlink"/>
 </head>
 <body class="home blog language-css">
  <script async="" defer="" src="http://leaverou.github.com/prefixfree/prefixfree.min.js">
  </script>
  <div class="hfeed" id="page">
   <header id="branding">
    <!--&lt;p id="notice"&gt;This sites domain has changed from leaverou.me to lea.verou.me. Please update your bookmarks and links. Thanks!&lt;/p&gt;-->
    <hgroup role="banner">
     <h1 id="site-title">
      <span>
       <a href="http://lea.verou.me/" rel="home" title="Lea Verou">
        Lea Verou
       </a>
      </span>
     </h1>
     <h2 id="site-description">
      Life at the bleeding edge (of web standards)
     </h2>
    </hgroup>
    <nav id="access" role="navigation">
     <h1 class="section-heading">
      Main menu
     </h1>
     <div class="skip-link screen-reader-text">
      <a href="#content" title="Skip to content">
       Skip to content
      </a>
     </div>
     <a href="http://lea.verou.me/feed/" id="feedlink" title="Grab the feed!">
      Feed
     </a>
     <div class="menu">
      <ul>
       <li class="current_page_item">
        <a href="http://lea.verou.me/">
         Home
        </a>
       </li>
       <li class="page_item page-item-1900">
        <a href="http://lea.verou.me/projects/">
         Projects
        </a>
       </li>
       <li class="page_item page-item-937 page_item_has_children">
        <a href="http://lea.verou.me/speaking/">
         Speaking
        </a>
       </li>
       <li class="page_item page-item-1515">
        <a href="http://lea.verou.me/writing/">
         Writing
        </a>
       </li>
       <li class="page_item page-item-2172">
        <a href="http://lea.verou.me/interviews/">
         Interviews
        </a>
       </li>
       <li class="page_item page-item-1114">
        <a href="http://lea.verou.me/press/">
         Press
        </a>
       </li>
       <li class="page_item page-item-2">
        <a href="http://lea.verou.me/about/">
         About me
        </a>
       </li>
      </ul>
     </div>
    </nav>
    <!-- #access -->
   </header>
   <!-- #branding -->
   <div id="main">
    <div id="primary">
     <div id="content" role="main">
      <nav id="nav-above">
       <h1 class="section-heading">
        Post navigation
       </h1>
       <div class="nav-previous">
        <a href="http://lea.verou.me/page/2/">
         <span class="meta-nav">
          
         </span>
         Older posts
        </a>
       </div>
       <div class="nav-next">
       </div>
      </nav>
      <!-- #nav-above -->
      <article class="post-2534 post type-post status-publish format-standard hentry category-apps category-csswg category-original" id="post-2534">
       <header class="entry-header">
        <h1 class="entry-title">
         <a href="http://lea.verou.me/2015/06/conical-gradients-today/" rel="bookmark" title="Permalink to Conical gradients, today!">
          Conical gradients, today!
         </a>
        </h1>
        <div class="entry-meta">
         <span class="sep">
          Posted on
         </span>
         <a href="http://lea.verou.me/2015/06/conical-gradients-today/" rel="bookmark">
          <time class="entry-date" datetime="2015-06-18T16:57:31+00:00" pubdate="">
           June 18, 2015
          </time>
         </a>
         <span class="sep">
          by
         </span>
         <span class="author vcard">
          <a class="url fn n" href="http://lea.verou.me/author/admin/" title="View all posts by Lea Verou">
           Lea Verou
          </a>
         </span>
        </div>
        <!-- .entry-meta -->
       </header>
       <!-- .entry-header -->
       <a class="twitter-share-button" data-count="vertical" data-text="Conical gradients, today!" data-url="http://lea.verou.me/2015/06/conical-gradients-today/" data-via="LeaVerou" href="https://twitter.com/share">
        Tweet
       </a>
       <script>
        !function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");
       </script>
       <div class="entry-content">
        <p>
         <a href="http://lea.verou.me/wp-content/uploads/2015/06/Screen-Shot-2015-06-18-at-16.26.40-.png">
          <img alt="Screen Shot 2015-06-18 at 16.26.40" class="alignright size-full wp-image-2536" height="312" src="http://lea.verou.me/wp-content/uploads/2015/06/Screen-Shot-2015-06-18-at-16.26.40-.png" width="312"/>
         </a>
         Its no secret that I like conical gradients. In as early as 2011, I wrote
         <a href="http://lea.verou.me/specs/conical-gradient/">
          a draft for conical-gradient() in CSS
         </a>
         , that
         <a href="http://www.xanthir.com/blog/">
          Tab
         </a>
         later said helped him when he
         <a href="http://www.w3.org/TR/css4-images/#conic-gradients">
          added them in CSS Image Values Level 4
         </a>
         in 2012. However, almost
         <strong>
          three years later, no progress has been made
         </strong>
         in implementing them. Sure, the spec is still relatively incomplete, butthats not the reason conical gradients have gotten no traction.
         <strong>
          Far more underspecified features have gotten experimental implementations in the past.
         </strong>
         The reason conical gradients are still unimplemented, is because very few developers know they exist, so browsers seeno demand.
        </p>
        <p>
         Another reason was that
         <a href="http://cairographics.org/">
          Cairo
         </a>
         , the graphics library used in Chromeand Firefoxhad no way of drawing a conical gradient. However, this changed a while ago, when
         <a href="http://libregraphicsworld.org/blog/entry/mesh-gradients-in-cairo-now-official">
          they supported mesh gradients
         </a>
         , of which conical gradients are a mere special case.
        </p>
        <p>
         Recently, I was giving a talk on creating pie charts with CSS on a few conferences, and yet again, I was reminded of how useful conical gradients can be. While every CSS or SVG solution is several lines of code with varying levels of hackiness, conical gradients can give us a pie chart with a straightforward, DRY, one liner. For example, this is how to create a pie chart that shows 40% in gold and 60% in #f06:
        </p>
        <pre>
         <code>
          padding: 5em; /* size */
background: conic-gradient(gold 40%, #f06 0);
border-radius: 50%; /* make it round */
         </code>
        </pre>
        <p>
         <a href="http://lea.verou.me/wp-content/uploads/2015/06/Screen-Shot-2015-06-18-at-16.23.57-.png">
          <img alt="Screen Shot 2015-06-18 at 16.23.57" class="alignright size-full wp-image-2535" height="306" src="http://lea.verou.me/wp-content/uploads/2015/06/Screen-Shot-2015-06-18-at-16.23.57-.png" width="320"/>
         </a>
         <br/>
         So, I decided to take matters in my own hands. I wrote
         <a href="http://leaverou.github.io/conic-gradient/">
          a polyfill
         </a>
         , which I also used in my talk to demonstrate how awesome conical gradients can be and what cool things they can do. Today, during my
         <a href="http://cssconf.com">
          CSSConf
         </a>
         talk, I released it publicly.
        </p>
        <p>
         In addition, I mention to developers how important speaking up is for getting their favorite features implemented.
         <strong>
          Browsers prioritize which features to implement based on what developers ask for.
         </strong>
         Its a pity that so few of usrealize how much of a saywe collectively have in this.This is more obvious with Microsoft and
         <a href="https://wpdev.uservoice.com/forums/257854-microsoft-edge-developer">
          their Uservoice forum
         </a>
         where developerscan vote on which featuresthey want to see worked on, but pretty much every major browser works in a similar way. They monitor what developers request and what other browsers implement, and decide accordingly. The squeaky wheel will get the feature, so if you really want to see something implemented,
         <strong>
          speak up
         </strong>
         .
        </p>
        <p>
         Since speaking up can be a bit vague (
         <em>
          speak up where?
         </em>
         I can hear you asking), I also filed bug reports with all major browsers, that you can also find
         <a href="http://leaverou.github.io/conic-gradient/#ask">
          in the polyfill page
         </a>
         , so that you can comment or vote on them. That doesnt mean that speaking up on blogs or social media is not useful though: Thats why browsers have devrel teams. The more noise we collectivelymake about the features we want, the more likely it is to be heard. However, the odds are higher if we all channel our voicestothe venues browser developers follow and our voice is stronger and louder if we concentrate it inthe same places instead of having many separate voices all over the place.
        </p>
        <p>
         Also, Im using the term noise here a bit figuratively.While its valuable to makeit clear thatwe are interested in a certain feature, its even more useful to say
         <strong>
          why
         </strong>
         . Providing use cases will not only grabbrowsers attention more, but it will also convince other developers as well.
        </p>
        <p>
         So go ahead, play with conic gradients, and if you agree with me that they are fucking awesome and we need them natively on the Web,
         <strong>
          make noise
         </strong>
         .
        </p>
        <p>
         <a class="view-demo" href="http://leaverou.github.io/conic-gradient/">
          conic-gradient() polyfill
         </a>
        </p>
       </div>
       <!-- .entry-content -->
       <footer class="entry-meta">
        <span class="cat-links">
         <span class="entry-utility-prep entry-utility-prep-cat-links">
          Posted in
         </span>
         <a href="http://lea.verou.me/category/original/apps/" rel="category tag">
          Apps &amp; scripts
         </a>
         ,
         <a href="http://lea.verou.me/category/csswg/" rel="category tag">
          CSS WG
         </a>
         ,
         <a href="http://lea.verou.me/category/original/" rel="category tag">
          Original
         </a>
        </span>
        <span class="sep">
         |
        </span>
        <span class="comments-link">
         <a href="http://lea.verou.me/2015/06/conical-gradients-today/#comments">
          <span class="dsq-postid" rel="2534 http://lea.verou.me/?p=2534">
           17 Comments
          </span>
         </a>
        </span>
       </footer>
       <!-- #entry-meta -->
      </article>
      <!-- #post-2534 -->
      <article class="post-2517 post type-post status-publish format-standard hentry category-thoughts tag-es5 tag-javascript" id="post-2517">
       <header class="entry-header">
        <h1 class="entry-title">
         <a href="http://lea.verou.me/2015/04/idea-extending-native-dom-prototypes-without-collisions/" rel="bookmark" title="Permalink to Idea: Extending native DOM prototypes without collisions">
          Idea: Extending native DOM prototypes without collisions
         </a>
        </h1>
        <div class="entry-meta">
         <span class="sep">
          Posted on
         </span>
         <a href="http://lea.verou.me/2015/04/idea-extending-native-dom-prototypes-without-collisions/" rel="bookmark">
          <time class="entry-date" datetime="2015-04-19T21:45:36+00:00" pubdate="">
           April 19, 2015
          </time>
         </a>
         <span class="sep">
          by
         </span>
         <span class="author vcard">
          <a class="url fn n" href="http://lea.verou.me/author/admin/" title="View all posts by Lea Verou">
           Lea Verou
          </a>
         </span>
        </div>
        <!-- .entry-meta -->
       </header>
       <!-- .entry-header -->
       <a class="twitter-share-button" data-count="vertical" data-text="Idea: Extending native DOM prototypes without collisions" data-url="http://lea.verou.me/2015/04/idea-extending-native-dom-prototypes-without-collisions/" data-via="LeaVerou" href="https://twitter.com/share">
        Tweet
       </a>
       <script>
        !function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");
       </script>
       <div class="entry-content">
        <p>
         As I pointed out in
         <a href="http://lea.verou.me/2015/04/jquery-considered-harmful/">
          yesterdays blog post
         </a>
         , one of the reasons why I dont like using jQuery is its wrapper objects. For jQuery, this was a wise decision: Back in 2006 when it was first developed, IE releases hada pretty icky
         <strong>
          memory leak bug
         </strong>
         that could be easily triggered when one added properties to elements. Oh, and we also didnt have access to element prototypes on IE back then, so we had to add these properties manually on every element.
         <a href="http://prototypejs.org/" target="_blank">
          Prototype.js
         </a>
         attempted to go that route and the resultwas such a mess thatthey decided to change their decision in Prototype 2.0 and go with wrapper objects too. There were even
         <a href="http://perfectionkills.com/whats-wrong-with-extending-the-dom/" target="_blank">
          long essays being written back then about how much of a monumentally bad idea it was toextend DOMelements
         </a>
         .
        </p>
        <p>
         The first IE release that exposed element prototypes was IE8: We got access to Node.prototype, Element.prototype and a few more. Some were mutable, some were not. On IE9, we got the full bunch, including HTMLElement.prototype and its descendants, such as HTMLParagraphElement.The memory leak bugs weremitigated in IE8 and fixed in IE9. However, we stilldontextend native DOM elements, and for good reason: collisions are still a very real risk.No library wants to add a bunch of methods on elements, its just bad form. Its like being invited in someones house anddefecating all over the floor.
        </p>
        <p>
         <strong>
          But what if we could add methods to elements without the chance of collisions?
         </strong>
         (well, technically, by minimizing said chance). We could only add
         <strong>
          one property
         </strong>
         to Element.prototype, and then hang all our methods on that. E.g. if our library was calledyolo and had two methods, foo() and bar(), calls to it would look like:
        </p>
        <pre>
         <code class="language-javascript">
          var element = document.querySelector(".someclass");
element.yolo.foo();
element.yolo.bar();
// or you can even chain, if you return the element in each of them!
element.yolo.foo().yolo.bar();
         </code>
        </pre>
        <p>
         Sure, its more awkward than wrapper objects, but the benefit of using native DOM elements is worth it if you ask me. Of course, YMMV.
        </p>
        <p>
         <strong>
          Its basically exactly the same thing we do with globals
         </strong>
         : We all know that adding tons of global variables is bad practice, so every library adds one global and hangs everything off of that.
        </p>
        <p>
         However, if we try to implement something like this in the nave way, we will find that its kind of hard toreference the element used from our namespaced functions:
        </p>
        <pre>
         <code class="language-javascript">
          Element.prototype.yolo = {
	foo: function () {
		console.log(this); 
	},
	
	bar: function () { /* ... */ }
};

someElement.yolo.foo(); // Object {foo: function, bar: function}
         </code>
        </pre>
        <p>
         What happened here?
         <code>
          this
         </code>
         inside any of these functions refers to the object that they are called on, not the element that object is hanging on! We need to be a bit more clever to get around this issue.
        </p>
        <p>
         Keep in mind that
         <code>
          this
         </code>
         in the object inside
         <code>
          yolo
         </code>
         <em>
          would
         </em>
         have access to the element were trying to hang these methods off of. But were not running any code there, so were not taking advantage of that. If only we could get a reference to that objects context! However, running a function (e.g.
         <code>
          element.yolo().foo()
         </code>
         ) would spoil our nice API.
        </p>
        <p>
         Wait a second. We can run code on properties, via ES5 accessors! We could do something like this:
        </p>
        <pre>
         <code class="language-javascript">
          Object.defineProperty(Element.prototype, "yolo", {
	get: function () {
		return {
			element: this,
			foo: function() {
				console.log(this.element);
			},
			
			bar: function() { /* ... */ }
		}
	},
	configurable: true,
	writeable: false
});

someElement.yolo.foo(); // It works! (Logs our actual element)
         </code>
        </pre>
        <p>
         This works, but there is a rather annoying issue here: We are
         <strong>
          generating this object and redefining our functions every single time this property is called.
         </strong>
         This is a rather bad idea for performance. Ideally, we want to
         <strong>
          generate this object once
         </strong>
         , and then return the generated object. We also dont want every element to have its own completely separate instance of the functions we defined, we want to define these functions on a prototype, and use the wonderful JS inheritance for them, so that our library is also dynamically
         <strong>
          extensible
         </strong>
         . Luckily, there is a way to do all this too:
        </p>
        <pre>
         <code class="language-javascript">
          var Yolo = function(element) {
	this.element = element;
};

Yolo.prototype = {
	foo: function() {
		console.log(this.element);
	},
	
	bar: function() { /* ... */ }
};

Object.defineProperty(Element.prototype, "yolo", {
	get: function () {
		Object.defineProperty(this, "yolo", {
			value: new Yolo(this)
		});
		
		return this.yolo;
	},
	configurable: true,
	writeable: false
});

someElement.yolo.foo(); // It works! (Logs our actual element)

// And its dynamically extensible too!
Yolo.prototype.baz = function(color) {
	this.element.style.background = color;
};

someElement.yolo.baz("red") // Our element gets a red background
         </code>
        </pre>
        <p>
         Note that in the above,
         <strong>
          the getter is only executed once
         </strong>
         . After that, it overwrites the
         <code>
          yolo
         </code>
         property with a static value: An instance of the
         <code>
          Yolo
         </code>
         object. Since were using
         <code>
          Object.defineProperty()
         </code>
         we also dont run into the issue of breaking enumeration (
         <code>
          for..in
         </code>
         loops), since these properties have
         <code>
          enumerable: false
         </code>
         by default.
        </p>
        <p>
         There is still the wart that these methods need to use
         <code>
          this.element
         </code>
         instead of
         <code>
          this
         </code>
         . We could fix this by wrapping them:
        </p>
        <pre>
         <code class="language-javascript">
          for (let method in Yolo.prototype) {
	Yolo.prototype[method] = function(){
		var callback = Yolo.prototype[method];
		
		Yolo.prototype[method] = function () {
			var ret = callback.apply(this.element, arguments);
			
			// Return the element, for chainability!
			return ret === undefined? this.element : ret;
		}
	}
}
         </code>
        </pre>
        <p>
         However, now you cant dynamically add methods to
         <code>
          Yolo.prototype
         </code>
         and have them automatically work like the native Yolo methods in
         <code>
          element.yolo
         </code>
         , so it kinda hurts extensibility (of course you could still add methods that use
         <code>
          this.element
         </code>
         and they would work).
        </p>
        <p>
         Thoughts?
        </p>
       </div>
       <!-- .entry-content -->
       <footer class="entry-meta">
        <span class="cat-links">
         <span class="entry-utility-prep entry-utility-prep-cat-links">
          Posted in
         </span>
         <a href="http://lea.verou.me/category/thoughts/" rel="category tag">
          Thoughts
         </a>
        </span>
        <span class="sep">
         |
        </span>
        <span class="tag-links">
         Tagged
        </span>
        <a href="http://lea.verou.me/tag/es5/" rel="tag">
         ES5
        </a>
        ,
        <a href="http://lea.verou.me/tag/javascript/" rel="tag">
         JavaScript
        </a>
        <span class="sep">
         |
        </span>
        <span class="comments-link">
         <a href="http://lea.verou.me/2015/04/idea-extending-native-dom-prototypes-without-collisions/#comments">
          <span class="dsq-postid" rel="2517 http://lea.verou.me/?p=2517">
           38 Comments
          </span>
         </a>
        </span>
       </footer>
       <!-- #entry-meta -->
      </article>
      <!-- #post-2517 -->
      <article class="post-2511 post type-post status-publish format-standard hentry category-rants" id="post-2511">
       <header class="entry-header">
        <h1 class="entry-title">
         <a href="http://lea.verou.me/2015/04/jquery-considered-harmful/" rel="bookmark" title="Permalink to jQuery considered harmful">
          jQuery considered harmful
         </a>
        </h1>
        <div class="entry-meta">
         <span class="sep">
          Posted on
         </span>
         <a href="http://lea.verou.me/2015/04/jquery-considered-harmful/" rel="bookmark">
          <time class="entry-date" datetime="2015-04-19T02:51:00+00:00" pubdate="">
           April 19, 2015
          </time>
         </a>
         <span class="sep">
          by
         </span>
         <span class="author vcard">
          <a class="url fn n" href="http://lea.verou.me/author/admin/" title="View all posts by Lea Verou">
           Lea Verou
          </a>
         </span>
        </div>
        <!-- .entry-meta -->
       </header>
       <!-- .entry-header -->
       <a class="twitter-share-button" data-count="vertical" data-text="jQuery considered harmful" data-url="http://lea.verou.me/2015/04/jquery-considered-harmful/" data-via="LeaVerou" href="https://twitter.com/share">
        Tweet
       </a>
       <script>
        !function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");
       </script>
       <div class="entry-content">
        <p>
         Heh, I always wanted to do one of those X considered harmful posts*. 
        </p>
        <p>
         Before I start,let me say thatI think
         <strong>
          jQuery has helpedtremendously to move the Web forward
         </strong>
         . It gave developers power to do things that were previously unthinkable, and pushed the browser manufacturers to implement these things natively (without jQuery we probably wouldnt have
         <code>
          document.querySelectorAll
         </code>
         now). And jQuery is still needed for those that cannot depend on the goodies we have todayand have to support relics of the past like IE8 or worse.
        </p>
        <p>
         However,as much as I feel for these poor souls, they are the minority. There are tons of developersthat dont need to support old browsers with a tiny market share. And lets not forget those who arent even Web professionals: Students and researchers not only dont need to support old browsers, but can often get by just supporting a single browser!You would expect that everyone in academia would be having tons of fun using all the modern goodies of the Open Web Platform, right? And yet, I haventseen jQuery being so prominent anywhere else as much as it is in academia.Why? Because this is what they know, and they really dont have the time or interest to follow the news on the Open Web Platform. They dont know what they need jQuery for, so they just use jQuery anyway. However, being able to do these things natively now is not the only reason Id rather avoid jQuery.
        </p>
        <h3>
         Yes, you probably dont really need it
        </h3>
        <p>
         Im certainly not the first one to point out how much of jQuery usage is about things you can do natively, so I wont spend time repeating what others have written. Just visit the following and dive in:
        </p>
        <ul>
         <li>
          <a href="http://youmightnotneedjquery.com/" target="_blank">
           You might not need jQuery
          </a>
         </li>
         <li>
          <a href="http://blog.garstasio.com/you-dont-need-jquery/" target="_blank">
           You dont need jQuery!
          </a>
         </li>
         <li>
          <a href="http://www.sitepoint.com/do-you-really-need-jquery/" target="_blank">
           Do you really need jQuery?
          </a>
         </li>
         <li>
          <a href="http://tutorialzine.com/2014/06/10-tips-for-writing-javascript-without-jquery/" target="_blank">
           10 tips for writing JavaScript without jQuery
          </a>
         </li>
         <li>
          and lots more. Just try
          <a href="https://www.google.com/search?q=you+don%27t+need+jquery" target="_blank">
           googling you dont need jQuery
          </a>
          and you will find plenty.
         </li>
        </ul>
        <p>
         I will also not spend time talking about
         <strong>
          file size
         </strong>
         or how much
         <strong>
          faster
         </strong>
         native methods are. These have been talked about before. Today, I want to make a point that is not frequently talked about
        </p>
        <h3>
         but thats not even the biggest reason not to use it today
        </h3>
        <p>
         To avoid extending the native element prototypes, jQuery uses
         <strong>
          its own wrapper objects
         </strong>
         . Extending native objects in the past was a huge no-no, not only due to potential collisions, but also due to memory leaks in old IE. So, what is returned when you run
         <code>
          $("div")
         </code>
         is not a reference to an element, or a NodeList, its a jQuery object. This means that a jQuery object has completely different methods available to it than a reference to a DOM element, an array with elements or any type of NodeList. However, these native objects come up all the time in real code  as much as jQuery tries to abstract them away, you always have to deal with them, even if its just wrapping them in $(). For example, the context when a callback is called via jQuerys .bind() method is a reference to an HTML element, not a jQuery collection. Not to mention that often you use code from multiple sources  some of them assume jQuery, some dont.Therefore, you alwaysend up with
         <strong>
          code that mixesjQuery objects, native elements and NodeLists
         </strong>
         . And this is where the hell begins.
        </p>
        <p>
         If the developer has followed a naming convention for which variables contain jQuery objects (prepending the variable nameswith a dollar sign is the common one I believe) and which contain native elements, this is less of a problem (humans oftenend up forgetting to follow such conventions, but lets assume a perfect world here). However, in most cases no such convention is followed, which results in the code being incredibly hard to understand by anyone unfamiliar with it. Every edit entails a lot of trial and error now (Oh, its not a jQuery object, I have to wrap it with
         <code>
          $()
         </code>
         ! or Oh, its not an element, I have to use [0] to get an element!). To avoid such confusion, developers making edits often end up wrapping anything in
         <code>
          $()
         </code>
         defensively, so throughout the code, the same variable will have gone through
         <code>
          $()
         </code>
         multiple times. For the same reason, it also becomesespecially hard to refactor jQuery out of said code.You are essentially
         <strong>
          locked in
         </strong>
         .
        </p>
        <p>
         Even if naming conventions have been followed, you cant just deal only with jQuery objects. You often need to use a native DOM method or call a function from a script that doesnt depend on jQuery. Soon,conversions to and from jQuery objects are all over the place, cluttering your code.
        </p>
        <p>
         In addition, when you add code to said codebase, youusuallyend up wrapping every element or nodelist reference with
         <code>
          $()
         </code>
         as well, because you dont know what input youre getting. So, not only youre locked in, but
         <strong>
          allfuture code you write for the same codebase is also locked in
         </strong>
         .
        </p>
        <p>
         Get any random script with a jQuery dependency that you didnt write yourself and try to refactor it so that it doesnt need jQuery. I dare you. You will see that your main issue will not be how to convert the functionality to use native APIs, butunderstanding what the hell is going on.
        </p>
        <h3>
         A pragmatic path to JS nudity
        </h3>
        <p>
         Sure, many libraries today require jQuery, and like I recently
         <a href="https://twitter.com/leaverou/status/588504217410609152" target="_blank">
          tweeted
         </a>
         , avoiding it entirely can feel like youre some sort of digital vegan.However, this doesnt mean you have to use it yourself. Libraries can always be replaced in the future, when good non-jQuery alternatives become available.
        </p>
        <p>
         Also, most libraries are written in such a way that they do not require the $ variable to be aliased to jQuery. Just call
         <a href="https://api.jquery.com/jquery.noconflict/" target="_blank">
          jQuery.noConflict()
         </a>
         to reclaim the $ variable and be able to assign it to whatever you see fit. For example, I often define these helper functions, inspired from the
         <a href="https://developer.chrome.com/devtools/docs/commandline-api#selector" target="_blank">
          Command Line API
         </a>
         :
        </p>
        <pre>
         <code class="language-javascript">
          // Returns first element that matches CSS selector {expr}.
// Querying can optionally be restricted to {container}s descendants
function $(expr, container) {
	return typeof expr === "string"? (container || document).querySelector(expr) : expr || null;
}

// Returns all elements that match CSS selector {expr} as an array.
// Querying can optionally be restricted to {container}s descendants
function $$(expr, container) {
	return [].slice.call((container || document).querySelectorAll(expr));
}
         </code>
        </pre>
        <p>
         In addition, I think that having to type
         <code>
          jQuery
         </code>
         instead of
         <code>
          $
         </code>
         every time you use it somehow makes you think twice about superfluously using it without really needing to, but I could be wrong
         <img alt=":)" class="wp-smiley" src="http://lea.verou.me/wp-includes/images/smilies/simple-smile.png" style="height: 1em; max-height: 1em;"/>
        </p>
        <p>
         Also, if you actually
         <strong>
          like
         </strong>
         the jQuery API, but want to avoid the bloat, consider using
         <a href="http://zeptojs.com/" target="_blank">
          Zepto
         </a>
         .
        </p>
        <p>
         * I thought it was brutally obvious that the title was tongue-in-cheek, but hey, its the Internet, and nothing is obvious. So there: The title is tongue-in-cheek and Im very well aware of
         <a href="http://meyerweb.com/eric/comment/chech.html" target="_blank">
          Erics classic essay against such titles
         </a>
         .
        </p>
       </div>
       <!-- .entry-content -->
       <footer class="entry-meta">
        <span class="cat-links">
         <span class="entry-utility-prep entry-utility-prep-cat-links">
          Posted in
         </span>
         <a href="http://lea.verou.me/category/rants/" rel="category tag">
          Rants
         </a>
        </span>
        <span class="sep">
         |
        </span>
        <span class="comments-link">
         <a href="http://lea.verou.me/2015/04/jquery-considered-harmful/#comments">
          <span class="dsq-postid" rel="2511 http://lea.verou.me/?p=2511">
           151 Comments
          </span>
         </a>
        </span>
       </footer>
       <!-- #entry-meta -->
      </article>
      <!-- #post-2511 -->
      <article class="post-2474 post type-post status-publish format-standard hentry category-apps tag-autocomplete tag-awesomplete tag-javascript tag-typeahead" id="post-2474">
       <header class="entry-header">
        <h1 class="entry-title">
         <a href="http://lea.verou.me/2015/02/awesomplete-2kb-autocomplete-with-zero-dependencies/" rel="bookmark" title="Permalink to Awesomplete: 2KB autocomplete with zero dependencies">
          Awesomplete: 2KB autocomplete with zero dependencies
         </a>
        </h1>
        <div class="entry-meta">
         <span class="sep">
          Posted on
         </span>
         <a href="http://lea.verou.me/2015/02/awesomplete-2kb-autocomplete-with-zero-dependencies/" rel="bookmark">
          <time class="entry-date" datetime="2015-02-19T05:23:36+00:00" pubdate="">
           February 19, 2015
          </time>
         </a>
         <span class="sep">
          by
         </span>
         <span class="author vcard">
          <a class="url fn n" href="http://lea.verou.me/author/admin/" title="View all posts by Lea Verou">
           Lea Verou
          </a>
         </span>
        </div>
        <!-- .entry-meta -->
       </header>
       <!-- .entry-header -->
       <a class="twitter-share-button" data-count="vertical" data-text="Awesomplete: 2KB autocomplete with zero dependencies" data-url="http://lea.verou.me/2015/02/awesomplete-2kb-autocomplete-with-zero-dependencies/" data-via="LeaVerou" href="https://twitter.com/share">
        Tweet
       </a>
       <script>
        !function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");
       </script>
       <div class="entry-content">
        <p>
         <a href="http://leaverou.github.io/awesomplete">
          <img alt="awesomplete" class="alignright size-medium wp-image-2475" height="248" src="http://lea.verou.me/wp-content/uploads/2015/02/awesomplete-300x248.png" width="300"/>
         </a>
         Sorry for the lack of posts for the past 7 (!)months, Ive been super busy working on
         <a href="http://shop.oreilly.com/product/0636920031123.do" target="_blank">
          my book
         </a>
         , which up to a certain point, I couldnt even imagine finishing, but Im finally there! Ive basically tried to cramall the CSS wisdom Ive accumulated over the years in it  (which is partly why it took so long, I kept remembering more things that just *had* to be in it. Itspage count on the OReilly website had to beupdated 3 times, from 250 to 300 to 350 and it looks like the final is gonna be closer to 400 pages) and its gonna be super awesome(
         <a href="http://shop.oreilly.com/product/0636920031123.do" target="_blank">
          preorder here!
         </a>
         )  . I have been posting a few CSS tricks now and then on
         <a href="http://twitter.com/leaverou" target="_blank">
          my twitter account
         </a>
         , but havent found any time to write a proper blog post.
        </p>
        <p>
         Anyhow, despite being super busy with MIT (which btw is amazing, challenging in a good way, and full offantastic people. So glad to be here!) and the book, I recently needed an autocomplete widget for something. Surprisingly, I dont think I ever had needed to choose one in the past. Ive worked with apps that had it, but in those cases it was already there.
        </p>
        <p>
         At first, I didnt fret.Finally, a chance to use the
         <a href="http://blog.teamtreehouse.com/creating-autocomplete-dropdowns-datalist-element">
          HTML5 &lt;datalist&gt;
         </a>
         , so exciting! However, the more I played withit, the more my excitement was dying a slow death, taking my open web standards dreams and hopes along with it. Not only its incredibly inconsistent across browsers (e.g. Chrome matches only from the start, Firefox anywhere!), its also not hackable or customizable in any way. Not even if I got my hands dirty and used proprietary CSS, I still couldnt do anything as simple as changing how the matching happens, styling the dropdown or highlighting the matching text!
        </p>
        <p>
         So, with a heavy heart, I decided to use a script. However, when I looked into it, everything seemed super bloated for my needs and anything with half decent usability required jQuery, which results in even more bloat.
        </p>
        <p>
         So, I did what every crazy person with aseverecase of
         <a href="http://en.wikipedia.org/wiki/Not_invented_here" target="_blank">
          NIH Syndrome
         </a>
         would:
         <strong>
          I wrote one
         </strong>
         . It was super fun, and I dont regret it, although now Im even more pressed for time to meet my real deadlines. I wrote it primarily for myself, so even if nobody else uses it, ho hum,it was more fun than alternative ways to take a break. However, its my duty to put it on Github, in case someone else wants it and in case the community wants to take it into its loving, caring hands and pull request the hell out ofit.
        </p>
        <p>
         To be honest, I think its both pretty and pretty useful and even though it wont suit complex needs out of the box, its pretty hackable/extensible. I even wrote quite a bit of
         <a href="http://leaverou.github.io/awesomplete/" target="_blank">
          documentation
         </a>
         at some point this week when I was too sleepy to work and not sufficiently sleepy to sleep  because apparently thats what was missing from my life: even more technical writing.
        </p>
        <p>
         I saved the best for last: Its so lightweight you might end up chasing it around if theres a lot of wind when you download it. Its currently
         <strong>
          a little under1.5KB
         </strong>
         minified &amp; gzipped (the website says 2KB because it will probably grow with commits and I dont want to have to remember to update it all the time), with
         <strong>
          zero dependencies
         </strong>
         !
        </p>
        <p>
         And its even been verified to work in
         <strong>
          IE9 (sorta), IE10+, Chrome, Firefox, Safari 5+, Mobile Safari
         </strong>
         !
        </p>
        <p>
         <a class="view-demo" href="http://leaverou.github.io/awesomplete" target="_blank">
          Nuff said. Get it now!
         </a>
        </p>
        <p style="font-size: 75%; margin: 2em 0;">
         PS: If youre about to leave a comment on how its not called 
         <em>
          autocomplete
         </em>
         , but 
         <em>
          typeahead
         </em>
         , please go
         <a href="http://tirania.org/blog/archive/2011/Feb-17.html">
          choke on a bucket of cocks
         </a>
         instead. 
        </p>
       </div>
       <!-- .entry-content -->
       <footer class="entry-meta">
        <span class="cat-links">
         <span class="entry-utility-prep entry-utility-prep-cat-links">
          Posted in
         </span>
         <a href="http://lea.verou.me/category/original/apps/" rel="category tag">
          Apps &amp; scripts
         </a>
        </span>
        <span class="sep">
         |
        </span>
        <span class="tag-links">
         Tagged
        </span>
        <a href="http://lea.verou.me/tag/autocomplete/" rel="tag">
         autocomplete
        </a>
        ,
        <a href="http://lea.verou.me/tag/awesomplete/" rel="tag">
         awesomplete
        </a>
        ,
        <a href="http://lea.verou.me/tag/javascript/" rel="tag">
         JavaScript
        </a>
        ,
        <a href="http://lea.verou.me/tag/typeahead/" rel="tag">
         typeahead
        </a>
        <span class="sep">
         |
        </span>
        <span class="comments-link">
         <a href="http://lea.verou.me/2015/02/awesomplete-2kb-autocomplete-with-zero-dependencies/#comments">
          <span class="dsq-postid" rel="2474 http://lea.verou.me/?p=2474">
           24 Comments
          </span>
         </a>
        </span>
       </footer>
       <!-- #entry-meta -->
      </article>
      <!-- #post-2474 -->
      <article class="post-2436 post type-post status-publish format-standard hentry category-csswg" id="post-2436">
       <header class="entry-header">
        <h1 class="entry-title">
         <a href="http://lea.verou.me/2014/07/an-easy-notation-for-grayscale-colors/" rel="bookmark" title="Permalink to An easy notation for grayscale colors">
          An easy notation for grayscale colors
         </a>
        </h1>
        <div class="entry-meta">
         <span class="sep">
          Posted on
         </span>
         <a href="http://lea.verou.me/2014/07/an-easy-notation-for-grayscale-colors/" rel="bookmark">
          <time class="entry-date" datetime="2014-07-27T20:44:46+00:00" pubdate="">
           July 27, 2014
          </time>
         </a>
         <span class="sep">
          by
         </span>
         <span class="author vcard">
          <a class="url fn n" href="http://lea.verou.me/author/admin/" title="View all posts by Lea Verou">
           Lea Verou
          </a>
         </span>
        </div>
        <!-- .entry-meta -->
       </header>
       <!-- .entry-header -->
       <a class="twitter-share-button" data-count="vertical" data-text="An easy notation for grayscale colors" data-url="http://lea.verou.me/2014/07/an-easy-notation-for-grayscale-colors/" data-via="LeaVerou" href="https://twitter.com/share">
        Tweet
       </a>
       <script>
        !function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");
       </script>
       <div class="entry-content">
        <p>
         These days, there is
         <a href="http://lists.w3.org/Archives/Public/www-style/2014Jul/0432.html" target="_blank">
          a lengthydiscussion in the CSS WG about how to name a function that produces shades of gray
         </a>
         (from white to black) with varying degrees of transparency, and we need your feedback about which name is easier to use.
        </p>
        <p>
         The current proposals are:
        </p>
        <h3>
         1. gray(lightness [, alpha])
        </h3>
        <p>
         In this proposal gray(0%) is black, gray(50%) is gray and gray(100%) is white. It also accepts numbers from 0-255 which correspond to rgb(x,x,x) values,so that gray(255) is white and gray(0) is black. It also accepts an
         <strong>
          optional second argument for alpha transparency
         </strong>
         , so that gray(0, .5) would be equivalent to rgba(0,0,0,.5).
        </p>
        <p>
         This is the naming of the function in the current
         <a href="http://dev.w3.org/csswg/css-color/#grays" target="_blank">
          CSS Color Level 4 draft
         </a>
         .
        </p>
        <h3>
         2. white(lightness [, alpha])
        </h3>
        <p>
         Its arguments work in the same way as gray(), but its consistent with the expectation that function names that accept percentages give the full effect at 100%. gray(100%)sounds like a shade of gray, when its actually white. white(100%) is white, which might be more consistent with author expectations. Of course, this also accepts alpha transparency, like all the proposals listed here.
        </p>
        <h3>
         3. black(lightness [, alpha])
        </h3>
        <p>
         black() wouldwork in the opposite way: black(0%) would be white, black(100%) would be black and black(50%,.5) would be semi-transparent gray. The idea is that people are familiar thinking that way from grayscale printing.
        </p>
        <h3>
         4. rgb() with one argument and rgba() with two arguments
        </h3>
        <p>
         rgb(x) would be a shorthand to rgb(x, x, x) and rgba(x, y) would be a shorthand to rgba(x, x, x, y). So, rgb(0) would be black and rgb(100%) or rgb(255) would be white. The benefit is that authors are already accustomed to using rgb() for colors, and this would just be a shortcut. However, note how you will need to change the function name to get a semi-transparent version of the color. Also, if in the future one needs to change the color to not be a shade of gray, a function name change is not needed.
        </p>
        <p>
         Ive written
         <a href="http://sassmeister.com/gist/20ac0049428ccfcbe8f1" target="_blank">
          some SCSS to emulate these functions
         </a>
         so you can play with them in your stylesheets and figure out which one is more intuitive. Unfortunately rgb(x)/rgba(x,a) cannot be polyfilled in that way, as that would overwrite the native rgb()/rgba() functions. Which might be an argument against them, as being able to polyfill through a preprocessor is quite a benefit for a new color format IMO.
        </p>
        <p>
         You can
         <a href="https://docs.google.com/forms/d/1pp3RY-A4MAs7b-gmqFx6bKn52_G_WLoPFkV0vueiWP4/viewform?usp=send_form" target="_blank">
          vote here
         </a>
         , but thats mainly for easy vote counting. Its strongly encouraged that you also leave a comment justifying your opinion, either here or in the list.
        </p>
        <p>
         <a class="view-demo" href="https://docs.google.com/forms/d/1pp3RY-A4MAs7b-gmqFx6bKn52_G_WLoPFkV0vueiWP4/viewform?usp=send_form" target="_blank">
          Vote now!
         </a>
        </p>
        <p>
         Also
         <strong style="font-size: 200%">
          tl;dr
         </strong>
         If you cant be bothered to read the post and understand the proposals well, please, refrain from voting.
        </p>
       </div>
       <!-- .entry-content -->
       <footer class="entry-meta">
        <span class="cat-links">
         <span class="entry-utility-prep entry-utility-prep-cat-links">
          Posted in
         </span>
         <a href="http://lea.verou.me/category/csswg/" rel="category tag">
          CSS WG
         </a>
        </span>
        <span class="sep">
         |
        </span>
        <span class="comments-link">
         <a href="http://lea.verou.me/2014/07/an-easy-notation-for-grayscale-colors/#comments">
          <span class="dsq-postid" rel="2436 http://lea.verou.me/?p=2436">
           38 Comments
          </span>
         </a>
        </span>
       </footer>
       <!-- #entry-meta -->
      </article>
      <!-- #post-2436 -->
      <article class="post-2423 post type-post status-publish format-standard hentry category-replies category-tips" id="post-2423">
       <header class="entry-header">
        <h1 class="entry-title">
         <a href="http://lea.verou.me/2014/07/image-comparison-slider-with-pure-css/" rel="bookmark" title="Permalink to Image comparison slider with pure CSS">
          Image comparison slider with pure CSS
         </a>
        </h1>
        <div class="entry-meta">
         <span class="sep">
          Posted on
         </span>
         <a href="http://lea.verou.me/2014/07/image-comparison-slider-with-pure-css/" rel="bookmark">
          <time class="entry-date" datetime="2014-07-25T02:28:35+00:00" pubdate="">
           July 25, 2014
          </time>
         </a>
         <span class="sep">
          by
         </span>
         <span class="author vcard">
          <a class="url fn n" href="http://lea.verou.me/author/admin/" title="View all posts by Lea Verou">
           Lea Verou
          </a>
         </span>
        </div>
        <!-- .entry-meta -->
       </header>
       <!-- .entry-header -->
       <a class="twitter-share-button" data-count="vertical" data-text="Image comparison slider with pure CSS" data-url="http://lea.verou.me/2014/07/image-comparison-slider-with-pure-css/" data-via="LeaVerou" href="https://twitter.com/share">
        Tweet
       </a>
       <script>
        !function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");
       </script>
       <div class="entry-content">
        <p>
         As a few of you know, I have been spending a good part of this year writing a book for OReilly called CSS Secrets (
         <a href="http://shop.oreilly.com/product/0636920031123.do" target="_blank">
          preorder here!
         </a>
         ). I wanted to include a secret about the various uses of the
         <code>
          resize
         </code>
         property, as its one of my favoriteunderdogs, sinceit rarely gets any love. However, just mentioning the typical use case of improving the UX of textfieldsdidnt feel like enough of a secret at all. The whole purpose of the book is to get authors to think outside the box about whats possible with CSS, not to recite widely known applications of CSS features. So I started brainstorming: What else could we do with it?
        </p>
        <p>
         Then I remembered
         <a href="http://demosthenes.info/blog/819/A-Before-And-After-Image-Comparison-Slide-Control-in-HTML5" target="_blank">
          Dudleys awesome Before/After image slider from a while ago
         </a>
         . While I loved the result, the markup isnt great and it requires scripting. Also, both images are CSS backgrounds, sofor a screen reader, there are no images there. And then it dawned on me: What if I overlaid a
         <code>
          &lt;div&gt;
         </code>
         on an image and made it horizontally resizable through the
         <code>
          resize
         </code>
         property? I tried it, and as you can see below, it worked!
        </p>
        <p>
         <iframe height="900" src="http://dabblet.com/gist/25fa1985bb9f1633c86e" width="100%">
         </iframe>
        </p>
        <p>
         The good parts:
        </p>
        <ul>
         <li>
          More semantic markup (2 images &amp; 2 divs). If
          <code>
           object-fit
          </code>
          was widely
          <a href="http://caniuse.com/#feat=object-fit" target="_blank">
           supported
          </a>
          , it could even be just one div and two images.
         </li>
         <li>
          No JS
         </li>
         <li>
          Less CSS code
         </li>
        </ul>
        <p>
         Of course,few things come with no drawbacks. In this case:
        </p>
        <ul>
         <li>
          One big drawback is keyboard accessibility. Dudleys demo uses a range input, so its keyboard accessible by design.
         </li>
         <li>
          You can only dragfrom the bottom right corners. In Dudleys demo, you can click at any point in the slider. And yes, I did try to style ::webkit-resizerand increase its size so that at least it has smoother UX in Webkit. However, no matter what I tried, nothing seemed to work.
         </li>
        </ul>
        <p>
         Also, none of the two seems to work on mobile.
        </p>
        <p>
         It might not be perfect, but I thought its a pretty cool demo of whats possible with the
         <code>
          resize
         </code>
         property, as everybody seems to only use it in textareas and the like, but its potential is much bigger.
        </p>
        <p>
         And now if youll excuse me, I have a chapter to write 
        </p>
        <p>
         <strong>
          Edit:
         </strong>
         It looks like
         <a href="http://codepen.io/Kseso/pen/dyeBL/" target="_blank">
          somebody figured out a similar solution
         </a>
         a few months ago, which does manage to make the resizer full height, albeit with less semantic HTML and more flimsy CSS. The main idea is that you use a separate element for the resizing (in this case a textarea) with a height of 15px = the height of the resizer. Then, they apply a scaleY() transform to stretch that 15px to the height of the image. Pretty cool! Unfortunately, it requires hardcoding the image size in the CSS.
        </p>
       </div>
       <!-- .entry-content -->
       <footer class="entry-meta">
        <span class="cat-links">
         <span class="entry-utility-prep entry-utility-prep-cat-links">
          Posted in
         </span>
         <a href="http://lea.verou.me/category/replies/" rel="category tag">
          Replies
         </a>
         ,
         <a href="http://lea.verou.me/category/tips/" rel="category tag">
          Tips
         </a>
        </span>
        <span class="sep">
         |
        </span>
        <span class="comments-link">
         <a href="http://lea.verou.me/2014/07/image-comparison-slider-with-pure-css/#comments">
          <span class="dsq-postid" rel="2423 http://lea.verou.me/?p=2423">
           39 Comments
          </span>
         </a>
        </span>
       </footer>
       <!-- #entry-meta -->
      </article>
      <!-- #post-2423 -->
      <article class="post-2389 post type-post status-publish format-standard hentry category-original category-tips tag-css tag-css-3d-transforms tag-css-animations tag-css3 tag-sass tag-svg" id="post-2389">
       <header class="entry-header">
        <h1 class="entry-title">
         <a href="http://lea.verou.me/2014/04/dynamically-generated-svg-through-sass-a-3d-animated-rgb-cube/" rel="bookmark" title="Permalink to Dynamically generated SVG through SASS + A 3D animated RGB cube!">
          Dynamically generated SVG through SASS + A 3D animated RGB cube!
         </a>
        </h1>
        <div class="entry-meta">
         <span class="sep">
          Posted on
         </span>
         <a href="http://lea.verou.me/2014/04/dynamically-generated-svg-through-sass-a-3d-animated-rgb-cube/" rel="bookmark">
          <time class="entry-date" datetime="2014-04-04T02:43:10+00:00" pubdate="">
           April 4, 2014
          </time>
         </a>
         <span class="sep">
          by
         </span>
         <span class="author vcard">
          <a class="url fn n" href="http://lea.verou.me/author/admin/" title="View all posts by Lea Verou">
           Lea Verou
          </a>
         </span>
        </div>
        <!-- .entry-meta -->
       </header>
       <!-- .entry-header -->
       <a class="twitter-share-button" data-count="vertical" data-text="Dynamically generated SVG through SASS + A 3D animated RGB cube!" data-url="http://lea.verou.me/2014/04/dynamically-generated-svg-through-sass-a-3d-animated-rgb-cube/" data-via="LeaVerou" href="https://twitter.com/share">
        Tweet
       </a>
       <script>
        !function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");
       </script>
       <div class="entry-content">
        <p>
         <a href="http://leaverou.github.io/chroma-zone/rgb-cube.html">
          <img alt="Screenshot of the cube" class="alignleft wp-image-2392" src="http://lea.verou.me/wp-content/uploads/2014/04/cube-screenshot.png" width="300"/>
         </a>
         Today, I was giving the opening keynote at
         <a href="http://codemania.co.nz/" target="_blank">
          Codemania
         </a>
         in Auckland, New Zealand. It was a talk about color from a math/dev perspective. It went quite well, despite my complete lack of sleep. I mean that quite literally: I hadnt slept all night. No, it wasnt the jetlag or the nervousness that kept me up. It was my late minute decision to replace the
         <a href="http://leaverou.github.io/chroma-zone/img/rgb-cube.jpg" target="_blank">
          static, low-res image of an RGB cube
         </a>
         I was using until then with a
         <strong>
          <a href="http://leaverou.github.io/chroma-zone/rgb-cube.html" target="_blank">
           3D cube generated with CSS and animated with CSS animations
          </a>
         </strong>
         . Next thing I knew, it was light outside and I had to start getting ready. However, I dont regret literally losing sleep to make a slide that is only shown for 20 seconds at most. Not only it was super fun to develop, but also yielded a few things that I thought were interesting enough to blog about.
        </p>
        <p>
         <strong>
          The most challenging part wasnt actually the 3D cube.
         </strong>
         This has been done tons of times before, it was probably the most common demo for CSS 3D transforms a couple of years ago. The only part of this that could be of interest is that mine only used 2 elements for the cube. This is a dabblet of the cube, without any RGB gradients on it:
        </p>
        <p>
         <iframe height="800" src="http://dabblet.com/gist/9594360" width="100%">
         </iframe>
        </p>
        <p>
         <strong>
          The challenging part was creating the gradients for the 6 sides.
         </strong>
         These are not plain gradients, as you can see below:
        </p>
        <p>
         <a href="http://lea.verou.me/wp-content/uploads/2014/04/gradients.png">
          <img alt="RGB cube sides" class="aligncenter size-full wp-image-2390" height="465" src="http://lea.verou.me/wp-content/uploads/2014/04/gradients.png" width="697"/>
         </a>
         These are basically two linear gradients from left to right, with the topmost one being masked with a gradient from top to bottom. You can use
         <a href="http://dabblet.com/gist/9201622" target="_blank">
          CSS Masking to achieve this (for Chrome/Safari)
         </a>
         and SVG Masks for Firefox, but this masks the whole element, which would hide the pseudo-elements needed for the sides. What I needed was masks applied to backgrounds only, not the whole element.
        </p>
        <p>
         It seemed obvious that the best idea would be to use SVG background images. For example, here is
         <a href="http://dabblet.com/gist/9964928" target="_blank">
          the SVG background needed for the top left one
         </a>
         :
        </p>
        <pre class="language-markup">
         <code>
          &lt;svg xmlns="http://www.w3.org/2000/svg" width="200px" height="200px"&gt;

&lt;linearGradient id="yellow-white" x1="0" x2="0" y1="0" y2="1"&gt;
	&lt;stop stop-color="yellow" /&gt;
	&lt;stop offset="1" stop-color="white" /&gt;
&lt;/linearGradient&gt;
&lt;linearGradient id="magenta-red" x1="0" x2="0" y1="0" y2="1"&gt;
	&lt;stop stop-color="red" /&gt;
	&lt;stop offset="1" stop-color="magenta" /&gt;
&lt;/linearGradient&gt;
&lt;linearGradient id="gradient" x1="0" x2="1" y1="0" y2="0"&gt;
	&lt;stop stop-color="white" /&gt;
	&lt;stop offset="1" stop-color="black" /&gt;
&lt;/linearGradient&gt;
&lt;mask id="gradient-mask"&gt;
	&lt;rect width="100%" height="100%" fill="url(#gradient)"/&gt;
&lt;/mask&gt;

&lt;rect width="100%" height="100%" fill="url(#yellow-white)"/&gt;
&lt;rect width="100%" height="100%" fill="url(#magenta-red)" mask="url(#gradient-mask)"/&gt;

&lt;/svg&gt;
         </code>
        </pre>
        <p>
         However, I didnt want to have 6 separate SVG files, especially with this kind of repetition (cross-linking to reuse gradients and masks across different files is still fairly buggy in certain browsers). I wanted to be able to edit this straight from my CSS. And then it hit me: I was using SASS already. I could code SASS functions that generate SVG data URIs!
        </p>
        <p>
         Heres the set of SVG generating SASS functions I ended up writing:
        </p>
        <pre>
         <code class="language-scss">
          @function inline-svg($content, $width: $side, $height: $side) {
	@return url('data:image/svg+xml,
          <svg>
           #{$content}
          </svg>
          ');
}

@function svg-rect($fill, $width: '100%', $height: $width, $x: '0', $y: '0') {
	@return unquote('');
}

@function svg-gradient($id, $color1, $color2, $x1: 0, $x2: 0, $y1: 0, $y2: 1) {
	@return unquote('

	');
}

@function svg-mask($id, $content) {
	@return unquote('#{$content}');
}
         </code>
        </pre>
        <p>
         And then I was able to generate each RGB plane with another function that made use of them:
        </p>
        <pre>
         <code class="language-scss">
          @function rgb-plane($c1, $c2, $c3, $c4) {
	@return inline-svg(
		svg-gradient('top', $c1, $c2) +
		svg-gradient('bottom', $c3, $c4) +
		svg-gradient('gradient', white, black, 0, 1, 0, 0) +
		svg-mask('gradient-mask', svg-rect('url(%23gradient)')) +
		svg-rect('url(%23bottom)') +
		svg-rect('url(%23top)" mask="url(%23gradient-mask)')
	);
}

/* ... */

.cube {
	background: rgb-plane(blue, black, aqua, lime);

	&amp;::before {
		background: rgb-plane(blue, fuchsia, aqua, white);
	}

	&amp;::after {
		background: rgb-plane(fuchsia, red, blue, black);
	}
}

.cube .sides {
	background: rgb-plane(yellow, lime, red, black);

	&amp;::before {
		background: rgb-plane(yellow, white, red, fuchsia);
	}

	&amp;::after {
		background: rgb-plane(white, aqua, yellow, lime);
	}
}
         </code>
        </pre>
        <p>
         However, the same functions can be used for all sorts of SVG backgrounds and its very easy to add a new one. E.g. to make polygons:
        </p>
        <pre>
         <code class="language-scss">
          @function svg-polygon($fill, $points) {
	@return unquote('');
}

@function svg-circle($fill, $r: '50%', $cx: '50%', $cy: '50%') {
	@return unquote('');
}
         </code>
        </pre>
        <p>
         You can see
         <a href="http://leaverou.github.io/chroma-zone/rgb-cube.scss" target="_blank">
          the whole SCSS file here
         </a>
         and
         <a href="http://leaverou.github.io/chroma-zone/rgb-cube.css" target="_blank">
          its CSS output here
         </a>
         .
        </p>
        <p>
         <strong>
          Warning:
         </strong>
         Keep in mind that IE9 and some older versions of other browsers have issues with unencoded SVG data URIs. Also, you still need to escape hashes (
         <code>
          %23
         </code>
         instead of
         <code>
          #
         </code>
         ), otherwise Firefox fails.
        </p>
       </div>
       <!-- .entry-content -->
       <footer class="entry-meta">
        <span class="cat-links">
         <span class="entry-utility-prep entry-utility-prep-cat-links">
          Posted in
         </span>
         <a href="http://lea.verou.me/category/original/" rel="category tag">
          Original
         </a>
         ,
         <a href="http://lea.verou.me/category/tips/" rel="category tag">
          Tips
         </a>
        </span>
        <span class="sep">
         |
        </span>
        <span class="tag-links">
         Tagged
        </span>
        <a href="http://lea.verou.me/tag/css/" rel="tag">
         CSS
        </a>
        ,
        <a href="http://lea.verou.me/tag/css-3d-transforms/" rel="tag">
         CSS 3D transforms
        </a>
        ,
        <a href="http://lea.verou.me/tag/css-animations/" rel="tag">
         CSS Animations
        </a>
        ,
        <a href="http://lea.verou.me/tag/css3/" rel="tag">
         CSS3
        </a>
        ,
        <a href="http://lea.verou.me/tag/sass/" rel="tag">
         SASS
        </a>
        ,
        <a href="http://lea.verou.me/tag/svg/" rel="tag">
         SVG
        </a>
        <span class="sep">
         |
        </span>
        <span class="comments-link">
         <a href="http://lea.verou.me/2014/04/dynamically-generated-svg-through-sass-a-3d-animated-rgb-cube/#comments">
          <span class="dsq-postid" rel="2389 http://lea.verou.me/?p=2389">
           26 Comments
          </span>
         </a>
        </span>
       </footer>
       <!-- #entry-meta -->
      </article>
      <!-- #post-2389 -->
      <article class="post-2357 post type-post status-publish format-standard hentry category-personal" id="post-2357">
       <header class="entry-header">
        <h1 class="entry-title">
         <a href="http://lea.verou.me/2014/02/im-going-to-mit/" rel="bookmark" title="Permalink to Im going to MIT!!">
          Im going to MIT!!
         </a>
        </h1>
        <div class="entry-meta">
         <span class="sep">
          Posted on
         </span>
         <a href="http://lea.verou.me/2014/02/im-going-to-mit/" rel="bookmark">
          <time class="entry-date" datetime="2014-02-11T20:27:04+00:00" pubdate="">
           February 11, 2014
          </time>
         </a>
         <span class="sep">
          by
         </span>
         <span class="author vcard">
          <a class="url fn n" href="http://lea.verou.me/author/admin/" title="View all posts by Lea Verou">
           Lea Verou
          </a>
         </span>
        </div>
        <!-- .entry-meta -->
       </header>
       <!-- .entry-header -->
       <a class="twitter-share-button" data-count="vertical" data-text="Im going to MIT!!" data-url="http://lea.verou.me/2014/02/im-going-to-mit/" data-via="LeaVerou" href="https://twitter.com/share">
        Tweet
       </a>
       <script>
        !function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");
       </script>
       <div class="entry-content">
        <p>
         Last year, I did something crazy, that Ive been wanting to do since I was little: I applied to MITs PhD program in Electrical Engineering and Computer Science.
        </p>
        <p>
         <img alt="One of the letters" src="http://lea.verou.me/wp-content/uploads/2014/02/Screen-Shot-2014-02-11-at-18.25.21-.png" style="border:10px solid silver"/>
        </p>
        <p>
         It was not only crazy because I have been working for several years already, but also because I only applied to MIT, as I decided I did not want to go to any other university, both for pragmatic and emotional reasons. As any prospective grad student will tell you, applying to only one top university is recipe for failure. I didnt tell many people, but everyone who knew thought Id get in  except me. You see, I wasnt a typical candidate. Sure, I have done lots of things Im proud of, but I didnt have an amazing GPA or publications in prestigious academic conferences.
        </p>
        <p>
         It felt like a very long shot, so you can imagine my excitement when I received the letters of acceptance, about a week ago. I will remember that moment forever. I was watching Breaking Bad, feeling miserable over a breakup that happened only a few hours earlier. About a minute into the episode (s05e09), I saw an email notification titled Your application to MIT EECS. My first thought was that there was some problem with my application. And then I read the first few lines:
        </p>
        <blockquote>
         <p>
          Dear Michailia Verou:
         </p>
         <p>
          If you have not already heard from them, you will shortly receive a letter from the EECS department at MIT, informing you that you have been admitted to the graduate program in Computer Science at MIT next fall. Congratulations!!
         </p>
        </blockquote>
        <p>
         WHAAAA? Was it a scam? But then, how did they have all my details? Holy mother of the Flying Spaghetti Monster, I got in!!! Soon thereafter, a letter from
         <a href="http://www.csail.mit.edu/">
          CSAIL
         </a>
         followed (where I said I wanted to work, specifically in the
         <a href="http://groups.csail.mit.edu/uid/">
          UID
         </a>
         ), and then even more letters. I started calling everyone who knew I applied to share the news, though it proved quite hard to form sentences instead of uncontrollably screaming in joy. I was (and am!) so excited about the future, that it completely overshadows any other life problems (at least for the time being).
        </p>
        <p>
         Of course, my happiness is mixed with sheer terror. I keep worrying that I will be the dumbest person in the room, or that I dont remember as much from my undergrad studies as the others will. Im even terrified of meeting my future advisor(s) in case getting to know me better makes them wonder why I was accepted. But I try to remind myself about
         <a href="http://en.wikipedia.org/wiki/Impostor_syndrome" target="_blank">
          impostor syndrome
         </a>
         , and from what Ive read in forums &amp; blogs, it seems that Im not alone in having such fears.
        </p>
        <p>
         I held off blogging about it until I felt I was able to write something coherent, but I cant wait to share my excitement any longer.
        </p>
        <p>
         To the future!
        </p>
        <p>
         To real life plot twists!
        </p>
        <p>
         To MIT!
        </p>
        <p>
         Boy, Im thrilled. 
        </p>
       </div>
       <!-- .entry-content -->
       <footer class="entry-meta">
        <span class="cat-links">
         <span class="entry-utility-prep entry-utility-prep-cat-links">
          Posted in
         </span>
         <a href="http://lea.verou.me/category/personal/" rel="category tag">
          Personal
         </a>
        </span>
        <span class="sep">
         |
        </span>
        <span class="comments-link">
         <a href="http://lea.verou.me/2014/02/im-going-to-mit/#comments">
          <span class="dsq-postid" rel="2357 http://lea.verou.me/?p=2357">
           94 Comments
          </span>
         </a>
        </span>
       </footer>
       <!-- #entry-meta -->
      </article>
      <!-- #post-2357 -->
      <article class="post-2342 post type-post status-publish format-standard hentry category-apps category-original tag-colors tag-css3-colors" id="post-2342">
       <header class="entry-header">
        <h1 class="entry-title">
         <a href="http://lea.verou.me/2014/02/whathecolor-a-color-game-for-web-developers/" rel="bookmark" title="Permalink to Introducing Whathecolor: A color game for web developers!">
          Introducing Whathecolor: A color game for web developers!
         </a>
        </h1>
        <div class="entry-meta">
         <span class="sep">
          Posted on
         </span>
         <a href="http://lea.verou.me/2014/02/whathecolor-a-color-game-for-web-developers/" rel="bookmark">
          <time class="entry-date" datetime="2014-02-08T18:16:12+00:00" pubdate="">
           February 8, 2014
          </time>
         </a>
         <span class="sep">
          by
         </span>
         <span class="author vcard">
          <a class="url fn n" href="http://lea.verou.me/author/admin/" title="View all posts by Lea Verou">
           Lea Verou
          </a>
         </span>
        </div>
        <!-- .entry-meta -->
       </header>
       <!-- .entry-header -->
       <a class="twitter-share-button" data-count="vertical" data-text="Introducing Whathecolor: A color game for web developers!" data-url="http://lea.verou.me/2014/02/whathecolor-a-color-game-for-web-developers/" data-via="LeaVerou" href="https://twitter.com/share">
        Tweet
       </a>
       <script>
        !function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");
       </script>
       <div class="entry-content">
        <p>
         Ive been interested in digital color for a long time, and this year I decided to risk giving a technical talk about color some of the conferences Im speaking at. Why is that risky? you might ask. Well, it might end up being really interesting, or it may end up alienating both designers because its too technical and developers because its about a designery topic.
        </p>
        <p>
         In preparation for this talk, I decided to make a simple game to see how well I and other web developers understand color, and especially CSS notations of color. Meet
         <a href="http://leaverou.github.io/whathecolor" target="_blank">
          Whathecolor
         </a>
         !
        </p>
        <p>
         The idea is simple: You are presented with a color and you try to type in a CSS color that matches it. It could be anything, from hsl() or rgb() to even named colors (although that would be stupid). It would be interesting to see what averages people get by trying hsl() vs rgb() and whether the former is as easier for web developers as we think. Feel free to post your results here or on twitter!Perhaps in the future, something like this could be used by the CSS WG to test the usability of color notations were thinking of adding to CSS instead of speculating about it.
        </p>
        <p>
         Disclaimer: This is a quick hack. Please dont complain that it doesnt look great on your phone and stuff like that.
        </p>
        <p>
         Also, yes, if you want to cheat, its super easy, but I have no idea why somebody would cheat on something like this.
        </p>
        <p>
         <a class="view-demo" href="http://leaverou.github.io/whathecolor">
          Play
         </a>
        </p>
        <h3>
         Color proximity
        </h3>
        <p>
         A challenging part in developing this was calculating the proximity of two colors to show the user how close they are getting. My first thought was to use the Euclidean distance of the two colors in the RGB cube and divide it by the maximum distance the color could have from any other RGB color. However, this proved out to be inaccurate in many cases, probably due to the lack of perceptual uniformity in RGB. As an example, try
         <code>
          #f0f
         </code>
         and
         <code>
          #ff80ff
         </code>
         . Although they are quite similar visually, the reported proximity was around 66% (1  128/382).
        </p>
        <p>
         So I researched existing algorithms to get the proximity of two colors. Like most things color-related, it looks like
         <a href="http://en.wikipedia.org/wiki/Color_difference" target="_blank">
          Color Difference
         </a>
         is not quite as simple as I thought, and is considered a topic of interest in Color Science. However, converting to L*a*b* and using the CIE94 and CIEDE2000 formulas seemed a bit of an overkill for this and I wasnt terribly impressed with the CIE76 formulaafter trying the results out
         <a href="http://colormine.org/delta-e-calculator/" target="_blank">
          online
         </a>
         for some sample pairs(e.g. it gives ~60% for the aforementioned pair, which is even lower than what I got with my nave RGB method!).
        </p>
        <p>
         So I experimented a bit and ended up using an average of my original idea and a sum of the HSL differences (divided by the max differences), which seems to work relatively ok. There are still cases where its off, but ho hum.After all, the proximity is mainly useful when you get close enough to the color (&gt;90%), as until then you tend to play it by eye. Any improvements on the algorithm used are welcome. Or if enough people think its not working very well, Ill bite the bullet and end up using DeltaE.
        </p>
        <h3>
         Other notes
        </h3>
        <ul>
         <li>
          You do not need a proximity of 100% to win, since rounding errors might prevent you from matching the exact color if youre using HSL. Also, because matching the exact same color isnt really important, as long as you get close enough that any difference is imperceptible.
         </li>
         <li>
          I wrote a Color class for this, which you can find in
          <a href="http://leaverou.github.io/whathecolor/color.js" target="_blank">
           color.js
          </a>
          . Like most of my open source stuff, its MIT licensed. Maybe it could be useful in some other color-related project, who knows.
         </li>
         <li>
          My original idea was to have levels, where the color would get increasingly more difficult to get. For example, in the first level, youd only have to guess simple colors whose RGB coordinates were either 0, 128 or 255. So, my Color.random() method accepts an entropy parameter, for that level. However, when I tested the game with truly random colors (any integer from 0 to 255), it turned out it wasnt really that hard (it took me about a minute to guess each color), so I ditched the idea of levels early on. The code is still there though.
         </li>
         <li>
          An idea about making it harder in the future would be to introduce semi-transparent (RGBA/HSLA) colors. That would be fun :evil_grin:
         </li>
        </ul>
        <p>
         <a href="http://lea.verou.me/wp-content/uploads/2014/02/Screen-Shot-2014-02-08-at-02.36.12-.png">
          <img alt="Screenshot" height="597" src="http://lea.verou.me/wp-content/uploads/2014/02/Screen-Shot-2014-02-08-at-02.36.12-.png" width="980"/>
         </a>
         PS: The times in this screenshot arent real, I wanted to take one quickly, so I used the dev tools.
        </p>
        <p>
        </p>
       </div>
       <!-- .entry-content -->
       <footer class="entry-meta">
        <span class="cat-links">
         <span class="entry-utility-prep entry-utility-prep-cat-links">
          Posted in
         </span>
         <a href="http://lea.verou.me/category/original/apps/" rel="category tag">
          Apps &amp; scripts
         </a>
         ,
         <a href="http://lea.verou.me/category/original/" rel="category tag">
          Original
         </a>
        </span>
        <span class="sep">
         |
        </span>
        <span class="tag-links">
         Tagged
        </span>
        <a href="http://lea.verou.me/tag/colors/" rel="tag">
         colors
        </a>
        ,
        <a href="http://lea.verou.me/tag/css3-colors/" rel="tag">
         css3 colors
        </a>
        <span class="sep">
         |
        </span>
        <span class="comments-link">
         <a href="http://lea.verou.me/2014/02/whathecolor-a-color-game-for-web-developers/#comments">
          <span class="dsq-postid" rel="2342 http://lea.verou.me/?p=2342">
           24 Comments
          </span>
         </a>
        </span>
       </footer>
       <!-- #entry-meta -->
      </article>
      <!-- #post-2342 -->
      <article class="post-2334 post type-post status-publish format-standard hentry category-personal" id="post-2334">
       <header class="entry-header">
        <h1 class="entry-title">
         <a href="http://lea.verou.me/2014/01/vote-for-me-in-the-net-awards-2014/" rel="bookmark" title="Permalink to Vote for me in the net awards 2014!">
          Vote for me in the net awards 2014!
         </a>
        </h1>
        <div class="entry-meta">
         <span class="sep">
          Posted on
         </span>
         <a href="http://lea.verou.me/2014/01/vote-for-me-in-the-net-awards-2014/" rel="bookmark">
          <time class="entry-date" datetime="2014-01-30T11:35:11+00:00" pubdate="">
           January 30, 2014
          </time>
         </a>
         <span class="sep">
          by
         </span>
         <span class="author vcard">
          <a class="url fn n" href="http://lea.verou.me/author/admin/" title="View all posts by Lea Verou">
           Lea Verou
          </a>
         </span>
        </div>
        <!-- .entry-meta -->
       </header>
       <!-- .entry-header -->
       <a class="twitter-share-button" data-count="vertical" data-text="Vote for me in the net awards 2014!" data-url="http://lea.verou.me/2014/01/vote-for-me-in-the-net-awards-2014/" data-via="LeaVerou" href="https://twitter.com/share">
        Tweet
       </a>
       <script>
        !function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0];if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src="//platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);}}(document,"script","twitter-wjs");
       </script>
       <div class="entry-content">
        <p>
         <a href="https://thenetawards.com/vote/contribution/lea-verou/">
          <img alt="" class="alignright" src="http://future-publishing.msgfocus.com/files/amf_future_publishing/project_270/net-awards-2014-nominee-ribbon.png" width="200"/>
         </a>
         I was excited and surprised to find out Ive been in the 10 finalists for two (2!) categories in the net awards this year:
        </p>
        <ul>
         <li>
          <a href="https://thenetawards.com/vote/contribution/lea-verou/" target="_blank">
           Outstanding contribution
          </a>
         </li>
         <li>
          <a href="https://thenetawards.com/vote/talk/lea-verou-the-humble-border-rad/" target="_blank">
           Conference Talk of the Year
          </a>
          (for The humble border-radius)
         </li>
        </ul>
        <p>
         You can vote for me by clicking the above links and have my eternal gratitude
         <img alt=":-)" class="wp-smiley" src="http://lea.verou.me/wp-includes/images/smilies/simple-smile.png" style="height: 1em; max-height: 1em;"/>
        </p>
        <p>
         Furthermore, the CERN line mode browser project, of which
         <a href="http://line-mode.cern.ch/interviews/" target="_blank">
          I was a part of
         </a>
         , has been
         <a href="https://thenetawards.com/vote/collaboration/line-mode-browser-2013/" target="_blank">
          nominated in Best Collaborative Project
         </a>
         !
        </p>
        <p>
         Ive given The humble border-radius more than once, so you can pick one to watch below (in the net awards page theyve linked to the FOWD London one):
        </p>
        <ul>
         <li>
          <a href="http://vimeo.com/70171266" style="line-height: 1.5em;" target="_blank">
           CSSDay
          </a>
         </li>
         <li>
          <a href="http://cssconf.com/talk-verou.html" target="_blank">
           CSSConf
          </a>
         </li>
         <li>
          <a href="http://www.futureinsights.com/home/lea-verou-keynote-the-humble-border-radius.html" target="_blank">
           FOWD London
          </a>
         </li>
         <li>
          <a href="http://vimeo.com/67567648" target="_blank">
           Front-Trends
          </a>
         </li>
         <li>
          <a href="http://www.youtube.com/watch?v=JSaMl2OKjfQ" target="_blank">
           Abridged version (only 15 minutes!) from this years OReilly Fluent
          </a>
         </li>
        </ul>
        <p>
         I would recommend the CSSDay one, as it changes every time and that one is newer.
        </p>
        <p>
         Thanks again to anyone who nominated me and everyone who votes for me. Youre all wonderful. &lt;3
        </p>
       </div>
       <!-- .entry-content -->
       <footer class="entry-meta">
        <span class="cat-links">
         <span class="entry-utility-prep entry-utility-prep-cat-links">
          Posted in
         </span>
         <a href="http://lea.verou.me/category/personal/" rel="category tag">
          Personal
         </a>
        </span>
        <span class="sep">
         |
        </span>
        <span class="comments-link">
         <a href="http://lea.verou.me/2014/01/vote-for-me-in-the-net-awards-2014/#comments">
          <span class="dsq-postid" rel="2334 http://lea.verou.me/?p=2334">
           37 Comments
          </span>
         </a>
        </span>
       </footer>
       <!-- #entry-meta -->
      </article>
      <!-- #post-2334 -->
      <script type="text/javascript">
       // &lt;![CDATA[
        var disqus_shortname = 'leaverou';
        (function () {
            var nodes = document.getElementsByTagName('span');
            for (var i = 0, url; i &lt; nodes.length; i++) {
                if (nodes[i].className.indexOf('dsq-postid') != -1) {
                    nodes[i].parentNode.setAttribute('data-disqus-identifier', nodes[i].getAttribute('rel'));
                    url = nodes[i].parentNode.href.split('#', 1);
                    if (url.length == 1) { url = url[0]; }
                    else { url = url[1]; }
                    nodes[i].parentNode.href = url + '#disqus_thread';
                }
            }
            var s = document.createElement('script'); s.async = true;
            s.type = 'text/javascript';
            s.src = '//' + disqus_shortname + '.disqus.com/count.js';
            (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
        }());
    //]]&gt;
      </script>
      <nav id="nav-below">
       <h1 class="section-heading">
        Post navigation
       </h1>
       <div class="nav-previous">
        <a href="http://lea.verou.me/page/2/">
         <span class="meta-nav">
          
         </span>
         Older posts
        </a>
       </div>
       <div class="nav-next">
       </div>
      </nav>
      <!-- #nav-below -->
     </div>
     <!-- #content -->
    </div>
    <!-- #primary -->
    <div class="widget-area" id="secondary" role="complementary">
     <aside class="widget widget_search" id="search-2">
      <form action="http://lea.verou.me/" class="searchform" id="searchform" method="get" role="search">
       <div>
        <label class="screen-reader-text" for="s">
         Search for:
        </label>
        <input id="s" name="s" type="text" value=""/>
        <input id="searchsubmit" type="submit" value="Search"/>
       </div>
      </form>
     </aside>
     <aside class="widget widget_text" id="text-6">
      <h1 class="widget-title">
       Buy my book!
      </h1>
      <div class="textwidget">
       <a href="http://www.amazon.com/CSS-Secrets-Lea-Verou/dp/1449372635" target="_blank">
        <img alt="CSS Secrets book cover" src="http://lea.verou.me/cover.png"/>
       </a>
      </div>
     </aside>
     <aside class="widget widget_text" id="text-4">
      <h1 class="widget-title">
       Social me
      </h1>
      <div class="textwidget">
       <ul id="social-me">
        <li>
         <a href="http://twitter.com/leaverou">
          Follow me on twitter
         </a>
        </li>
        <li>
         <a href="http://www.facebook.com/leaverou">
          Follow me on facebook
         </a>
        </li>
        <li>
         <a href="http://lanyrd.com/people/LeaVerou/">
          My speaking on Lanyrd
         </a>
        </li>
        <!--&lt;li&gt;&lt;a href="http://slideshare.net/LeaVerou"&gt;View my slides on slideshare&lt;/a&gt;&lt;/li&gt;-->
        <li>
         <a href="https://github.com/LeaVerou">
          Fork me on Github
         </a>
        </li>
        <li>
         <a href="http://dribbble.com/LeaVerou">
          My dribbble shots
         </a>
        </li>
        <li>
         <a href="http://gr.linkedin.com/in/leaverou">
          My LinkedIn
         </a>
        </li>
        <!--&lt;li&gt;&lt;a href="http://www.tripit.com/people/leaverou"&gt;My traveling on TripIt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://last.fm/user/LeaVerou"&gt;Music I like on last.fm&lt;/a&gt;&lt;/li&gt;-->
       </ul>
      </div>
     </aside>
     <aside class="widget widget_text" id="text-5">
      <h1 class="widget-title">
       Ad packs
      </h1>
      <div class="textwidget">
       <!-- AdPacks.com Zone Code -->
       <script id="_adpacks_js" src="http://cdn.adpacks.com/adpacks.js?legacyid=1261373&amp;zoneid=1386&amp;key=67e1f7efa5300630944c625f7975b9b3&amp;serve=C6SI42Y&amp;placement=leaveroume&amp;circle=dev" type="text/javascript">
       </script>
       <!-- End AdPacks.com Zone Code -->
      </div>
     </aside>
     <aside class="widget widget_text" id="text-3">
      <h1 class="widget-title">
       Recent comments
      </h1>
      <div class="textwidget">
       <div class="dsq-widget" id="recentcomments">
        <script src="http://leaverou.disqus.com/recent_comments_widget.js?num_items=5&amp;hide_avatars=0&amp;avatar_size=32&amp;excerpt_length=200">
        </script>
       </div>
       <a href="http://disqus.com/">
        Powered by Disqus
       </a>
      </div>
     </aside>
     <aside class="widget widget_recent_entries" id="recent-posts-2">
      <h1 class="widget-title">
       Recent Posts
      </h1>
      <ul>
       <li>
        <a href="http://lea.verou.me/2015/06/conical-gradients-today/">
         Conical gradients, today!
        </a>
       </li>
       <li>
        <a href="http://lea.verou.me/2015/04/idea-extending-native-dom-prototypes-without-collisions/">
         Idea: Extending native DOM prototypes without collisions
        </a>
       </li>
       <li>
        <a href="http://lea.verou.me/2015/04/jquery-considered-harmful/">
         jQuery considered harmful
        </a>
       </li>
       <li>
        <a href="http://lea.verou.me/2015/02/awesomplete-2kb-autocomplete-with-zero-dependencies/">
         Awesomplete: 2KB autocomplete with zero dependencies
        </a>
       </li>
       <li>
        <a href="http://lea.verou.me/2014/07/an-easy-notation-for-grayscale-colors/">
         An easy notation for grayscale colors
        </a>
       </li>
       <li>
        <a href="http://lea.verou.me/2014/07/image-comparison-slider-with-pure-css/">
         Image comparison slider with pure CSS
        </a>
       </li>
       <li>
        <a href="http://lea.verou.me/2014/04/dynamically-generated-svg-through-sass-a-3d-animated-rgb-cube/">
         Dynamically generated SVG through SASS + A 3D animated RGB cube!
        </a>
       </li>
       <li>
        <a href="http://lea.verou.me/2014/02/im-going-to-mit/">
         Im going to MIT!!
        </a>
       </li>
       <li>
        <a href="http://lea.verou.me/2014/02/whathecolor-a-color-game-for-web-developers/">
         Introducing Whathecolor: A color game for web developers!
        </a>
       </li>
       <li>
        <a href="http://lea.verou.me/2014/01/vote-for-me-in-the-net-awards-2014/">
         Vote for me in the net awards 2014!
        </a>
       </li>
      </ul>
     </aside>
     <aside class="widget widget_tag_cloud" id="tag_cloud-2">
      <h1 class="widget-title">
       Tag cloud
      </h1>
      <div class="tagcloud">
       <a class="tag-link-45" href="http://lea.verou.me/tag/bookmarklets/" style="font-size: 8pt;" title="2 topics">
        bookmarklets
       </a>
       <a class="tag-link-21" href="http://lea.verou.me/tag/border-radius/" style="font-size: 9.4pt;" title="3 topics">
        border-radius
       </a>
       <a class="tag-link-59" href="http://lea.verou.me/tag/box-shadow/" style="font-size: 8pt;" title="2 topics">
        box-shadow
       </a>
       <a class="tag-link-30" href="http://lea.verou.me/tag/browsers/" style="font-size: 11.5pt;" title="5 topics">
        browsers
       </a>
       <a class="tag-link-46" href="http://lea.verou.me/tag/canvas/" style="font-size: 9.4pt;" title="3 topics">
        canvas
       </a>
       <a class="tag-link-41" href="http://lea.verou.me/tag/cmyk/" style="font-size: 9.4pt;" title="3 topics">
        CMYK
       </a>
       <a class="tag-link-42" href="http://lea.verou.me/tag/colors/" style="font-size: 14.533333333333pt;" title="10 topics">
        colors
       </a>
       <a class="tag-link-96" href="http://lea.verou.me/tag/conferences/" style="font-size: 14.066666666667pt;" title="9 topics">
        conferences
       </a>
       <a class="tag-link-18" href="http://lea.verou.me/tag/css/" style="font-size: 17.1pt;" title="17 topics">
        CSS
       </a>
       <a class="tag-link-19" href="http://lea.verou.me/tag/css3/" style="font-size: 22pt;" title="47 topics">
        CSS3
       </a>
       <a class="tag-link-131" href="http://lea.verou.me/tag/css3-animations/" style="font-size: 14.066666666667pt;" title="9 topics">
        CSS3 animations
       </a>
       <a class="tag-link-102" href="http://lea.verou.me/tag/css3-gradients/" style="font-size: 12.316666666667pt;" title="6 topics">
        css3 gradients
       </a>
       <a class="tag-link-20" href="http://lea.verou.me/tag/css3-properties/" style="font-size: 12.316666666667pt;" title="6 topics">
        CSS3 properties
       </a>
       <a class="tag-link-50" href="http://lea.verou.me/tag/css3-selectors/" style="font-size: 12.9pt;" title="7 topics">
        CSS3 selectors
       </a>
       <a class="tag-link-51" href="http://lea.verou.me/tag/css3-transitions/" style="font-size: 9.4pt;" title="3 topics">
        CSS3 transitions
       </a>
       <a class="tag-link-38" href="http://lea.verou.me/tag/css3-values/" style="font-size: 14.533333333333pt;" title="10 topics">
        CSS3 values
       </a>
       <a class="tag-link-78" href="http://lea.verou.me/tag/css-gradients/" style="font-size: 12.316666666667pt;" title="6 topics">
        CSS gradients
       </a>
       <a class="tag-link-6" href="http://lea.verou.me/tag/css-properties/" style="font-size: 8pt;" title="2 topics">
        CSS properties
       </a>
       <a class="tag-link-138" href="http://lea.verou.me/tag/dabblet/" style="font-size: 9.4pt;" title="3 topics">
        dabblet
       </a>
       <a class="tag-link-93" href="http://lea.verou.me/tag/es5/" style="font-size: 9.4pt;" title="3 topics">
        ES5
       </a>
       <a class="tag-link-5" href="http://lea.verou.me/tag/feature-detection/" style="font-size: 11.5pt;" title="5 topics">
        feature detection
       </a>
       <a class="tag-link-53" href="http://lea.verou.me/tag/forms/" style="font-size: 9.4pt;" title="3 topics">
        forms
       </a>
       <a class="tag-link-47" href="http://lea.verou.me/tag/gradient/" style="font-size: 8pt;" title="2 topics">
        gradient
       </a>
       <a class="tag-link-40" href="http://lea.verou.me/tag/html/" style="font-size: 9.4pt;" title="3 topics">
        HTML
       </a>
       <a class="tag-link-94" href="http://lea.verou.me/tag/html5/" style="font-size: 12.316666666667pt;" title="6 topics">
        HTML5
       </a>
       <a class="tag-link-3" href="http://lea.verou.me/tag/javascript/" style="font-size: 20.016666666667pt;" title="31 topics">
        JavaScript
       </a>
       <a class="tag-link-7" href="http://lea.verou.me/tag/javascript-libraries/" style="font-size: 8pt;" title="2 topics">
        JavaScript libraries
       </a>
       <a class="tag-link-8" href="http://lea.verou.me/tag/jquery/" style="font-size: 9.4pt;" title="3 topics">
        jQuery
       </a>
       <a class="tag-link-15" href="http://lea.verou.me/tag/math/" style="font-size: 8pt;" title="2 topics">
        Math
       </a>
       <a class="tag-link-55" href="http://lea.verou.me/tag/mysql/" style="font-size: 8pt;" title="2 topics">
        MySQL
       </a>
       <a class="tag-link-110" href="http://lea.verou.me/tag/patterns/" style="font-size: 9.4pt;" title="3 topics">
        patterns
       </a>
       <a class="tag-link-36" href="http://lea.verou.me/tag/performance/" style="font-size: 8pt;" title="2 topics">
        performance
       </a>
       <a class="tag-link-25" href="http://lea.verou.me/tag/php/" style="font-size: 12.9pt;" title="7 topics">
        PHP
       </a>
       <a class="tag-link-37" href="http://lea.verou.me/tag/regular-expressions/" style="font-size: 9.4pt;" title="3 topics">
        regular expressions
       </a>
       <a class="tag-link-24" href="http://lea.verou.me/tag/rgba/" style="font-size: 11.5pt;" title="5 topics">
        RGBA
       </a>
       <a class="tag-link-126" href="http://lea.verou.me/tag/speaking-2/" style="font-size: 12.316666666667pt;" title="6 topics">
        speaking
       </a>
       <a class="tag-link-136" href="http://lea.verou.me/tag/standards/" style="font-size: 12.316666666667pt;" title="6 topics">
        standards
       </a>
       <a class="tag-link-87" href="http://lea.verou.me/tag/svg/" style="font-size: 13.483333333333pt;" title="8 topics">
        SVG
       </a>
       <a class="tag-link-69" href="http://lea.verou.me/tag/twitter/" style="font-size: 8pt;" title="2 topics">
        twitter
       </a>
       <a class="tag-link-68" href="http://lea.verou.me/tag/unicode/" style="font-size: 9.4pt;" title="3 topics">
        Unicode
       </a>
       <a class="tag-link-49" href="http://lea.verou.me/tag/usability/" style="font-size: 14.066666666667pt;" title="9 topics">
        usability
       </a>
       <a class="tag-link-22" href="http://lea.verou.me/tag/vendor-prefixes/" style="font-size: 10.566666666667pt;" title="4 topics">
        Vendor prefixes
       </a>
       <a class="tag-link-137" href="http://lea.verou.me/tag/w3c/" style="font-size: 10.566666666667pt;" title="4 topics">
        W3C
       </a>
       <a class="tag-link-39" href="http://lea.verou.me/tag/webkit/" style="font-size: 8pt;" title="2 topics">
        Webkit
       </a>
       <a class="tag-link-23" href="http://lea.verou.me/tag/webkit-bugs/" style="font-size: 9.4pt;" title="3 topics">
        Webkit bugs
       </a>
      </div>
     </aside>
     <aside class="widget widget_categories" id="categories-351516821">
      <h1 class="widget-title">
       Categories
      </h1>
      <ul>
       <li class="cat-item cat-item-132">
        <a href="http://lea.verou.me/category/original/apps/">
         Apps &amp; scripts
        </a>
        (24)
       </li>
       <li class="cat-item cat-item-17">
        <a href="http://lea.verou.me/category/articles/" title="Helpful (I hope) articles without original content (unless they are also in the category &quot;Original&quot;) that just sum up techniques I've read about elsewhere.">
         Articles
        </a>
        (20)
       </li>
       <li class="cat-item cat-item-34">
        <a href="http://lea.verou.me/category/benchmarks/" title="Speed comparisons I did or found.">
         Benchmarks
        </a>
        (2)
       </li>
       <li class="cat-item cat-item-159">
        <a href="http://lea.verou.me/category/csswg/">
         CSS WG
        </a>
        (2)
       </li>
       <li class="cat-item cat-item-28">
        <a href="http://lea.verou.me/category/news/" title="Something new to our field that I've read about somewhere and just couldn't resist sharing.">
         News
        </a>
        (12)
       </li>
       <li class="cat-item cat-item-32">
        <a href="http://lea.verou.me/category/original/" title="Posts that hold POTENTIALLY original content, partially or totally. Content that I came up and havent read about somewhere else. It might not be actually original, as people often have the same ideas, its just original as far as my knowledge goes, which isnt infinite :P. IF it its actually original, then it's licensed through the MIT license.">
         Original
        </a>
        (57)
       </li>
       <li class="cat-item cat-item-29">
        <a href="http://lea.verou.me/category/personal/" title="Posts about stuff that is related to me, and not to Web design &amp; development.">
         Personal
        </a>
        (30)
       </li>
       <li class="cat-item cat-item-27">
        <a href="http://lea.verou.me/category/rants/" title='Things that make me mad about stuff related to my work. Like "Thoughts" but in a more angry fashion.'>
         Rants
        </a>
        (9)
       </li>
       <li class="cat-item cat-item-79">
        <a href="http://lea.verou.me/category/replies/" title="Replies to other people's blog posts that are lengthy enough to not fit in a comment.">
         Replies
        </a>
        (6)
       </li>
       <li class="cat-item cat-item-117">
        <a href="http://lea.verou.me/category/personal/speaking/">
         Speaking
        </a>
        (11)
       </li>
       <li class="cat-item cat-item-26">
        <a href="http://lea.verou.me/category/thoughts/" title="Doesn't contain anything new, or particularly helpful, just thoughts that cross my mind about stuff related to my work.">
         Thoughts
        </a>
        (17)
       </li>
       <li class="cat-item cat-item-16">
        <a href="http://lea.verou.me/category/tips/" title="Tips that boost your productivity">
         Tips
        </a>
        (40)
       </li>
       <li class="cat-item cat-item-1">
        <a href="http://lea.verou.me/category/uncategorized/">
         Uncategorized
        </a>
        (1)
       </li>
      </ul>
     </aside>
     <aside class="widget widget_links" id="linkcat-2">
      <h1 class="widget-title">
       Blogroll
      </h1>
      <ul class="xoxo blogroll">
       <li>
        <a href="http://www.wait-till-i.com/" target="_blank" title="Funny and insightful">
         Christian Heilmann's blog
        </a>
       </li>
       <li>
        <a href="http://css-tricks.com/" target="_blank" title="Chris Coyiers CSS resource. A must-subscribe if youre into CSS.">
         CSS Tricks
        </a>
       </li>
       <li>
        <a href="http://www.standardista.com/" rel="friend" target="_blank" title="In depth posts about CSS3 and HTML5">
         Estelle Weyl's blog
        </a>
       </li>
       <li>
        <a href="http://generatedcontent.org/" rel="sweetheart" title="David Storeys web dev blog">
         Generated Content
        </a>
       </li>
       <li>
        <a href="http://html5doctor.com/" target="_blank" title="If youre into HTML5, this is a must-follow">
         HTML5 doctor
        </a>
       </li>
       <li>
        <a href="http://michaeliahotel.com" target="_blank" title="Highly recommended!">
         Nice hotel in Petra, Lesvos, Greece
        </a>
       </li>
       <li>
        <a href="http://nimbupani.com/web-design.html" target="_blank" title="Very interesting CSS work">
         Nimbupani (Divya Manian's blog)
        </a>
       </li>
       <li>
        <a href="http://www.quirksmode.org/blog/" target="_blank" title="PPKs blog. Check out his site too, it contains extremely useful resources.">
         Quirksblog
        </a>
       </li>
       <li>
        <a href="http://www.robertnyman.com/" target="_blank" title="Robert Nymans personal weblog. Mostly about Javascript.">
         Roberts talk
        </a>
       </li>
       <li>
        <a href="http://simurai.com/" target="_blank" title="Very cool CSS3 magic and incredible design. Sadly, webkit-only for the most part.">
         Simurai
        </a>
       </li>
       <li>
        <a href="http://www.thecssninja.com/" target="_blank" title="CSS tricks and ideas that will blow your mind">
         The CSS Ninja
        </a>
       </li>
       <li>
        <a href="http://mkomvoutis.tumblr.com" rel="parent" target="_blank" title="My dads blog about Greek politics">
           [Greek]
        </a>
       </li>
      </ul>
     </aside>
    </div>
    <!-- #secondary .widget-area -->
   </div>
   <!-- #main -->
   <footer id="colophon" role="contentinfo">
    <div id="site-generator">
     <a href="http://wordpress.org/" rel="generator">
      Proudly powered by WordPress
     </a>
    </div>
   </footer>
   <!-- #colophon -->
  </div>
  <!-- #page -->
  <script src="http://lea.verou.me/wp-content/plugins/prism-syntax-highlighter/prism/prism.js?ver=1.0" type="text/javascript">
  </script>
  <!--stats_footer_test-->
  <script src="http://stats.wordpress.com/e-201529.js" type="text/javascript">
  </script>
  <script type="text/javascript">
   st_go({blog:'6530358',v:'ext',post:'0'});
var load_cmc = function(){linktracker_init(6530358,0,2);};
if ( typeof addLoadEvent != 'undefined' ) addLoadEvent(load_cmc);
else load_cmc();
  </script>
  <script>
   var _gaq = [['_setAccount', 'UA-25106441-4'],['_trackPageview']];
  </script>
  <script async="" src="http://www.google-analytics.com/ga.js">
  </script>
 </body>
</html>