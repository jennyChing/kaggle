<!DOCTYPE html>
<!--[if lt IE 7]&gt; &lt;html class="no-js ie ie6 lt-ie10 lt-ie9 lt-ie8 lt-ie7" lang="en"&gt; &lt;![endif]-->
<!--[if IE 7]&gt;    &lt;html class="no-js ie ie7 lt-ie10 lt-ie9 lt-ie8" lang="en"&gt; &lt;![endif]-->
<!--[if IE 8]&gt;    &lt;html class="no-js ie ie8 lt-ie10 lt-ie9" lang="en"&gt; &lt;![endif]-->
<!--[if IE 9]&gt;    &lt;html class="no-js ie ie9 lt-ie10" lang="en"&gt; &lt;![endif]-->
<!--[if gt IE 9]&gt;&lt;!-->
<html class="no-js" lang="en">
 <!--&lt;![endif]-->
 <head>
  <meta charset="utf-8"/>
  <link href="/site/rss" rel="alternate" title="A List Apart: The Full Feed" type="application/rss+xml"/>
  <link href="/site/abridged-rss" rel="alternate" title="A List Apart: The Abridged Feed (just articles and columns)" type="application/rss+xml"/>
  <meta content="width=device-width, initial-scale=1.0" name="viewport"/>
  <link href="/components/assets/img/favicons/favicon.ico" rel="shortcut icon" type="image/x-icon"/>
  <link href="/components/assets/img/favicons/apple-touch-icon.png" rel="apple-touch-icon"/>
  <link href="/components/assets/img/favicons/apple-touch-icon-57x57.png" rel="apple-touch-icon" sizes="57x57"/>
  <link href="/components/assets/img/favicons/apple-touch-icon-72x72.png" rel="apple-touch-icon" sizes="72x72"/>
  <link href="/components/assets/img/favicons/apple-touch-icon-76x76.png" rel="apple-touch-icon" sizes="76x76"/>
  <link href="/components/assets/img/favicons/apple-touch-icon-114x114.png" rel="apple-touch-icon" sizes="114x114"/>
  <link href="/components/assets/img/favicons/apple-touch-icon-120x120.png" rel="apple-touch-icon" sizes="120x120"/>
  <link href="/components/assets/img/favicons/apple-touch-icon-144x144.png" rel="apple-touch-icon" sizes="144x144"/>
  <link href="/components/assets/img/favicons/apple-touch-icon-152x152.png" rel="apple-touch-icon" sizes="152x152"/>
  <meta content="A List Apart" name="application-name"/>
  <meta content="#222222" name="msapplication-TileColor"/>
  <meta content="/components/assets/img/favicons/windows-8-tile.png" name="msapplication-TileImage"/>
  <link href="https://plus.google.com/+alistapart/" rel="publisher"/>
  <meta content="false" http-equiv="imagetoolbar"/>
  <link href="http://alistapart.com/d/_cache/60752e87345432991e7cd6b53c5d61e28e94f37f.1436465374.css" rel="stylesheet"/>
  <script src="/components/assets/js/libs/modernizr-custom.js">
  </script>
  <title>
   Progressive Enhancement with CSS  An A List Apart Article
  </title>
  <link href="/comments/feed/progressiveenhancementwithcss" rel="alternate" title="A feed for comments on this article" type="application/rss+xml"/>
  <style>
   .member_115879 {
		border: 1px solid rgba(0,0,0,.4) !important;
	}
	
	
	.member_115879::before {
		/*box-shadow: inset 0 0 18px -8px rgba(255,161,161,.9);*/
		content: url(/components/assets/img/laurel-white-2.svg) !important;
		padding-top: 3px !important;
		height: 23px !important;
	}
  </style>
  <link href="http://alistapart.com/article/progressiveenhancementwithcss" rel="canonical"/>
  <meta content="Organize multiple style sheets to simplify the creation of environmentally appropriate visual experiences. Support older browsers while keeping your CSS hack-free. Use generated content to provide visual enhancements, and seize the power of advanced selectors to create wondrous (or amusing) effects. Part two of a series." name="description"/>
  <meta content=" Aaron Gustafson" name="author"/>
  <meta content="summary" name="twitter:card"/>
  <meta content="@alistapart" name="twitter:site"/>
  <meta content="Progressive Enhancement with CSS" name="twitter:title"/>
  <meta content="Organize multiple style sheets to simplify the creation of environmentally appropriate visual experiences. Support older browsers while keeping your CSS hack-free. Use generated content to provide visual enhancements, and seize the power of advanced selectors to create wondrous (or amusing) effects. Part two of a series." name="twitter:description"/>
  <meta content="http://alistapart.com/article/progressiveenhancementwithcss" name="twitter:url"/>
  <meta content="Progressive Enhancement with CSS" property="og:title"/>
  <meta content="Organize multiple style sheets to simplify the creation of environmentally appropriate visual experiences. Support older browsers while keeping your CSS hack-free. Use generated content to provide visual enhancements, and seize the power of advanced selectors to create wondrous (or amusing) effects. Part two of a series." property="og:description"/>
  <meta content="http://alistapart.com/article/progressiveenhancementwithcss" property="og:url"/>
  <meta content="" property="og:image"/>
 </head>
 <body class="printable comments-exist">
  <header class="logo-holder">
   <h1 class="killer-logo" name="top">
    <a href="/">
     <img alt="A List Apart" src="/components/assets/img/ala-logo-big.png"/>
    </a>
   </h1>
   <a class="go-to-nav" href="#main-nav" title="skip to nav">
    Menu
   </a>
  </header>
  <div class="main-wrapper" role="main">
   <article class="article-layout hentry" itemscope="" itemtype="http://www.schema.org/Article">
    <header class="entry-header">
     <figure class="wide-hero">
      <p>
       <img alt="Progressive Enhancement with CSS" src="/d/progressiveenhancementwithcss/progenh.jpg"/>
      </p>
      <span itemprop="isPartOf" itemscope="" itemtype="http://schema.org/PublicationIssue">
       <a class="issue-number" href="/issue/270" itemprop="url">
        <span class="badge">
         Issue 
        </span>
        <span itemprop="issueNumber">
         270
        </span>
       </a>
       <p class="illustrator-credit" itemprop="contributor" itemscope="" itemtype="http://schema.org/Person">
        Illustration by
        <a href="/author/kcornell" itemprop="url">
         <span itemprop="name">
          Kevin Cornell
         </span>
        </a>
       </p>
      </span>
     </figure>
     <h1 class="entry-title" itemprop="headline name">
      Progressive Enhancement with CSS
     </h1>
     <p class="entry-details">
      <span itemprop="author" itemscope="" itemtype="http://schema.org/Person">
       by
       <a class="author" href="/author/agustafson" itemprop="url" rel="author">
        <span itemprop="name">
         Aaron Gustafson
        </span>
       </a>
      </span>
      <time class="pubdate updated" datetime="2008-10-21T04:00:41-04:00" itemprop="datePublished">
       October 21, 2008
      </time>
      <span class="entry-meta optional-break">
       Published in
       <a href="/topic/css">
        <span itemprop="about">
         CSS
        </span>
       </a>
       ,
       <a href="/topic/html">
        <span itemprop="about">
         HTML
        </span>
       </a>
       ,
       <a href="/topic/javascript">
        <span itemprop="about">
         JavaScript
        </span>
       </a>
      </span>
     </p>
    </header>
    <div class="main-content" itemprop="articleBody">
     <p>
      In the
      <a href="/articles/understandingprogressiveenhancement">
       previous article
      </a>
      in this series, we covered
      <a href="/articles/understandingprogressiveenhancement">
       the basic concept of progressive enhancement
      </a>
      ; now, we can begin discussing how to use it. There are many ways to integrate progressive enhancement into your work using Cascading Style Sheets (CSS), and this article will cover a few of the biggies and get you thinking about other ways to progressively enhance your sites.
     </p>
     <h2>
      Style sheet organization
     </h2>
     <div class="aside-breaker">
      <b>
       Article Continues Below
      </b>
     </div>
     <aside class="content-minutiae">
      <div class="minutiae-block share-block">
       <h1 class="propagation-enablers">
        Share this on
       </h1>
       <ul class="propagation-enablers">
        <li class="circle-twitter">
         <a data-trackevent="Share: Twitter" href="http://twitter.com/intent/tweet?url=http://alistapart.com/article/progressiveenhancementwithcss&amp;text=Progressive+Enhancement+with+CSS&amp;via=alistapart">
          <svg enable-background="new 0 0 274 224" version="1.1" viewbox="0 0 274 224" x="0px" xml:space="preserve" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" y="0px">
           <path d="M273.7,27.2c-10.1,4.5-20.9,7.5-32.2,8.8c11.6-6.9,20.5-17.9,24.7-31c-10.8,6.4-22.8,11.1-35.6,13.6
         C220.3,7.7,205.7,0.9,189.6,0.9c-31,0-56.1,25.1-56.1,56.1c0,4.4,0.5,8.7,1.5,12.8C88.3,67.4,47,45.1,19.3,11.2
         c-4.8,8.3-7.6,17.9-7.6,28.2c0,19.5,9.9,36.6,25,46.7c-9.2-0.3-17.8-2.8-25.4-7c0,0.2,0,0.5,0,0.7c0,27.2,19.3,49.8,45,55
         c-4.7,1.3-9.7,2-14.8,2c-3.6,0-7.1-0.4-10.6-1c7.1,22.3,27.9,38.5,52.4,39c-19.2,15-43.4,24-69.7,24c-4.5,0-9-0.3-13.4-0.8
         c24.8,15.9,54.3,25.2,86,25.2c103.2,0,159.6-85.5,159.6-159.6c0-2.4-0.1-4.9-0.2-7.3C256.7,48.3,266.2,38.5,273.7,27.2z">
           </path>
          </svg>
         </a>
        </li>
        <!--
-->
        <li class="circle-facebook">
         <a data-trackevent="Share: Facebook" href="http://www.facebook.com/sharer.php?u=http://alistapart.com/article/progressiveenhancementwithcss&amp;t=Progressive+Enhancement+with+CSS">
          <svg enable-background="new -95.6 286.6 114 220" version="1.1" viewbox="-95.6 286.6 114 220" x="0px" xml:space="preserve" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" y="0px">
           <path d="M-21.6,505.9v-99.8h33.5l5-38.9h-38.5v-24.8c0-11.3,3.1-18.9,19.3-18.9l20.6,0v-34.8
         c-3.6-0.5-15.8-1.5-30-1.5c-29.7,0-50,18.1-50,51.4v28.7h-33.6v38.9h33.6v99.8H-21.6z" id="f">
           </path>
          </svg>
         </a>
        </li>
        <!--
-->
        <li class="circle-google">
         <a data-trackevent="Share: Google+" href="https://plus.google.com/share?url=http://alistapart.com/article/progressiveenhancementwithcss">
          <svg enable-background="new -212.7 354.2 84 86" version="1.1" viewbox="-212.7 354.2 84 86" x="0px" xml:space="preserve" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" y="0px">
           <g>
            <g>
             <path d="M-168.4,403.2l-4-3.1c-1.2-1-2.9-2.3-2.9-4.8c0-2.4,1.7-4,3.1-5.4c4.6-3.7,9.3-7.5,9.3-15.7
               c0-8.4-5.3-12.9-7.8-15h6.8l7.2-4.5h-21.8c-6,0-14.6,1.4-20.9,6.6c-4.8,4.1-7.1,9.8-7.1,14.8c0,8.6,6.6,17.4,18.3,17.4
               c1.1,0,2.3-0.1,3.5-0.2c-0.5,1.3-1.1,2.4-1.1,4.3c0,3.4,1.8,5.5,3.3,7.5c-5,0.3-14.3,0.9-21.1,5.1c-6.5,3.9-8.5,9.5-8.5,13.5
               c0,8.2,7.7,15.8,23.8,15.8c19,0,29.1-10.5,29.1-20.9C-159.1,411.1-163.5,407.3-168.4,403.2z M-182.9,390.5
               c-9.5,0-13.8-12.3-13.8-19.7c0-2.9,0.5-5.9,2.4-8.2c1.8-2.2,4.9-3.7,7.7-3.7c9.2,0,13.9,12.4,13.9,20.4c0,2-0.2,5.5-2.8,8.1
               C-177.2,389.1-180.1,390.5-182.9,390.5z M-182.8,435c-11.8,0-19.5-5.7-19.5-13.5c0-7.9,7.1-10.5,9.5-11.4
               c4.6-1.6,10.6-1.8,11.6-1.8c1.1,0,1.7,0,2.5,0.1c8.4,6,12.1,9,12.1,14.6C-166.5,429.9-172.2,435-182.8,435z">
             </path>
             <polygon points="-140.5,390.3 -140.5,379.2 -146,379.2 -146,390.3 -157,390.3 -157,395.8 -146,395.8 -146,407
               -140.5,407 -140.5,395.8 -129.4,395.8 -129.4,390.3 		">
             </polygon>
            </g>
           </g>
          </svg>
         </a>
        </li>
       </ul>
      </div>
     </aside>
     <div class="utility-side-bar">
      <aside class="the-deck in-article">
       <div class="deck-inner">
        <script async="">
         //&lt;![CDATA[
										(function(id) {
										  document.write('&lt;script type="text/javascript" src="' +
										    'http://www.northmay.com/deck/deck' + id + '_js.php?' +
										    (new Date().getTime()) + '"&gt;&lt;/' + 'script&gt;');
										})("AL");
										//]]&gt;
        </script>
        <p>
         <a href="http://www.coudal.com/deck/">
          Ad via The Deck
         </a>
        </p>
       </div>
      </aside>
      <!--
-->
      <aside class="job-board in-article">
       <h4>
        Job Board
       </h4>
       <script src="https://weworkremotely.com/jobs/random.js">
       </script>
       <p class="board-link">
        Job listings via
        <a href="https://weworkremotely.com/?source=ala">
         We Work Remotely
        </a>
       </p>
      </aside>
     </div>
     <p>
      A lot of web designers and developers dont think much about how they incorporate stylesheets into their documents, but there is a real art to it. With the right methods, you can immediately gain many of the benefits of progressive enhancement.
     </p>
     <h3>
      Use multiple style sheets
     </h3>
     <p>
      There are many benefits to getting a little separation in your styles. Obviously, stylesheets that are 1500+ lines long are a bit hard to maintain and separating them into multiple stylesheets can improve your workflow (and your sanity). Another benefit not often considered is that this separation can help you obtain greater consistency of presentation across the media types you are targeting.
     </p>
     <p>
      Consider taking your
      <code>
       main.css
      </code>
      file, which contains all of the style rules for your site, and breaking it up into individual stylesheets containing typographic, layout, and color information. Name the files accordingly:
      <code>
       type.css
      </code>
      ,
      <code>
       layout.css
      </code>
      ,
      <code>
       color.css
      </code>
      .
     </p>
     <div class="illustration full left">
      <img alt="A graphic depicting the breakup of a single stylesheet into multiple, contextual stylesheets." src="/d/progressiveenhancementwithcss/separation.png"/>
      <p>
       How a single stylesheet is divided into multiple, contextual stylesheets.
      </p>
     </div>
     <p>
      Once youve done that, you can use a little wizardry to automatically provide a low-fi experience to older browsers (such as Internet Explorer 5/Mac) and many other browsers lacking solid support for
      <span class="caps">
       <span class="caps">
        CSS
       </span>
      </span>
      layouts. How? Well, its all in how you link to the files. Lets assume we started with a
      <code>
       main.css
      </code>
      file included via a
      <code>
       link
      </code>
      element:
     </p>
     <pre>
      &lt;link rel="stylesheet" type="text/css" href="main.css" /&gt;
     </pre>
     <p>
      First, well break it into separate calls to our three contextual stylesheets:
     </p>
     <pre>
      &lt;link rel="stylesheet" type="text/css" href="type.css" /&gt;
&lt;link rel="stylesheet" type="text/css" href="layout.css" /&gt;
&lt;link rel="stylesheet" type="text/css" href="color.css" /&gt;
     </pre>
     <p>
      In the past, many of us used a
      <code>
       media
      </code>
      value of screen,projection to put the kibosh on Netscape 4.x getting the layout styles, but theres a better way. Before we look at that solution though, lets think about alternate media types.
     </p>
     <h3>
      Working with alternate media types
     </h3>
     <p>
      Since content delivery is the main focus of progressive enhancement and we want to deliver an enhanced experience to any device that will support it, we should really begin to think beyond the browser; most importantly, we should be thinking about print and mobile.
     </p>
     <p>
      Unfortunately, the mobile market is still fragmented and immature (dont get me started on all the handheld browsers that think they should render styles targeted at the screen
      <code>
       media
      </code>
      type). Consequently, a discussion of the ins and outs of handling that medium in a progressively-enhanced way would take several articles, if not a whole book. But dont despair: things are beginning to gel a bit in the mobile world, and some very smart people are starting to put together
      <a href="http://mobilewebbook.com">
       resources
      </a>
      <a href="http://dev.mobi/">
       to help you
      </a>
      . But in the interest of time, and our collective sanity, well focus on print.
     </p>
     <p>
      Now, normally, we would add print styles with another
      <code>
       link
      </code>
      element:
     </p>
     <pre>
      &lt;link rel="stylesheet" type="text/css" media="print" 
href="print.css" /&gt;
     </pre>
     <p>
      Traditionally, this stylesheet would contain all of our print-related rules, including typographic and color rules. In the case of typography in particular, the rules in our print stylesheet most likely mirror those in our main stylesheet. In other words, we have a lot of duplication.
     </p>
     <p>
      This is where the separation of typographic and color styles from layout styles becomes a great asset: we no longer need those rules in our print stylesheet. On top of that, we can use another little organizational technique to improve the scalability of our site and hide certain layout styles from  problematic browsers.
     </p>
     <p>
      Lets start by revisiting our stylesheets. Consider the following:
     </p>
     <pre>
      &lt;link rel="stylesheet" type="text/css" href="type.css" /&gt;
&lt;link rel="stylesheet" type="text/css" href="layout.css" /&gt;
&lt;link rel="stylesheet" type="text/css" href="color.css" /&gt;
     </pre>
     <p>
      Now, since we dont have a media type declared, Netscape 4.x will read any styles in these three files, but we can use its very basic understanding of
      <span class="caps">
       <span class="caps">
        CSS
       </span>
      </span>
      against it and provide further organization for our style rules by moving all of the styles that
      <code>
       layout.css
      </code>
      contained into a new stylesheet, appropriately named screen.css. Finally, we update the contents of
      <code>
       layout.css
      </code>
      to import
      <code>
       screen.css
      </code>
      and
      <span class="caps">
       <span class="caps">
        NS4
       </span>
      </span>
      .x and its ilk wont be any the wiser (as they dont understand the
      <code>
       @import
      </code>
      directive).
     </p>
     <pre>
      @import 'screen.css';
     </pre>
     <p>
      Theres still a bit of room for improvement thoughwe should really declare which media that this stylesheet is for, and well do that by adding a media type to the
      <code>
       @import
      </code>
      declaration:
     </p>
     <pre>
      @import 'screen.css' screen;
     </pre>
     <p>
      The problem is that
      <span class="caps">
       IE7
      </span>
      and below wont understand this syntax and will ignore the stylesheet, but if you want to provide these styles to those browsers as well (which you probably will), you can do that quite easily using Conditional Comments, which well cover below. Those of you with eagle eyes may also have noticed the use of single quotes () instead of a double quotes () around the stylesheet name. This is a nifty trick for getting
      <span class="caps">
       IE5
      </span>
      /Mac to ignore a stylesheet. And since
      <span class="caps">
       IE5
      </span>
      /Macs
      <span class="caps">
       CSS
      </span>
      layout is pretty sketchy (especially when it comes to floats and positioning), hiding layout rules is a perfectly acceptable way to treat it. After all, it will still get the color and typography information, which counts for something.
     </p>
     <p>
      Using the same technique, we can import our
      <code>
       print.css
      </code>
      file (which contains, you guessed it, print-layoutspecific rules).
     </p>
     <pre>
      @import 'screen.css' screen;
@import 'print.css' print;
     </pre>
     <p>
      Not only do we have nicely organized stylesheets now, we also have an effective means of progressively enhancing the design of our site.
     </p>
     <!-- missing illustration?

&lt;div class="illustration full left"&gt;&lt;img  /&gt;&lt;p&gt;The interrelationship of multiple stylesheets and the method by which they are applied to the document.&lt;/p&gt;
&lt;/div&gt;
-->
     <h2>
      Now for the $10M question: how do we deal with
      <span class="caps">
       <span class="caps">
        IE6
       </span>
      </span>
      ?
     </h2>
     <p>
      To many folks, Internet Explorer 6 is the new Netscape 4everyone just wishes it would go away.
     </p>
     <p>
      Well skip the litany of problems in
      <span class="caps">
       <span class="caps">
        IE6
       </span>
      </span>
      ; its issues are
      <a href="http://www.positioniseverything.net/explorer.html">
       well-documented
      </a>
      and, honestly, not all that difficult to work around. Furthermore, the adoption of
      <span class="caps">
       <span class="caps">
        IE7
       </span>
      </span>
      has been especially swift (particularly in the consumer market) and
      <span class="caps">
       IE8
      </span>
      is already in beta, meaning that one day, we may actually be able to bid
      <dfn lang="fr" title="goodbye">
       adieu
      </dfn>
      to the aging 6.
     </p>
     <p>
      Whether it was intentional or not, Microsoft delivered a great tool for enabling progressive enhancement when it shipped
      <span class="caps">
       <span class="caps">
        IE5
       </span>
      </span>
      :
      <a href="http://msdn2.microsoft.com/en-us/library/ms537512.aspx">
       conditional comments
      </a>
      . These ingenious little bits of logic (which degrade to
      <span class="caps">
       <span class="caps">
        HTML
       </span>
      </span>
      comments in all other browsers) allow us not only to direct certain bits of markup at IE, but also to direct them at particular
      <em>
       versions
      </em>
      of IE.
     </p>
     <p>
      As web standards-aware developers, we should always start by testing our designs in the most standards-compliant browsers available, and then provide fixes for those browsers that just need a little nudge to get them on the right track. Everyones workflow is different, but I have found it best to start every project with a standard set of files. My base set includes the following:
     </p>
     <ul>
      <li>
       <code>
        type.css
       </code>
      </li>
      <li>
       <code>
        layout.css
       </code>
      </li>
      <li>
       <code>
        screen.css
       </code>
      </li>
      <li>
       <code>
        print.css
       </code>
      </li>
      <li>
       <code>
        color.css
       </code>
      </li>
     </ul>
     <p>
      Then, depending on the requirements of the project, I add browser-specific
      <span class="caps">
       <span class="caps">
        CSS
       </span>
      </span>
      files that contain the nudges. In most current projects those are
      <code>
       ie7.css
      </code>
      and
      <code>
       ie6.css
      </code>
      , though if the project calls for supporting an IE version earlier than 6, I will create a corresponding file for that one as well (
      <code>
       ie5.5.css
      </code>
      , etc.). With those files in place, I begin adding my style rules to the applicable stylesheet in my base set.
     </p>
     <p>
      I start all of my
      <span class="caps">
       <span class="caps">
        CSS
       </span>
      </span>
      testing in Mozilla Firefox because I write the bulk of my
      <span class="caps">
       <span class="caps">
        CSS
       </span>
      </span>
      using its Edit
      <span class="caps">
       <span class="caps">
        CSS
       </span>
      </span>
      sidebar. As soon as I have wrapped a page design in Firefox, I fire up other browsers to take a peek. Most perform flawlessly, as they grok web standards. Then its on to
      <span class="caps">
       <span class="caps">
        IE7
       </span>
      </span>
      . In most cases, I dont find many issues, but occasionally theres a need to invoke
      <a href="http://www.satzansatz.de/cssd/onhavinglayout.html">
       hasLayout
      </a>
      or fix another minor layout glitch. Instead of adding those fixes to my base set of stylesheets, I add them to
      <code>
       ie7.css
      </code>
      and then link that file in the
      <code>
       HEAD
      </code>
      of the document, inside a conditional comment:
     </p>
     <pre>
      &lt;!--[if lte IE 7]&gt;
&lt;link rel="stylesheet" type="text/css" href="ie7.css" /&gt;
&lt;![endif]--&gt;
     </pre>
     <p>
      That conditional comment directs that particular stylesheet to any version of IE less than or equal to (lte) 7. So, if someone comes to this page in
      <span class="caps">
       <span class="caps">
        IE7
       </span>
      </span>
      , they will get the fixes I have applied within, but if they come in a newer versionwhich may have fixed those rendering issues as
      <span class="caps">
       IE8
      </span>
      has done by abolishing
      <code>
       hasLayout
      </code>
      the stylesheet will be ignored. On the flip side, if someone comes to this page with
      <span class="caps">
       <span class="caps">
        IE6
       </span>
      </span>
      , they will get the fixes from this stylesheet, which is perfect, as any rendering error present in
      <span class="caps">
       <span class="caps">
        IE7
       </span>
      </span>
      is likely to be present in
      <span class="caps">
       <span class="caps">
        IE6
       </span>
      </span>
      as well. One such fix would be to cover for IEs inability (in versions 7 and below) to understand a media-typed
      <code>
       @import
      </code>
      (as mentioned above) by adding an
      <code>
       @import
      </code>
      for screen.css to the top of ie7.css without declaring a media type, thereby importing the styles that were missed the first time around.
     </p>
     <p>
      Once I am done adding the fixes for
      <span class="caps">
       <span class="caps">
        IE7
       </span>
      </span>
      , I open
      <span class="caps">
       <span class="caps">
        IE6
       </span>
      </span>
      and see if it needs a little hand-holding as well. If it does, I add another conditional comment to the document, linking out to
      <code>
       ie6.css
      </code>
      .
     </p>
     <pre>
      &lt;!--[if lte IE 7]&gt;
&lt;link rel="stylesheet" type="text/css" href="ie7.css" /&gt;

&lt;link rel="stylesheet" type="text/css" href="ie6.css" /&gt;
&lt;![endif]--&gt;
     </pre>
     <p>
      Then, I simply add the fixes required for
      <span class="caps">
       <span class="caps">
        IE6
       </span>
      </span>
      to that stylesheet and they will be ignored by
      <span class="caps">
       <span class="caps">
        IE7
       </span>
      </span>
      , but will still trickle down to
      <span class="caps">
       <span class="caps">
        IE5
       </span>
       .5
      </span>
      .5, etc.
     </p>
     <p>
      Using conditional comments in this way allows you to easily manage the browsers you need to target for your project
      <em>
       and
      </em>
      keep your
      <span class="caps">
       <span class="caps">
        CSS
       </span>
      </span>
      files hack free.
     </p>
     <h2>
      Other considerations
     </h2>
     <p>
      Progressive enhancements in
      <span class="caps">
       <span class="caps">
        CSS
       </span>
      </span>
      arent limited to how we associate our stylesheets with our documents: we can also apply the concept to how we write our
      <span class="caps">
       <span class="caps">
        CSS
       </span>
      </span>
      .
     </p>
     <p>
      Consider generated content, for instance. Not all browsers can handle it yet, but it is a great way to add in additional bits of design or text that are not necessary to the usability of the page, but that provide some visual or other enhancement.
     </p>
     <p>
      For example, take this simple contact form:
     </p>
     <div class="illustration full left">
      <img alt="A screenshot of the HTML form used in this example (code is provided below)." src="/d/progressiveenhancementwithcss/form.png"/>
      <p>
       The
       <span class="caps">
        HTML
       </span>
       form used in this example (code is provided below).
      </p>
     </div>
     <p>
      When coding this, you may be tempted to put those colons (:) inside the
      <code>
       label
      </code>
      element. Why? Do they add anything to the
      <code>
       label
      </code>
      s? No. While they do serve a purpose, to provide additional visual cues to a user, they are superfluous to the
      <code>
       label
      </code>
      and should be left out (Line wraps marked 
      <em>
       Ed.
      </em>
      ):
     </p>
     <pre>
      &lt;form id="contact-form" method="post"&gt;
  &lt;fieldset&gt;
    &lt;legend&gt;Contact Us
    &lt;p&gt;Send us a message. All fields are required.&lt;/p&gt;
&lt;ol&gt;
    &lt;li&gt;
        &lt;label for="contact-name"&gt;Name&lt;/label&gt;
        &lt;input type="text" id="contact-name" name="name" /&gt;
      &lt;/li&gt;    &lt;li&gt;
        &lt;label for="contact-email"&gt;Email&lt;/label&gt;
        &lt;input type="text" id="contact-email" name="email" /&gt;
      &lt;/li&gt;
    &lt;li&gt;&lt;label for="contact-message"&gt;Message&lt;/label&gt;
        &lt;textarea id="contact-message" name="message" rows="4" 
        cols="30"&gt;&lt;/textarea&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
    &lt;button type="submit"&gt;Send It&lt;/button&gt;  &lt;/fieldset&gt;
&lt;/form&gt;
     </pre>
     <p>
      Generated content is a perfectly appropriate way to add them back into the document:
     </p>
     <pre>
      label:after {
  content: ":";
}
     </pre>
     <p>
      Approaching the form in this way gives us the flexibility to remove those decorations from our entire site by simply editing the
      <span class="caps">
       <span class="caps">
        CSS
       </span>
      </span>
      , rather than having to touch each and every form (and yes, Ive been there). This technique also degrades nicely because the form is not rendered useless without the colonsa perfect example of progressive enhancement.
     </p>
     <p>
      You may also find that writing rules with more advanced selectors helps you progressively enhance your site by targeting certain styles to more advanced browsers. One great example is the attribute selector, which is not understood (and is, therefore, ignored) by
      <span class="caps">
       <span class="caps">
        IE6
       </span>
      </span>
      and others of its generation and earlier. Egor Kloos played with this concept beautifully in his submission to the
      <span class="caps">
       <span class="caps">
        CSS
       </span>
      </span>
      Zen Garden titled 
      <a href="http://www.csszengarden.com/062/">
       Gemination
      </a>
      .
     </p>
     <div class="illustration full left">
      <img alt="A comparison of Egor Kloos' CSS Zen Garden entry (Gemination) as viewed in standards aware browsers and IE6." src="/d/progressiveenhancementwithcss/gemination.jpg"/>
      <p>
       A comparison of Egor Kloos
       <span class="caps">
        CSS
       </span>
       Zen Garden entry (Gemination) as viewed in standards aware browsers and
       <span class="caps">
        IE6
       </span>
       .
      </p>
     </div>
     <p>
      How did he do it? Well, the following is a slightly modified sampling from his code:
     </p>
     <pre>
      /*
      <p>
       The differences are striking and illustrate beautifully how progressive enhancement can be implemented in your
       <span class="caps">
        <span class="caps">
         CSS
        </span>
       </span>
       .
      </p>
      <p>
       In a similar vein, Andy Clarke had a little fun with
       <span class="caps">
        <span class="caps">
         IE6
        </span>
       </span>
       on
       <a href="http://stuffandnonsense.co.uk">
        his site
       </a>
       . By tapping into the filters available in IE and employing some conditional comments, he was able to strip all of the color from his website and provide some alternative imagery for a truly low-fi experience.
      </p>
      <div class="illustration full left">
       <img alt="A comparison of Andy Clark's website in standards-aware browsers and IE6." src="/d/progressiveenhancementwithcss/stuff-and-nonsense.jpg"/>
       <p>
        A comparison of Andy Clarks website in standards-aware browsers and
        <span class="caps">
         IE6
        </span>
        .
       </p>
      </div>
      <p>
       The image-graying technique is accomplished by adding the following declaration block in a stylesheet directed at
       <span class="caps">
        <span class="caps">
         IE6
        </span>
       </span>
       (and under) by using conditional comments:
      </p>
      <pre>
       /* =img for Internet Explorer
       <p>
        Though these two examples may include more tricks than you can get away with in your day-to-day work, they certainly serve as excellent proofs-of-concept for the ways in which you can practice progressive enhancement with
        <span class="caps">
         <span class="caps">
          CSS
         </span>
        </span>
        .
       </p>
       <h2>
        Putting it all together
       </h2>
       <p>
        As weve discussed, there are numerous ways to begin implementing progressive enhancement on your site using
        <span class="caps">
         <span class="caps">
          CSS
         </span>
        </span>
        . The easiest, and perhaps best, way to begin is by organizing your stylesheets and making informed decisions about how those stylesheets will be connected to your document. Handling the idiosyncrasies of IE is a breeze once you understand the power of conditional comments, and you can accomplish more granular tweaking in the
        <span class="caps">
         <span class="caps">
          CSS
         </span>
        </span>
        itself if youre discerning about the selectors you choose and the situations in which you use them.
       </p>
       <p>
        Armed with this knowledge, you should be well on your way to becoming a progressive enhancement expert. Join me next time, when we discuss progressive enhancement with JavaScript.
       </p>
       <!-- START RELATED SIDEBAR -->
       <aside class="sidebar var1" id="related">
        <i class="widget-branding ala">
        </i>
        <!-- if a follow up has not been selected, and the issue has two articles show the other article -->
        <section>
         <h1>
          Also in Issue 270
         </h1>
         <article>
          <h1>
           <a data-trackevent="Related sidebar: Also in issue" href="/article/workingfromhomereadersrespond">
            Working From Home: The Readers Respond
           </a>
          </h1>
          <p>
           We asked. Our gentle readers answered. In A List Apart No. 263 we inquired how you walk the blurry line when you work from home....
          </p>
         </article>
        </section>
        <!-- end first block -->
        <!-- show categories -->
        <section class="related-articles">
         <h1 class="primary-cat-header">
          Further reading about
          <a data-trackevent="Related sidebar: Related by category" href="/topic/code">
           Code
          </a>
         </h1>
         <article>
          <h2>
           <a href="http://alistapart.com/article/responsive-comping-obtaining-signoff-with-mockups">
            Responsive Comping: Obtaining Signoff without Mockups
           </a>
          </h2>
          <p>
           If youre making websites, chances are youve given some thought to what constitutes a responsive-friendly design...
          </p>
          <h2>
           <a href="http://alistapart.com/article/mo-pixels-mo-problems">
            Mo Pixels Mo Problems
           </a>
          </h2>
          <p>
           Mobile devices are shipping with higher and higher PPI, and desktops and laptops are following the trend as well. Theres no...
          </p>
         </article>
        </section>
       </aside>
       <!-- END RELATED SIDEBAR -->
       <footer class="entry-footer">
        <h1>
         About the Author
        </h1>
        <div class="byline author vcard">
         <a class="photo" href="/author/agustafson">
          <img alt="" src="/d/_made/pix/authors/uploads/photo_115879_120_120_c1.jpg"/>
         </a>
         <h2>
          <a class="fn" href="/author/agustafson">
           Aaron Gustafson
          </a>
         </h2>
         <div class="author-bio">
          <p>
           As would be expected from a former manager of the Web Standards Project, Aaron Gustafson is passionate about web standards and accessibility. He has been working on the web for nearly two decades and recently joined Microsoft as a web standards advocate to work closely with their browser team. He writes about whatevers on his mind at
           <a href="http://www.aaron-gustafson.com/" onclick="window.open(this.href); return false;">
            aaron-gustafson.com
           </a>
           .
          </p>
         </div>
         <h3>
          More from this Author
         </h3>
         <ul class="author-more">
          <li>
           <a href="http://alistapart.com/article/now-you-see-me">
            Now You See Me
           </a>
          </li>
          <li>
           <a href="http://alistapart.com/article/stop-forking-with-css3">
            Stop Forking with CSS3
           </a>
          </li>
          <li>
           <a href="http://alistapart.com/article/progressiveenhancementwithjavascript">
            Progressive Enhancement with JavaScript
           </a>
          </li>
         </ul>
        </div>
       </footer>
       <aside class="promo-box email-promo">
        <b>
         Get our latest articles in your inbox.
        </b>
        <a data-trackevent="Post-article: email promo" href="/email-signup">
         Sign up for email alerts
        </a>
        .
       </aside>
      </pre>
     </pre>
    </div>
    <div class="post-article">
     <div class="column-holder unequal-columns">
      <section class="column comment-holder" id="comments">
       <h1 class="classy" itemprop="commentCount">
        70 Reader Comments
       </h1>
       <a class="buttonish" data-url-title="progressiveenhancementwithcss" href="/comments/progressiveenhancementwithcss" id="load-comments">
        Load Comments
       </a>
      </section>
      <aside class="column more-content">
       <h1 class="classy">
        More from ALA
       </h1>
       <h2>
        Columns
       </h2>
       <article class="item-summary article">
        <span class="column-name">
         Rachel Andrew
         <i>
          on
         </i>
         the Business of Web Dev
        </span>
        <h1>
         <a data-trackevent="More from ALA: column" href="/column/small-business-software-audits">
          Software Audits for the Tiny Business
         </a>
        </h1>
        <img alt="" src="/d/_made/pix/authors/uploads/photo_131322_60_60_c1.jpg"/>
        <p>
         Full access to the software and services your business runs on is crucial; be sure you know all current license and login details.
        </p>
        <footer class="byline">
         <time class="pubdate updated" datetime="2015-07-02T08:29:00-04:00">
          July 02, 2015
         </time>
        </footer>
       </article>
       <article class="item-summary article">
        <span class="column-name">
         Rian van der Merwe
         <i>
          on
         </i>
         A View from a Different Valley
        </span>
        <h1>
         <a data-trackevent="More from ALA: column" href="/column/unsuck-the-enterprise">
          Unsuck the Enterprise
         </a>
        </h1>
        <img alt="" src="/d/_made/pix/authors/uploads/photo_129376_60_60_c1.jpg"/>
        <p>
         A framework to make enterprise software development better for everyone.
        </p>
        <footer class="byline">
         <time class="pubdate updated" datetime="2015-06-25T08:29:00-04:00">
          June 25, 2015
         </time>
        </footer>
       </article>
       <h2>
        From the Blog
       </h2>
       <article class="item-summary article">
        <h1>
         <a data-trackevent="More from ALA: blog" href="/blog/post/on-our-radar-four-and-a-horse-stars">
          On Our Radar: Four-and-a-Horse Stars
         </a>
        </h1>
        <p>
         The ALA staff is reading about icon font accessibility issues, talent incubators in Africa, the new WICG, WebAssembly, and more.
        </p>
        <footer>
         <a class="aside-author" href="/author/alastaff">
          ALA Staff
         </a>
         <time class="pubdate updated" datetime="2015-07-10T10:30:00-04:00">
          <a data-trackevent="More from ALA: blog" href="/blog/post/on-our-radar-four-and-a-horse-stars">
           July 10, 2015
          </a>
         </time>
        </footer>
       </article>
       <article class="item-summary article">
        <h1>
         <a data-trackevent="More from ALA: blog" href="/blog/post/the-latest-flash-0-day-is-no-joke">
          The Latest Flash 0-day is no Joke
         </a>
        </h1>
        <p>
         Don't even read this post, go patch Flash now. I'm not kidding.
        </p>
        <footer>
         <a class="aside-author" href="/author/murtaugh">
          Tim Murtaugh
         </a>
         <time class="pubdate updated" datetime="2015-07-09T13:10:00-04:00">
          <a data-trackevent="More from ALA: blog" href="/blog/post/the-latest-flash-0-day-is-no-joke">
           July 09, 2015
          </a>
         </time>
        </footer>
       </article>
       <article class="item-summary article">
        <h1>
         <a data-trackevent="More from ALA: blog" href="/blog/post/designing-for-non-native-speakers">
          Designing for Non-Native Speakers
         </a>
        </h1>
        <p>
         Designing for non-native English speakers might be easier than you think. Here are three areas to focus on as you get started.
        </p>
        <footer>
         <a class="aside-author" href="/author/senongo-akpem">
          Senongo Akpem
         </a>
         <time class="pubdate updated" datetime="2015-07-08T08:30:00-04:00">
          <a data-trackevent="More from ALA: blog" href="/blog/post/designing-for-non-native-speakers">
           July 08, 2015
          </a>
         </time>
        </footer>
       </article>
       <article class="item-summary article">
        <h1>
         <a data-trackevent="More from ALA: blog" href="/blog/post/feedback-phases-and-personas">
          Feedback Phases and Personas
         </a>
        </h1>
        <p>
         These five feedback personas will help you get valuable feedback for your project, right when you need it most.
        </p>
        <footer>
         <a class="aside-author" href="/author/acolangelo">
          Anthony Colangelo
         </a>
         <time class="pubdate updated" datetime="2015-07-06T08:30:00-04:00">
          <a data-trackevent="More from ALA: blog" href="/blog/post/feedback-phases-and-personas">
           July 06, 2015
          </a>
         </time>
        </footer>
       </article>
       <article class="item-summary article">
        <h1>
         <a data-trackevent="More from ALA: blog" href="/blog/post/oor-precious-humans">
          On Our Radar: Precious Humans
         </a>
        </h1>
        <p>
         In the latest staff link roundup, we talk SVGs, better meetings, historical posters, and friend-of-the-web Molly Holzschlag.
        </p>
        <footer>
         <a class="aside-author" href="/author/alastaff">
          ALA Staff
         </a>
         <time class="pubdate updated" datetime="2015-06-26T12:10:00-04:00">
          <a data-trackevent="More from ALA: blog" href="/blog/post/oor-precious-humans">
           June 26, 2015
          </a>
         </time>
        </footer>
       </article>
       <div class="bsaPROrocks" data-serve="C67DL2E" id="bsap_1032">
       </div>
      </aside>
     </div>
    </div>
   </article>
  </div>
  <footer class="global-footer">
   <h1 class="deadly-subtitle">
    For people who make websites.
   </h1>
   <ul class="inline-items">
    <li>
     <a href="/about">
      About
     </a>
    </li>
    <li>
     <a href="/authors">
      Authors
     </a>
    </li>
    <li>
     <a href="/about/masthead">
      Masthead
     </a>
    </li>
    <li>
     <a href="/about/style-guide">
      Style Guide
     </a>
    </li>
    <li>
     <a href="/contact">
      Contact
     </a>
    </li>
    <li>
     <a href="/about/sponsor">
      Sponsorships
     </a>
    </li>
    <li class="head-east-young-man">
     Follow us:
     <a href="/about/rss">
      RSS
     </a>
     
     <a href="/email-signup/">
      Email
     </a>
     
     <a href="http://www.facebook.com/alistapart">
      Facebook
     </a>
     
     <a href="https://plus.google.com/107749003388305496076" rel="publisher">
      Google+
     </a>
     
     <a href="http://www.twitter.com/alistapart">
      Twitter
     </a>
    </li>
   </ul>
   <aside class="promo-holder">
    <ul class="partner-promos">
     <li>
      <a href="http://abookapart.com">
       <img alt="" src="/components/assets/img/promo_aba.png"/>
       <h1>
        A Book Apart
       </h1>
       <p>
        Mobile First &amp; Responsive Web Design bundle.
       </p>
       <p>
        Buy both and save!
       </p>
       <p class="arrow">
        Order now
       </p>
      </a>
     </li>
     <!--
-->
     <li>
      <a href="http://aneventapart.com">
       <img alt="" src="/components/assets/img/promo_aea.png"/>
       <h1>
        An Event Apart
       </h1>
       <p>
        Three days of design, code, and content for people who make websites.
       </p>
       <p class="arrow">
        See the 2015 schedule
       </p>
      </a>
     </li>
    </ul>
   </aside>
   <ul class="inline-items copyright">
    <li>
     <small>
      ISSN 1534-0295  Copyright  19982015 A List Apart &amp; Our Authors
     </small>
     <small>
      <a href="/about/copyright">
       Permissions &amp; Copyright
      </a>
      
      <a href="http://webtype.com">
       Fonts by Webtype
      </a>
     </small>
    </li>
    <li class="affiliates head-east-young-man">
     <a class="aea" href="http://aneventapart.com" title="An Event Apart">
      An Event Apart
     </a>
     <a class="hc" href="http://happycog.com" title="Happy Cog">
      Happy Cog
     </a>
     <a class="aba" href="http://abookapart.com" title="A Book Apart">
      A Book Apart
     </a>
     <a class="arcus" href="https://arcustech.com" title="Hosting provided by Arcustech">
      Arcustech
     </a>
    </li>
   </ul>
  </footer>
  <div class="bsaPROrocks" data-serve="C67DL2V" id="bsap_1031">
  </div>
  <nav class="global-nav" id="main-nav" role="navigation">
   <ul class="inline-items">
    <li>
     <a href="/">
      Home
     </a>
    </li>
    <li class="active">
     <a href="/articles">
      Articles
     </a>
    </li>
    <li>
     <a href="/columns">
      Columns
     </a>
    </li>
    <li>
     <a href="/blog">
      Blog
     </a>
    </li>
    <li>
     <a href="/events">
      Events
     </a>
    </li>
    <li>
     <a href="/topics">
      Topics
     </a>
    </li>
    <li>
     <a href="/about/contribute">
      Write for us
     </a>
    </li>
    <li class="back-to-top">
     <a href="#top">
      Back to top
     </a>
    </li>
    <li class="head-east-young-man">
     <form action="http://www.google.com/search" class="main-search" data-action="/search" id="main-search" method="GET">
      <input name="sitesearch" type="hidden" value="alistapart.com"/>
      <label for="search-keywords">
       <input aria-label="Search" data-name="keywards" id="search-keywords" name="q" placeholder="Search" required="required" type="search" value=""/>
      </label>
      <input alt="Submit" data-fallback="/components/assets/img/icon_magnify_v.png" id="submit-search" name="submit" src="/components/assets/img/icon_magnify_v.svg" type="image"/>
     </form>
    </li>
   </ul>
  </nav>
  <!-- Grab Google CDN's jQuery, with a protocol relative URL; fall back to local if offline -->
  <script src="//ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js">
  </script>
  <script>
   window.jQuery || document.write('/components/assets/js/libs/jquery-1.8.2.min.js"&gt;&lt;\/script&gt;')
  </script>
  <script src="http://alistapart.com/d/_cache/0a74f0fa610b60e4b71bae99d235b4b227bac859.1430903919.js">
  </script>
  <!-- BuySell Ads -->
  <script>
   (function(){var bsa = document.createElement('script');bsa.type = 'text/javascript';bsa.async = true;bsa.src = '//cdn.buysellads.com/ac/pro.js';document.getElementsByTagName('head')[0].appendChild(bsa);})();
  </script>
  <script>
   var _qevents = _qevents || [];
	
	(function() {
	var elem = document.createElement('script');
	elem.src = (document.location.protocol == "https:" ? "https://secure" : "http://edge") + ".quantserve.com/quant.js";
	elem.async = true;
	elem.type = "text/javascript";
	var scpt = document.getElementsByTagName('script')[0];
	scpt.parentNode.insertBefore(elem, scpt);
	})();
	
	_qevents.push({qacct:"p-0Gb-D0fnDnm2s"});
  </script>
  <noscript>
   <div style="display:none;">
    <img alt="" height="1" src="//pixel.quantserve.com/pixel/p-0Gb-D0fnDnm2s.gif" width="1"/>
   </div>
  </noscript>
  <script>
   var _gaq=[['_setAccount','UA-11757054-1'],['_trackPageview']];
	(function(d,t){var g=d.createElement(t),s=d.getElementsByTagName(t)[0];
	g.src=('https:'==location.protocol?'//ssl':'//www')+'.google-analytics.com/ga.js';
	s.parentNode.insertBefore(g,s)}(document,'script'));
  </script>
  <!-- start Mixpanel -->
  <script type="text/javascript">
   (function(e,b){if(!b.__SV){var a,f,i,g;window.mixpanel=b;a=e.createElement("script");a.type="text/javascript";a.async=!0;a.src=("https:"===e.location.protocol?"https:":"http:")+'//cdn.mxpnl.com/libs/mixpanel-2.2.min.js';f=e.getElementsByTagName("script")[0];f.parentNode.insertBefore(a,f);b._i=[];b.init=function(a,e,d){function f(b,h){var a=h.split(".");2==a.length&amp;&amp;(b=b[a[0]],h=a[1]);b[h]=function(){b.push([h].concat(Array.prototype.slice.call(arguments,0)))}}var c=b;"undefined"!==
	typeof d?c=b[d]=[]:d="mixpanel";c.people=c.people||[];c.toString=function(b){var a="mixpanel";"mixpanel"!==d&amp;&amp;(a+="."+d);b||(a+=" (stub)");return a};c.people.toString=function(){return c.toString(1)+".people (stub)"};i="disable track track_pageview track_links track_forms register register_once alias unregister identify name_tag set_config people.set people.set_once people.increment people.append people.track_charge people.clear_charges people.delete_user".split(" ");for(g=0;g&lt;i.length;g++)f(c,i[g]);
	b._i.push([a,e,d])};b.__SV=1.2}})(document,window.mixpanel||[]);
	mixpanel.init("204b563994d022408e4b540a66fe6136");
  </script>
  <!-- end Mixpanel -->
  <script type="text/javascript">
   WebFontConfig = {
    custom: { families: [ 'Franklin ITC:regular,bold',
                  'Franklin ITC Light:regular,italic' ],
    urls: [ '//cloud.webtype.com/css/789ea108-396c-4a3c-b0d2-f1974589df48.css' ]}
  };
  (function() {
    var wf = document.createElement('script');
    wf.src = ('https:' == document.location.protocol ? 'https' : 'http') +
        '://ajax.googleapis.com/ajax/libs/webfont/1/webfont.js';
    wf.type = 'text/javascript';
    wf.async = 'true';
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(wf, s);
  })();
  </script>
 </body>
</html>